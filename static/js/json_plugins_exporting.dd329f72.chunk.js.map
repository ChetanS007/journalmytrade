{"version":3,"file":"static/js/json_plugins_exporting.dd329f72.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/Picture.ts","../node_modules/src/.internal/plugins/exporting/Exporting.ts","../node_modules/src/.internal/plugins/exporting/ExportingCSS.ts","../node_modules/src/.internal/plugins/exporting/ExportingMenu.ts","../node_modules/src/.internal/plugins/exporting/Annotator.ts"],"sourcesContent":["import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteEvents, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\nexport interface IPictureEvents extends ISpriteEvents {\n\n\t/**\n\t * Invoked when picture is loaded.\n\t */\n\tloaded: {};\n\n\t/**\n\t * Invoked when picture load error happens.\n\t */\n\tloaderror: {};\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\tdeclare public _events: IPictureEvents;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tlet eventType: \"loaded\" | \"loaderror\" = \"loaded\";\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t}).catch((_error: any) => {\n\t\t\t\teventType = \"loaderror\";\n\t\t\t});\n\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n","import type { ExportingMenu } from \"./ExportingMenu\"\nimport type { TimeUnit } from \"../../core/util/Time\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { Color } from \"../../core/util/Color\";\nimport { Root } from \"../../core/Root\"\nimport { StyleRule } from \"../../core/util/Utils\"\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IFile {\n\tpath: string;\n\tbytes: string;\n}\n\nexport interface IFont {\n\tname: string;\n\tnormal: IFile;\n\tbold?: IFile;\n\titalics?: IFile;\n\tbolditalics?: IFile;\n}\n\n/**\n * This is used to cache the pdfmake loading.\n *\n * @ignore\n */\nlet pdfmakePromise: Promise<any>;\n\n/**\n * Loads pdfmake dynamic module\n *\n * This is an asynchronous function. Check the description of `getImage()`\n * for description and example usage.\n *\n * @ignore\n */\nasync function _pdfmake(): Promise<any> {\n\tlet a = await Promise.all([\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"./pdfmake/vfs_fonts\")\n\t]);\n\n\tlet pdfmake = a[0].default;\n\tlet vfs_fonts = a[1].default;\n\tconst global = <any>window;\n\tglobal.pdfMake = global.pdfMake || {};\n\tglobal.pdfMake.vfs = vfs_fonts;\n\tpdfmake.vfs = vfs_fonts;\n\treturn pdfmake;\n}\n\nexport type ExportingTypes = \"image\" | \"data\" | \"print\";\nexport type ExportingFormats = \"png\" | \"jpg\" | \"canvas\" | \"pdf\" | \"xlsx\" | \"csv\" | \"json\" | \"html\" | \"pdfdata\" | \"print\";\nexport type ExportingImageFormats = \"png\" | \"jpg\";\n\nexport interface IExportingImageSource {\n\n\t/**\n\t * A root object of an extra chart to add in export.\n\t */\n\tsource: Root;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Position to place extra image in releation to the main chart.\n\t *\n\t * @default \"bottom\"\n\t */\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\n\n\t/**\n\t * Crop extra image if it's larger than the main chart.\n\t */\n\tcrop?: boolean;\n\n}\n\nexport interface IExportingSettings extends IEntitySettings {\n\n\t/**\n\t * A reference to [[ExportingMenu]] object.\n\t */\n\tmenu?: ExportingMenu;\n\n\t/**\n\t * Export will try to determine background color based on the DOM styles.\n\t *\n\t * You can use this setting to explicitly specify background color for\n\t * exported images.\n\t */\n\tbackgroundColor?: Color;\n\n\t/**\n\t * Opacity of the exported image background.\n\t *\n\t * * 0 - fully transparent.\n\t * * 1 - fully opaque (default).\n\t *\n\t * NOTE: some image formats like JPEG do not support transparency.\n\t *\n\t * @since 5.2.34\n\t */\n\tbackgroundOpacity?: number;\n\n\t/**\n\t * A string to prefix exported files with.\n\t *\n\t * @default \"chart\"\n\t */\n\tfilePrefix?: string;\n\n\t/**\n\t * Chart title. Used for print, PDF and Excel exports.\n\t */\n\ttitle?: string;\n\n\t/**\n\t * Charset to use for export.\n\t *\n\t * @default \"utf-8\"\n\t */\n\tcharset?: string;\n\n\t/**\n\t * Fields to include in data export.\n\t *\n\t * Key - field in data.\n\t * Value - column name.\n\t */\n\tdataFields?: { [index: string]: string },\n\n\t/**\n\t * Specifies the order of fields to export in data.\n\t */\n\tdataFieldsOrder?: string[],\n\n\t/**\n\t * Fields in data that are numeric.\n\t */\n\tnumericFields?: string[],\n\n\t/**\n\t * Use this number format on numeric values.\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions,\n\n\t/**\n\t * Fields in data that have date/time value.\n\t */\n\tdateFields?: string[],\n\n\t/**\n\t * Use this date format on date values.\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions,\n\n\t/**\n\t * Fields in data that need to be formatted as \"duration\" as per `durationFormat`.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationFields?: string[],\n\n\t/**\n\t * Format to use when formatting values in `durationFields`.\n\t *\n\t * If not set, will use `durationFormat` as set in [[DurationFormatter]] of\n\t * the root element.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationFormat?: string,\n\n\t/**\n\t * Time unit to assume duration values are in.\n\t *\n\t * If not set, will use `baseUnit` as set in [[DurationFormatter]] of\n\t * the root element.\n\t *\n\t * @since 5.0.16\n\t */\n\tdurationUnit?: TimeUnit;\n\n\t/**\n\t * Include these images or other charts in image exports.\n\t */\n\textraImages?: Array<Root | IExportingImageSource>;\n\n\t/**\n\t * Data to export.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/#Exporting_data} for more info\n\t */\n\tdataSource?: any;\n\n\t/**\n\t * PNG format options.\n\t */\n\tpngOptions?: IExportingImageOptions;\n\n\t/**\n\t * JPEG format options.\n\t */\n\tjpgOptions?: IExportingImageOptions;\n\n\t/**\n\t * Canvas format options.\n\t */\n\tcanvasOptions?: IExportingImageOptions;\n\n\t/**\n\t * PDF format options.\n\t */\n\tpdfOptions?: IExportingPDFOptions;\n\n\t/**\n\t * PDF with data table format options.\n\t */\n\tpdfdataOptions?: IExportingDataOptions;\n\n\t/**\n\t * XSLX format options.\n\t */\n\txlsxOptions?: IExportingXLSXOptions;\n\n\t/**\n\t * CSV format options.\n\t */\n\tcsvOptions?: IExportingCSVOptions;\n\n\t/**\n\t * JSON format options.\n\t */\n\tjsonOptions?: IExportingJSONOptions;\n\n\t/**\n\t * HTML format options.\n\t */\n\thtmlOptions?: IExportingHTMLOptions;\n\n\t/**\n\t * Print options.\n\t */\n\tprintOptions?: IExportingPrintOptions;\n\n}\n\nexport interface IExportingPrivate extends IEntityPrivate {\n}\n\nexport interface IExportEvent {\n\n\t/**\n\t * Format.\n\t */\n\tformat: ExportingFormats,\n\n\t/**\n\t * Format options.\n\t */\n\toptions: IExportingFormatOptions\n\n}\n\nexport interface IExportingEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when export starts.\n\t */\n\texportstarted: IExportEvent;\n\n\t/**\n\t * Invoked when export finishes.\n\t */\n\texportfinished: IExportEvent;\n\n\t/**\n\t * Invoked when download of the export starts.\n\t */\n\tdownloadstarted: IExportEvent & {\n\t\tfileName: string,\n\t};\n\n\t/**\n\t * Invoked when print starts.\n\t */\n\tprintstarted: IExportEvent;\n\n\t/**\n\t * Invoked when data finishes pre-processing for export.\n\t */\n\tdataprocessed: IExportEvent & {\n\t\tdata: any\n\t}\n\n\t/**\n\t * Invoked when XLSX export finishes preparing a workbook.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tworkbookready: IExportEvent & {\n\t\tworkbook: any,\n\t\tworkbookOptions: any,\n\t\txlsx: any\n\t}\n\n\t/**\n\t * Invoked when PDF export finishes preparing a document.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tpdfdocready: IExportEvent & {\n\t\tdoc: any\n\t}\n\n}\n\nexport interface IExportingFormatOptions {\n\n\t/**\n\t * If set to `true`, this format will not appear in [[ExportMenu]].\n\t */\n\tdisabled?: boolean;\n\n}\n\nexport interface IExportingImageOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Quality of the exported image: 0 to 1.\n\t */\n\tquality?: number;\n\n\t/**\n\t * Export images with hardware resolution (`false`), or the way they appear\n\t * on screen (`true`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Pixel_ratio} for more info\n\t * @default false\n\t */\n\tmaintainPixelRatio?: boolean;\n\n\t/**\n\t * Minimal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminWidth?: number;\n\n\t/**\n\t * Maximal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxWidth?: number;\n\n\t/**\n\t * Minimal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminHeight?: number;\n\n\t/**\n\t * Maximal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxHeight?: number;\n\n}\n\nexport interface IExportingPrintOptions extends IExportingImageOptions {\n\n\t/**\n\t * A delay in milliseconds to wait before initiating print.\n\t *\n\t * This delay is necessary to ensure DOM is prepared and repainted before\n\t * print dialog kicks in.\n\t *\n\t * @default 500\n\t */\n\tdelay?: number;\n\n\t/**\n\t * Method to use for printing.\n\t *\n\t * If one fails for your particular setup, try the other.\n\t *\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\n\t *\n\t * @default \"iframe\"\n\t */\n\tprintMethod?: \"css\" | \"iframe\";\n\n\t/**\n\t * Image format to use for printing.\n\t *\n\t * @default \"png\"\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n}\n\n/**\n * Available PDF page sizes.\n */\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\n\nexport interface IExportingPDFOptions extends IExportingImageOptions {\n\n\t/**\n\t * Include data into PDF\n\t */\n\tincludeData?: boolean;\n\n\t/**\n\t * An image format to use for embedded images in PDF.\n\t *\n\t * See `imageFormats` in [[Export_module]].\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n\t/**\n\t * Font size to use for all texts.\n\t */\n\tfontSize?: number;\n\n\t/**\n\t * Alignment of the chart image in PDF.\n\t *\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\n\t *\n\t * @default left\n\t */\n\talign?: \"left\" | \"center\" | \"middle\";\n\n\t/**\n\t * Whether to add a URL of the web page the chart has been exported from.\n\t *\n\t * @default true\n\t */\n\taddURL?: boolean;\n\n\t/**\n\t * Page size of the exported PDF.\n\t */\n\tpageSize?: pageSizes;\n\n\t/**\n\t * Page orientation.\n\t */\n\tpageOrientation?: \"landscape\" | \"portrait\";\n\n\t/**\n\t * Page margins.\n\t *\n\t * Can be one of the following:\n\t *\n\t * A single number, in which case it will act as margin setting\n\t * for all four edges of the page.\n\t *\n\t * An array of two numbers `[ horizontal, vertical ]`.\n\t *\n\t * An array of four numbers `[ left, top, right, bottom ]`.\n\t */\n\tpageMargins?: number | number[];\n\n\t/**\n\t * Font which should be used for the export.\n\t *\n\t * Default font used for PDF includes only Latin-based and Cyrilic\n\t * characters. If you are exporting text in other languages, you might need\n\t * to use some other export font.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\tfont?: IFont;\n\n\t/**\n\t * Additional optional fonts which can be used on individual elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\textraFonts?: Array<IFont>;\n\n}\n\nexport interface IExportingDataOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Replace empty values with this string.\n\t */\n\temptyAs?: string;\n\n\t/**\n\t * Use timestamps instead of formatted dates.\n\t *\n\t * @default false\n\t */\n\tuseTimestamps?: boolean;\n\n\t/**\n\t * Use client's locale when formatting dates.\n\t *\n\t * @default false\n\t */\n\tuseLocale?: boolean;\n\n\t/**\n\t * If set to `true` will pivot the able so that columns are horizontal.\n\t */\n\tpivot?: boolean;\n\n\t/**\n\t * Will add a line with column names in CSV/HTML/PDF tables.\n\t */\n\taddColumnNames?: boolean;\n\n}\n\nexport interface IExportingJSONOptions extends IExportingDataOptions {\n\n\t/**\n\t * If set to a number, each line will be indented by X spaces, maintaining\n\t * hierarchy.\n\t *\n\t * If set to a string, will use that string to indent.\n\t *\n\t * @default 2\n\t */\n\tindent?: string | number;\n\n\t/**\n\t * If set to `true` and `dataFields` are set to `true`, will rename keys in\n\t * data.\n\t *\n\t * @default true\n\t */\n\trenameFields?: boolean;\n\n}\n\nexport interface IExportingCSVOptions extends IExportingDataOptions {\n\n\t/**\n\t * Column separator.\n\t *\n\t * @default \",\"\n\t */\n\tseparator?: string;\n\n\t/**\n\t * Force all values to be included in quotes, including numeric.\n\t *\n\t * @default false\n\t */\n\tforceQuotes?: boolean;\n\n\t/**\n\t * Reverse order of the records in data.\n\t *\n\t * @default false\n\t */\n\treverse?: boolean;\n\n\t/**\n\t * Add BOM character to output file, so that it can be used with UTF-8\n\t * characters properly in Excel.\n\t *\n\t * @default false\n\t * @since 5.1.0\n\t */\n\taddBOM?: boolean;\n\n}\n\nexport interface IExportingHTMLOptions extends IExportingDataOptions {\n\n\t/**\n\t * A `class` attribute for `<table>` tag.\n\t */\n\ttableClass?: string;\n\n\t/**\n\t * A `class` attribute for `<tr>` tags.\n\t */\n\trowClass?: string;\n\n\t/**\n\t * A `class` attribute for `<th>` tags.\n\t */\n\theaderClass?: string;\n\n\t/**\n\t * A `class` attribute for `<td>` tags.\n\t */\n\tcellClass?: string;\n\n}\n\nexport interface IExportingXLSXOptions extends IExportingDataOptions {\n\t// @todo\n\t//sheets?: string[];\n}\n\n/**\n * A plugin that can be used to export chart snapshots and data.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/} for more info\n */\nexport class Exporting extends Entity {\n\tpublic static className: string = \"Exporting\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Exporting.className]);\n\n\tdeclare public _settings: IExportingSettings;\n\tdeclare public _privateSettings: IExportingPrivate;\n\tdeclare public _events: IExportingEvents;\n\n\t//public extraImages: Array<Root | IExportingImageSource> = [];\n\t//public dataSources: any[] = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"filePrefix\", \"chart\");\n\t\tthis._setRawDefault(\"charset\", \"utf-8\");\n\t\tthis._setRawDefault(\"numericFields\", []);\n\t\tthis._setRawDefault(\"dateFields\", []);\n\t\tthis._setRawDefault(\"durationFields\", []);\n\t\tthis._setRawDefault(\"extraImages\", []);\n\t\tthis._setRawDefault(\"pngOptions\", { quality: 1, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"jpgOptions\", { quality: 0.8, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"printOptions\", { quality: 1, maintainPixelRatio: false, delay: 500, printMethod: \"iframe\", imageFormat: \"png\" });\n\t\tthis._setRawDefault(\"jsonOptions\", { indent: 2, renameFields: true });\n\t\tthis._setRawDefault(\"csvOptions\", { separator: \",\", addColumnNames: true, emptyAs: \"\", addBOM: true });\n\t\tthis._setRawDefault(\"htmlOptions\", { emptyAs: \"-\", addColumnNames: true });\n\t\tthis._setRawDefault(\"xlsxOptions\", { emptyAs: \"\", addColumnNames: true });\n\t\tthis._setRawDefault(\"pdfOptions\", { fontSize: 14, imageFormat: \"png\", align: \"left\", addURL: true });\n\t\tthis._setRawDefault(\"pdfdataOptions\", { emptyAs: \"\", addColumnNames: true });\n\n\t\tthis._root.addDisposer(this);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"menu\")) {\n\t\t\tconst menu = this.get(\"menu\");\n\t\t\tif (menu) {\n\t\t\t\tmenu.set(\"exporting\", this);\n\t\t\t\tthis._disposers.push(menu);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getFormatOptions(format: ExportingFormats, options?: IExportingFormatOptions): IExportingFormatOptions {\n\t\tconst newOptions: any = $object.copy((<any>this).get(format + \"Options\", {}));\n\t\tif (options) {\n\t\t\t$object.each(options, (key, value) => {\n\t\t\t\tnewOptions[key] = value;\n\t\t\t});\n\t\t}\n\t\treturn newOptions;\n\t}\n\n\t/**\n\t * Triggers a download of the chart/data in specific format.\n\t *\n\t * @param  format         Format\n\t * @param  customOptions  Format options\n\t */\n\tpublic async download(format: ExportingFormats, customOptions?: IExportingFormatOptions) {\n\t\tconst ext = format == \"pdfdata\" ? \"pdf\" : format;\n\t\tconst fileName = this.get(\"filePrefix\", \"chart\") + \".\" + ext;\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"downloadstarted\", {\n\t\t\ttype: \"downloadstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tfileName: fileName,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(format, options);\n\t\tthis.streamFile(uri, fileName, (options && (<IExportingCSVOptions>options).addBOM));\n\t}\n\n\t/**\n\t * Triggers print of the chart.\n\t *\n\t * @param  customOptions  Print options\n\t */\n\tpublic async print(customOptions?: IExportingPrintOptions) {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tthis.events.dispatch(\"printstarted\", {\n\t\t\ttype: \"printstarted\",\n\t\t\tformat: \"print\",\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(options.imageFormat || \"png\", options);\n\t\tthis.initiatePrint(uri, options, this.get(\"title\"));\n\t}\n\n\t/**\n\t * Returns data uri of the chart/data in specific format.\n\t *\n\t * @param          format  Format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async export(format: ExportingFormats, customOptions?: IExportingFormatOptions): Promise<string> {\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"exportstarted\", {\n\t\t\ttype: \"exportstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\n\t\tlet promise: Promise<string> | string = \"\";\n\t\tswitch (format) {\n\t\t\tcase \"png\":\n\t\t\tcase \"jpg\":\n\t\t\t\tthis._root._runTickerNow();\n\t\t\t\tpromise = this.exportImage(format, options);\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tpromise = this.exportJSON(options);\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\tpromise = this.exportCSV(options);\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tpromise = this.exportHTML(options);\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\tpromise = this.exportXLSX(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\t\tthis._root._runTickerNow();\n\t\t\t\tpromise = this.exportPDF(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdfdata\":\n\t\t\t\tpromise = this.exportPDFData(options);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.events.dispatch(\"exportfinished\", {\n\t\t\ttype: \"exportfinished\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\treturn promise;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Images\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns chart image as a data:uri.\n\t *\n\t * @param   format         Image format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportImage(format: ExportingImageFormats, customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\tconst canvas = await this.getCanvas(options);\n\t\tconst data = canvas.toDataURL(this.getContentType(format), options.quality || 1);\n\t\tthis.disposeCanvas(canvas);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns canvas data.\n\t *\n\t * @param   customOptions  Image options\n\t * @return                 Promise\n\t */\n\tpublic async exportCanvas(customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"canvas\", customOptions);\n\t\tconst canvas = await this.getCanvas(options);\n\t\tconst data = canvas.toDataURL(this.getContentType(\"canvas\"), options.quality || 1);\n\t\tthis.disposeCanvas(canvas);\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns a `<canvas>` element with snapshot of the chart.\n\t *\n\t * @param   options  Image options\n\t * @return           Promise\n\t */\n\tpublic async getCanvas(options: IExportingImageOptions): Promise<HTMLCanvasElement> {\n\t\tconst mainCanvas = this._root._renderer.getCanvas(this._root._rootContainer._display, options);\n\t\tconst extraImages = this.get(\"extraImages\", []);\n\n\t\t// Add other canvases\n\t\tlet middleLeft = 0;\n\t\tlet middleTop = 0;\n\t\tlet middleWidth = mainCanvas.width;\n\t\tlet middleHeight = mainCanvas.height;\n\t\tlet extraRight = 0;\n\t\tlet extraBottom = 0;\n\n\t\tconst extras: any[] = [];\n\n\t\t$array.each(extraImages, (extraRoot) => {\n\n\t\t\t// Get that extra\n\t\t\tlet extra: IExportingImageSource;\n\n\t\t\tif (extraRoot instanceof Root) {\n\t\t\t\textra = {\n\t\t\t\t\tsource: extraRoot,\n\t\t\t\t\tposition: \"bottom\"\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\textra = <IExportingImageSource>extraRoot;\n\t\t\t}\n\n\t\t\t// Set defaults\n\t\t\textra.position = extra.position || \"bottom\";\n\t\t\textra.marginTop = extra.marginTop || 0;\n\t\t\textra.marginRight = extra.marginRight || 0;\n\t\t\textra.marginBottom = extra.marginBottom || 0;\n\t\t\textra.marginLeft = extra.marginLeft || 0;\n\n\t\t\tconst extraCanvas = extra.source._renderer.getCanvas(extra.source._rootContainer._display, options);\n\n\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\tmiddleTop += extraHeight;\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\textraRight += extraWidth;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\tmiddleLeft += extraWidth;\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\textraBottom += extraHeight;\n\t\t\t}\n\n\t\t\textras.push({\n\t\t\t\tcanvas: extraCanvas,\n\t\t\t\tposition: extra.position,\n\t\t\t\tleft: extra.marginLeft,\n\t\t\t\ttop: extra.marginTop,\n\t\t\t\twidth: extraWidth,\n\t\t\t\theight: extraHeight\n\t\t\t});\n\n\t\t});\n\n\t\tconst newCanvas = this.getDisposableCanvas();\n\n\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\n\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\n\n\t\tconst ctx = newCanvas.getContext(\"2d\")!;\n\n\t\t// Get background\n\t\tconst background = this.get(\"backgroundColor\", this.findBackgroundColor(this._root.dom));\n\t\tconst backgroundOpacity = this.get(\"backgroundOpacity\", 1);\n\n\t\tif (background) {\n\t\t\tctx.fillStyle = background.toCSS(backgroundOpacity);\n\t\t\tctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\n\t\t}\n\n\t\tlet left = middleLeft;\n\t\tlet top = middleTop;\n\t\tlet right = left + middleWidth;\n\t\tlet bottom = top + middleHeight;\n\n\t\t// Radiates outwards from center\n\t\t$array.each(extras, (extra) => {\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\ttop -= extra.height;\n\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tctx.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\n\t\t\t\tright += extra.width;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tleft -= extra.width;\n\t\t\t\tctx.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\n\t\t\t\tbottom += extra.height;\n\t\t\t}\n\n\t\t\t//this.disposeCanvas(extra.canvas);\n\t\t});\n\n\t\tctx.drawImage(mainCanvas, middleLeft, middleTop);\n\n\t\treturn newCanvas;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * JSON\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a JSON file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"json\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getJSON(customOptions));\n\t}\n\n\t/**\n\t * Returns data in JSON format.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async getJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"json\", customOptions);\n\t\treturn JSON.stringify(this.getData(\"json\", customOptions, options.renameFields), (_key, value) => {\n\t\t\tif ($type.isObject(value)) {\n\t\t\t\t$object.each(value, (field, item) => {\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat(field, item, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value;\n\t\t}, options.indent);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * CSV\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a CSV file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"csv\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getCSV(customOptions));\n\t}\n\n\t/**\n\t * Returns a CSV with export data.\n\t *\n\t * @param   customOptions  CSV options\n\t * @return                 Promise\n\t */\n\tpublic async getCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"csv\", customOptions);\n\n\t\t// Init output\n\t\tlet csv = \"\";\n\n\t\t// Add rows\n\t\tlet br = \"\";\n\t\tconst data = this.getData(\"csv\", options);\n\n\t\t// Data fields\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\n\t\t\t\tbr = \"\\n\";\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\n\t\t\t\tif (options.reverse) {\n\t\t\t\t\tcsv = row + br + csv;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcsv += br + row;\n\t\t\t\t}\n\t\t\t\tbr = \"\\n\";\n\t\t\t}\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n\t\t\t}\n\t\t}\n\n\t\treturn csv;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getCSVRow(row: any, options: IExportingCSVOptions, dataFields: any, asIs: boolean = false): string {\n\n\t\t// Init\n\t\tlet separator = options.separator || \",\";\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\t$object.each(row, (key, value) => {\n\t\t\t\tdataFields[key] = value;\n\t\t\t});\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Check if we need to skip\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\n\t\t\t/*if (this.dataFields != null && this.dataFields[key] == null) {\n\t\t\t\treturn;\n\t\t\t}*/\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Cast and escape doublequotes\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/\"/g, '\"\"');\n\n\t\t\t// Enclose into double quotes\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\n\t\t\t}\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items.join(separator);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * HTML\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an HTML file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"html\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getHTML(customOptions));\n\t}\n\n\t/**\n\t * Returns an HTML with a table with export data.\n\t *\n\t * @param   customOptions  HTML options\n\t * @return                 Promise\n\t */\n\tpublic async getHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"html\", customOptions);\n\n\t\t// Init output\n\t\tlet html = \"<table>\";\n\t\tif (options.tableClass) {\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n\t\t}\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\thtml += \"\\n</tbody>\";\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n\t\t\t}\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n\t\t\t}\n\n\t\t\thtml += \"\\n</tbody>\";\n\t\t}\n\n\t\thtml += \"\\n</table>\";\n\n\t\treturn html;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getHTMLRow(row: any, options: IExportingHTMLOptions, dataFields: any, asIs: boolean = false, headerRow: boolean = false): string {\n\n\t\t// Init output\n\t\tlet html = \"\\t<tr>\";\n\t\tif (options.rowClass) {\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n\t\t}\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// th or dh?\n\t\tconst tag = headerRow ? \"th\" : \"td\";\n\n\t\t// Process each row item\n\t\tlet first = true;\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Escape HTML entities\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\n\t\t\t});\n\n\t\t\t// Which tag to use\n\t\t\tlet useTag = tag;\n\t\t\tif (options.pivot && first) {\n\t\t\t\tuseTag = \"th\";\n\t\t\t}\n\n\t\t\t// Add cell\n\t\t\tif (options.cellClass) {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\n\t\t\tfirst = false;\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\thtml += \"\\n\\t</tr>\";\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * XLSX\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an XLSX file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"xlsx\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getXLSX(customOptions));\n\t}\n\n\t/**\n\t * Returns a data:uri of XLSX data.\n\t *\n\t * @param  customOptions  Format options\n\t * @return                Promise\n\t */\n\tpublic async getXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"xlsx\", customOptions);\n\n\t\t// Load xlsx\n\t\tlet XLSX = await this.getXLSXLib();\n\n\t\t// Create workbook options\n\t\tlet wbOptions = {\n\t\t\tbookType: \"xlsx\",\n\t\t\tbookSST: false,\n\t\t\ttype: \"base64\",\n\t\t\t//dateNF: 'yyyy-mm-dd'\n\t\t};\n\n\t\t// Get sheet name\n\t\tlet sheetName = this._normalizeExcelSheetName(this.get(\"title\", this._t(\"Data\")));\n\n\t\t// Create a workbook\n\t\tlet wb = {\n\t\t\tSheetNames: <any>[sheetName],\n\t\t\tSheets: <any>{}\n\t\t};\n\n\t\t// Init worksheet data\n\t\tlet wsData: Array<any> = [];\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\twsData.push(this.getXLSXRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\t//console.log(a, b)\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\twsData.push(this.getXLSXRow(dataFields, options, undefined, true));\n\t\t\t}\n\n\t\t\t// Add lines\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\twsData.push(this.getXLSXRow(data[i], options, dataFields));\n\t\t\t}\n\t\t}\n\n\t\t// Create sheet and add data\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(wsData);\n\n\t\tthis.events.dispatch(\"workbookready\", {\n\t\t\ttype: \"workbookready\",\n\t\t\tformat: \"xlsx\",\n\t\t\toptions: options,\n\t\t\tworkbook: wb,\n\t\t\tworkbookOptions: wbOptions,\n\t\t\txlsx: XLSX,\n\t\t\ttarget: this\n\t\t});\n\n\t\treturn XLSX.write(wb, wbOptions);\n\t}\n\n\tprivate _normalizeExcelSheetName(name: string): string {\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n\t\treturn name.length > 30 ? name.substr(0, 30) + \"...\" : name;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXRow(row: any, options: IExportingXLSXOptions, dataFields: any, asIs: boolean = false): any[] {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options, true);\n\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\t//console.log(a, b)\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprivate async _xlsx(): Promise<any> {\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"../../bundled/xlsx\");\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXLib(): Promise<any> {\n\t\treturn this._xlsx();\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * PDF\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart image.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDF(customOptions?: IExportingPDFOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, true));\n\t}\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDFData(customOptions?: IExportingDataOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, false, true));\n\t}\n\n\t/**\n\t * Returns Base64-encoded binary data for a PDF file.\n\t * @param   customOptions  PDF options\n\t * @param   includeImage   Include chart snapshot\n\t * @param   includeData    Include data\n\t * @return                 Promise\n\t */\n\tpublic async getPDF(customOptions?: IExportingPDFOptions, includeImage: boolean = true, includeData: boolean = false): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdf\", customOptions);\n\t\tconst dataOptions: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\t\tconst orientation: \"landscape\" | \"portrait\" = options.pageOrientation || \"portrait\";\n\n\t\t// Get image\n\t\tlet image: string;\n\t\tif (includeImage) {\n\t\t\timage = await this.exportImage(options.imageFormat || \"png\", options);\n\t\t}\n\t\t// Load pdfmake\n\n\t\tconst pdfmake = await this.getPdfmake();\n\n\t\t// Defaults\n\t\tconst defaultMargins = [30, 30, 30, 30];\n\n\t\t// Init content for PDF\n\t\tlet doc = {\n\t\t\tpageSize: options.pageSize || \"A4\",\n\t\t\tpageOrientation: orientation,\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\n\t\t\tdefaultStyle: {\n\t\t\t\tfont: options.font ? options.font.name : undefined\n\t\t\t},\n\t\t\t//header: <any>[],\n\t\t\tcontent: <any>[]\n\t\t};\n\n\t\t// Should we add title?\n\t\tconst title = this.get(\"title\");\n\n\t\tlet extraMargin = 0;\n\n\t\tif (title) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: title,\n\t\t\t\tfontSize: options.fontSize || 14,\n\t\t\t\tbold: true,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for title\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add page URL?\n\t\tif (options.addURL) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: this._t(\"Saved from\") + \": \" + document.location.href,\n\t\t\t\tfontSize: options.fontSize,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for URL\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add image\n\t\tif (includeImage && image!) {\n\t\t\tdoc.content.push({\n\t\t\t\timage: image!,\n\t\t\t\talignment: options.align || \"left\",\n\t\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin, orientation)\n\t\t\t});\n\t\t}\n\n\t\t// Add data\n\t\tif ((includeData || options.includeData) && this.hasData()) {\n\t\t\tdoc.content.push({\n\t\t\t\ttable: await this.getPDFData(dataOptions),\n\t\t\t\tfontSize: options.fontSize || 14\n\t\t\t});\n\t\t}\n\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\n\t\tlet vfs: { [path: string]: string } | null = null;\n\n\t\tfunction addFont(font: IFont) {\n\t\t\tconst paths: { [path: string]: string } = {};\n\n\t\t\tpaths.normal = font.normal.path;\n\t\t\tvfs![font.normal.path] = font.normal.bytes;\n\n\t\t\tif (font.bold) {\n\t\t\t\tpaths.bold = font.bold.path;\n\t\t\t\tvfs![font.bold.path] = font.bold.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bold = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.italics) {\n\t\t\t\tpaths.italics = font.italics.path;\n\t\t\t\tvfs![font.italics.path] = font.italics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.italics = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.bolditalics) {\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\n\t\t\t\tvfs![font.bolditalics.path] = font.bolditalics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bolditalics = font.normal.path;\n\t\t\t}\n\n\t\t\tfonts![font.name] = paths;\n\t\t}\n\n\t\tif (options.font) {\n\t\t\tfonts = {};\n\t\t\tvfs = {};\n\t\t\taddFont(options.font);\n\n\t\t\tif (options.extraFonts) {\n\t\t\t\t$array.each(options.extraFonts, addFont);\n\t\t\t}\n\t\t}\n\n\t\tthis.events.dispatch(\"pdfdocready\", {\n\t\t\ttype: \"pdfdocready\",\n\t\t\tformat: \"pdf\",\n\t\t\toptions: options,\n\t\t\tdoc: doc,\n\t\t\ttarget: this\n\t\t});\n\n\t\t// Create PDF\n\t\treturn new Promise<string>((success, _error) => {\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getBase64((uri: string) => {\n\t\t\t\tsuccess(uri);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async getPDFData(customOptions?: IExportingDataOptions): Promise<any> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\n\t\t// Init output\n\t\tlet content = <any>{\n\t\t\t\"body\": <any>[]\n\t\t};\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\t//console.log(a, b)\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n\t\t\t\tcontent.headerRows = 1;\n\t\t\t}\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\n\t\t\t}\n\n\t\t}\n\n\t\treturn content;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPDFDataRow(row: any, options: IExportingDataOptions, dataFields?: any, asIs: boolean = false): Array<string> {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\t\t\titem = \"\" + item;\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\t//console.log(a, b)\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\t/**\n\t * Returns pdfmake instance.\n\t *\n\t * @ignore\n\t * @return Instance of pdfmake\n\t */\n\tpublic getPdfmake(): Promise<any> {\n\t\tif (pdfmakePromise === undefined) {\n\t\t\tpdfmakePromise = _pdfmake();\n\t\t}\n\n\t\treturn pdfmakePromise;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPageSizeFit(pageSize: pageSizes, margins: number | number[], extraMargin: number = 0, orientation: \"landscape\" | \"portrait\" = \"portrait\"): number[] {\n\n\t\t// Check margins\n\t\tlet newMargins = [0, 0, 0, 0];\n\t\tif ($type.isNumber(margins)) {\n\t\t\tnewMargins = [margins, margins, margins, margins];\n\t\t}\n\t\telse if (margins.length == 2) {\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\n\t\t}\n\t\telse if (margins.length == 4) {\n\t\t\tnewMargins = margins;\n\t\t}\n\n\t\t// Define available page sizes\n\t\tlet sizes = {\n\t\t\t\"4A0\": [4767.87, 6740.79],\n\t\t\t\"2A0\": [3370.39, 4767.87],\n\t\t\tA0: [2383.94, 3370.39],\n\t\t\tA1: [1683.78, 2383.94],\n\t\t\tA2: [1190.55, 1683.78],\n\t\t\tA3: [841.89, 1190.55],\n\t\t\tA4: [595.28, 841.89],\n\t\t\tA5: [419.53, 595.28],\n\t\t\tA6: [297.64, 419.53],\n\t\t\tA7: [209.76, 297.64],\n\t\t\tA8: [147.40, 209.76],\n\t\t\tA9: [104.88, 147.40],\n\t\t\tA10: [73.70, 104.88],\n\t\t\tB0: [2834.65, 4008.19],\n\t\t\tB1: [2004.09, 2834.65],\n\t\t\tB2: [1417.32, 2004.09],\n\t\t\tB3: [1000.63, 1417.32],\n\t\t\tB4: [708.66, 1000.63],\n\t\t\tB5: [498.90, 708.66],\n\t\t\tB6: [354.33, 498.90],\n\t\t\tB7: [249.45, 354.33],\n\t\t\tB8: [175.75, 249.45],\n\t\t\tB9: [124.72, 175.75],\n\t\t\tB10: [87.87, 124.72],\n\t\t\tC0: [2599.37, 3676.54],\n\t\t\tC1: [1836.85, 2599.37],\n\t\t\tC2: [1298.27, 1836.85],\n\t\t\tC3: [918.43, 1298.27],\n\t\t\tC4: [649.13, 918.43],\n\t\t\tC5: [459.21, 649.13],\n\t\t\tC6: [323.15, 459.21],\n\t\t\tC7: [229.61, 323.15],\n\t\t\tC8: [161.57, 229.61],\n\t\t\tC9: [113.39, 161.57],\n\t\t\tC10: [79.37, 113.39],\n\t\t\tRA0: [2437.80, 3458.27],\n\t\t\tRA1: [1729.13, 2437.80],\n\t\t\tRA2: [1218.90, 1729.13],\n\t\t\tRA3: [864.57, 1218.90],\n\t\t\tRA4: [609.45, 864.57],\n\t\t\tSRA0: [2551.18, 3628.35],\n\t\t\tSRA1: [1814.17, 2551.18],\n\t\t\tSRA2: [1275.59, 1814.17],\n\t\t\tSRA3: [907.09, 1275.59],\n\t\t\tSRA4: [637.80, 907.09],\n\t\t\tEXECUTIVE: [521.86, 756.00],\n\t\t\tFOLIO: [612.00, 936.00],\n\t\t\tLEGAL: [612.00, 1008.00],\n\t\t\tLETTER: [612.00, 792.00],\n\t\t\tTABLOID: [792.00, 1224.00]\n\t\t};\n\n\t\t// Calculate size\n\t\tlet fitSize = sizes[pageSize];\n\t\tif (orientation == \"landscape\") {\n\t\t\tfitSize.reverse();\n\t\t}\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n\t\treturn fitSize;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Data\n\t * ==========================================================================\n\t */\n\n\t/**\n\t\t* Returns `true` if `dataSource` is set, and the contents are proper\n\t\t* data (array).\n\t\t*\n\t\t* @return Has data?\n\t\t*/\n\tpublic hasData(): boolean {\n\t\tconst dataSource = this.get(\"dataSource\");\n\t\treturn $type.isArray(dataSource) && dataSource.length ? true : false;\n\t}\n\n\t/**\n\t * Returns processed data according to format options.\n\t *\n\t * @param   format         Format\n\t * @param   customOptions  Format options\n\t * @param   renameFields   Should fields be renamed?\n\t * @return                 Processed data\n\t */\n\tpublic getData(format: ExportingFormats, customOptions?: IExportingDataOptions, renameFields: boolean = false): any {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\tconst dataSource = this.get(\"dataSource\", []);\n\t\tlet data: any = dataSource;\n\n\t\t// Re-generate the data based on data fields if set\n\t\tconst dataFields = this.get(\"dataFields\");\n\t\tif (dataFields && $type.isArray(dataSource)) {\n\t\t\tdata = [];\n\t\t\t$array.each(dataSource, (row) => {\n\t\t\t\tif ($type.isObject(row)) {\n\t\t\t\t\tconst newRow: any = {}\n\t\t\t\t\t$object.each(dataFields, (field, value) => {\n\t\t\t\t\t\tif (dataFields![field] != null) {\n\t\t\t\t\t\t\tnewRow[renameFields ? value : field] = this.convertToSpecialFormat(field, row[field], options);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdata.push(newRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst event: any = {\n\t\t\ttype: \"dataprocessed\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tdata: data,\n\t\t\ttarget: this\n\t\t};\n\n\t\tthis.events.dispatch(\"dataprocessed\", event);\n\n\t\treturn event.data;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataFields(data: any): { [index: string]: string } {\n\t\tlet dataFields = this.get(\"dataFields\");\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\tif ($type.isArray(data) && data.length) {\n\t\t\t\t$array.each(data, (row) => {\n\t\t\t\t\t$object.each(row, (key, _value) => {\n\t\t\t\t\t\tif (dataFields![key] == null) {\n\t\t\t\t\t\t\tdataFields![key] = key;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn dataFields!;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertEmptyValue(_field: string, value: any, options: IExportingDataOptions): any {\n\t\treturn value != null ? value : options.emptyAs;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertToSpecialFormat(field: any, value: any, options: IExportingDataOptions, keepOriginal?: boolean): any {\n\n\t\t// Is this a timestamp or duration?\n\t\tif (typeof value == \"number\") {\n\t\t\tif (this.isDateField(field)) {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\telse if (this.isNumericField(field) && this.get(\"numberFormat\")) {\n\t\t\t\treturn this._root.numberFormatter.format(value, this.get(\"numberFormat\"));\n\t\t\t}\n\t\t\telse if (this.isDurationField(field)) {\n\t\t\t\treturn this._root.durationFormatter.format(value, this.get(\"durationFormat\"), this.get(\"durationUnit\"));\n\t\t\t}\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tif (options.useTimestamps) {\n\t\t\t\tvalue = value.getTime();\n\t\t\t}\n\t\t\telse if (options.useLocale) {\n\t\t\t\tif (!keepOriginal) {\n\t\t\t\t\tvalue = value.toLocaleString();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = this._root.dateFormatter.format(value, this.get(\"dateFormat\"));\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDateField(field: string): boolean {\n\t\treturn this.get(\"dateFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isNumericField(field: string): boolean {\n\t\treturn this.get(\"numericFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDurationField(field: string): boolean {\n\t\treturn this.get(\"durationFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getContentType(type: ExportingFormats): string {\n\t\tlet contentType = \"\";\n\t\tswitch (type) {\n\t\t\tcase \"png\":\n\t\t\t\tcontentType = \"image/\" + type;\n\t\t\t\tbreak;\n\t\t\tcase \"jpg\":\n\t\t\t\tcontentType = \"image/jpeg\";\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\tcontentType = \"text/csv\";\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tcontentType = \"application/json\";\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tcontentType = \"text/html\";\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\tcase \"pdfdata\":\n\t\t\t\tcontentType = \"application/pdf\";\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontentType = \"application/octet-stream\";\n\t\t}\n\n\t\treturn contentType;\n\t}\n\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis._root.dom.appendChild(canvas);\n\t\treturn canvas;\n\t}\n\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\n\t\tthis._root.dom.removeChild(canvas);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic findBackgroundColor(element: Element): Color {\n\n\t\t// Check if element has styles set\n\t\tlet opacity = 1;\n\t\tlet currentColor = getComputedStyle(element, \"background-color\").getPropertyValue(\"background-color\");\n\n\t\t// Check opacity\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n\t\t\topacity = 0;\n\t\t}\n\n\t\tif (opacity == 0) {\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\n\n\t\t\t// Completely transparent. Look for a parent\n\t\t\tif (parent) {\n\t\t\t\treturn this.findBackgroundColor(parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Color.fromHex(0xffffff);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromCSS(currentColor);\n\t\t}\n\n\t}\n\n\t/**\n\t * Triggers download of the file.\n\t *\n\t * @param   uri       data:uri with file content\n\t * @param   fileName  File name\n\t * @param   addBOM    Should download include byte order mark?\n\t * @return            Promise\n\t */\n\tpublic streamFile(uri: string, fileName: string, addBOM: boolean = false): boolean {\n\n\t\tif (this.blobDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * Supports Blob object.\n\t\t\t * Use it.\n\t\t\t */\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\n\t\t\t// Extract content type and get pure data without headers\n\t\t\tlet parts = uri.split(\";\");\n\t\t\tlet contentType = parts!.shift()!.replace(/data:/, \"\");\n\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n\t\t\t\ttry {\n\t\t\t\t\tlet decoded = atob(uri);\n\t\t\t\t\turi = decoded;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (addBOM) {\n\t\t\t\t\turi = \"\\ufeff\" + uri;\n\t\t\t\t}\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.download = fileName;\n\t\t\t\tlink.click();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdocument.body.removeChild(link);\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t\t}, 100);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Dissect uri into array\n\t\t\tlet chars = new Array(uri.length);\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\n\t\t\t\tlet charCode = uri.charCodeAt(i);\n\t\t\t\tchars[i] = charCode;\n\t\t\t}\n\n\t\t\tif (addBOM) {\n\t\t\t\tchars = [0xEF, 0xBB, 0xBF].concat(chars);\n\t\t\t}\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\n\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\tlink.href = url;\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t}, 100);\n\n\t\t}\n\n\t\telse if (this.linkDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * For regular browsers, we create a link then simulate a click on it\n\t\t\t */\n\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tlink.href = uri;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\n\t\t}\n\t\telse {\n\n\t\t\t/**\n\t\t\t * Something else - perhaps a mobile.\n\t\t\t * Let's just display it in the same page.\n\t\t\t * (hey we don't like it either)\n\t\t\t */\n\t\t\twindow.location.href = uri;\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic downloadSupport(): boolean {\n\t\treturn this.linkDownloadSupport();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkDownloadSupport(): boolean {\n\t\tlet a = document.createElement(\"a\");\n\t\tlet res = typeof a.download !== \"undefined\";\n\t\treturn res;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic blobDownloadSupport(): boolean {\n\t\treturn window.Blob != null;\n\t}\n\n\n\t/**\n\t * ==========================================================================\n\t * Print\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Initiates print of the chart.\n\t *\n\t * @param   data     data:uri for the image\n\t * @param   options  Options\n\t * @param   title    Optional title to use (uses window's title by default)\n\t * @return           Promise\n\t */\n\tpublic initiatePrint(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tif (options.printMethod == \"css\") {\n\t\t\tthis._printViaCSS(data, options, title);\n\t\t}\n\t\telse {\n\t\t\tthis._printViaIframe(data, options, title);\n\t\t}\n\n\t}\n\n\tprotected _printViaCSS(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t//Save current scroll position\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t// Hide all document nodes by applyin custom CSS\n\t\tlet rule = new StyleRule($utils.getShadowRoot(this._root.dom), \"body > *\", {\n\t\t\t\"display\": \"none\",\n\t\t\t\"position\": \"fixed\",\n\t\t\t\"visibility\": \"hidden\",\n\t\t\t\"opacity\": \"0\",\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n\t\t}, this._root.nonce);\n\n\t\t// Replace title?\n\t\tlet originalTitle: string;\n\t\tif (title && document && document.title) {\n\t\t\toriginalTitle = document.title;\n\t\t\tdocument.title = title;\n\t\t}\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.display = \"block\";\n\t\timg.style.position = \"relative\";\n\t\timg.style.visibility = \"visible\";\n\t\timg.style.opacity = \"1\";\n\t\timg.style.clipPath = \"none\";\n\t\tdocument.body.appendChild(img);\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\t(<any>window).print();\n\t\t}, 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(img);\n\n\t\t\t// Reset back all elements\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\n\t\t\t\tlet item = <HTMLElement>items[i];\n\t\t\t\tif ($dom.isElement(item)) {\n\t\t\t\t\titem.style.display = states[i];\n\t\t\t\t}\n\t\t\t}*/\n\t\t\trule.dispose();\n\n\t\t\t// Restore title\n\t\t\tif (originalTitle) {\n\t\t\t\tdocument.title = document.title;\n\t\t\t}\n\n\t\t\t// Scroll back the document the way it was before\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\n\n\t\t}, delay || 500);\n\n\t}\n\n\tprotected _printViaIframe(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t// Create an iframe\n\t\tconst iframe = document.createElement(\"iframe\");\n\t\tiframe.style.visibility = \"hidden\";\n\t\tdocument.body.appendChild(iframe);\n\n\t\t// This is needed for FireFox\n\t\tiframe.contentWindow!.document.open();\n\t\tiframe.contentWindow!.document.close();\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.height = \"auto\";\n\t\tif (title) {\n\t\t\tiframe.contentWindow!.document.title = title;\n\t\t}\n\t\tiframe.contentWindow!.document.body.appendChild(img);\n\n\t\t(<any>iframe).load = function() {\n\t\t\tiframe.contentWindow!.document.body.appendChild(img);\n\t\t};\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\ttry {\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\n\t\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t}\n\t\t}, delay || 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(iframe);\n\n\t\t}, delay + 50 || 100);\n\n\t}\n\n\t/**\n\t * Returns a list of formats that can be exported in current browser.\n\t *\n\t * @return Formats\n\t */\n\tpublic supportedFormats(): ExportingFormats[] {\n\t\tconst res: ExportingFormats[] = [];\n\t\tconst hasData = this.hasData();\n\t\tconst downloadSupport = this.downloadSupport();\n\t\t$array.each(<ExportingFormats[]>[\"png\", \"jpg\", \"canvas\", \"pdf\", \"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\", \"print\"], (format) => {\n\t\t\tconst options = this._getFormatOptions(format);\n\t\t\tif (options.disabled !== true) {\n\t\t\t\tif ([\"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\"].indexOf(format) == -1 || (hasData && downloadSupport)) {\n\t\t\t\t\tres.push(<ExportingFormats>format);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\t/**\n\t * Returns a list of supported export types: image or print.\n\t *\n\t * @return Supported types\n\t */\n\tpublic supportedExportTypes(): ExportingTypes[] {\n\t\tconst res: ExportingTypes[] = [\"image\", \"print\"];\n\t\tif (this.downloadSupport() && this.hasData()) {\n\t\t\tres.push(\"data\");\n\t\t}\n\t\treturn res;\n\t}\n\n}\n","import type { Root } from \"../../core/Root\"\n\nimport { StyleRule } from \"../../core/util/Utils\"\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../../core/util/Disposer\";\n\n/**\n * @ignore\n */\nlet rules: CounterDisposer | undefined;\n\n/**\n * @ignore\n */\nexport default function(element: ShadowRoot | null, root: Root, _prefix?: string): IDisposer {\n\t//const newPrefix = (prefix ? prefix : \"am5\");\n\n\t//let colorSet = new InterfaceColorSet();\n\tconst ic = root.interfaceColors;\n\n\tif (!rules) {\n\t\tconst disposer = new MultiDisposer([\n\n\t\t\t/*new StyleRule(\".${newPrefix}-menu\", {\n\t\t\t\t\"opacity\": \"0.3\",\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\n\t\t\t}),\n\n\t\t\tnew StyleRule(\"div:hover .${newPrefix}-menu, .${newPrefix}-menu.active\", {\n\t\t\t\t\"opacity\": \"0.9\",\n\t\t\t}),*/\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu\", {\n\t\t\t\t\"color\": ic.get(\"secondaryButtonText\")!.toCSS(),\n\t\t\t\t\"font-size\": \"0.8em\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu *\", {\n\t\t\t\t\"box-sizing\": \"border-box\",\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu a\", {\n\t\t\t\t\"display\": \"block\",\n\t\t\t\t\"cursor\": \"pointer\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-type-separator\", {\n\t\t\t\t\"color\": ic.get(\"disabled\")!.toCSS(),\n\t\t\t\t\"border-bottom\": \"1px solid \" + ic.get(\"secondaryButtonDown\")!.toCSS(),\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-label-alt\", {\n\t\t\t\t\"color\": ic.get(\"disabled\")!.toCSS(),\n\t\t\t\t\"font-size\": \"0.8em\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu .am5exporting-type-separator a\", {\n\t\t\t\t\"cursor\": \"default\"\n\t\t\t}),\n\t\t\tnew StyleRule(element, \".am5exporting-menu .am5exporting-type-separator a:hover\", {\n\t\t\t\t\"background\": \"initial\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu\", {\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"z-index\": \"10\"\n\t\t\t}),\n\n\t\t\t// new StyleRule(element, \".am5exporting-list:before\", {\n\t\t\t// \t// \"display\": \"block\",\n\t\t\t// \t\"width\": \"20px\",\n\t\t\t// \t\"height\": \"20px\",\n\t\t\t// \t\"content\": \"url(\\\"data:image/svg+xml; utf8, <svg fill=\\\"#f00\\\" height=\\\"20\\\" width=\\\"20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\\\"/></svg>\\\")\"\n\t\t\t// }),\n\n\t\t\tnew StyleRule(element, \".am5exporting-icon\", {\n\t\t\t\t\"width\": \"30px\",\n\t\t\t\t\"height\": \"26px\",\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"margin\": \"5px\",\n\t\t\t\t\"padding\": \"3px 5px\",\n\t\t\t\t\"border-radius\": \"3px\",\n\t\t\t\t\"opacity\": \"0.5\",\n\t\t\t\t\"background\": \"rgba(255, 255, 255, 0.001)\",\n\t\t\t\t\"background-opacity\": \"0\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-icon:focus, .am5exporting-icon:hover, .am5exporting-menu-open .am5exporting-icon\", {\n\t\t\t\t\"background\": ic.get(\"secondaryButtonHover\")!.toCSS(),\n\t\t\t\t\"opacity\": \"1\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu path\", {\n\t\t\t\t\"fill\": ic.get(\"secondaryButtonText\")!.toCSS()\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list\", {\n\t\t\t\t\"display\": \"none\",\n\t\t\t\t\"list-style\": \"none\",\n\t\t\t\t\"list-style-type\": \"none\",\n\t\t\t\t\"margin\": \"5px\",\n\t\t\t\t\"background\": ic.get(\"secondaryButton\")!.toCSS(),\n\t\t\t\t\"padding\": \"5px 0\",\n\t\t\t\t\"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\")!.toCSS(),\n\t\t\t\t\"border-radius\": \"3px\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu-open .am5exporting-list\", {\n\t\t\t\t\"display\": \"block\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item\", {\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item a\", {\n\t\t\t\t\"padding\": \"3px 15px\",\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-item a:hover, .am5exporting-item a.am5exporting-item-active\", {\n\t\t\t\t\"background\": ic.get(\"secondaryButtonHover\")!.toCSS(),\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-align-left, .am5exporting-icon.am5exporting-align-left, .am5exporting-list.am5exporting-align-left\", {\n\t\t\t\t\"left\": \"0\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-align-right, .am5exporting-icon.am5exporting-align-right, .am5exporting-list.am5exporting-align-right\", {\n\t\t\t\t\"right\": \"0\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-valign-top, .am5exporting-icon.am5exporting-valign-top, .am5exporting-list.am5exporting-align-top\", {\n\t\t\t\t\"top\": \"0\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-menu.am5exporting-valign-bottom, .am5exporting-icon.am5exporting-valign-bottom, .am5exporting-list.am5exporting-align-bottom\", {\n\t\t\t\t\"bottom\": \"0\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list.am5exporting-align-left\", {\n\t\t\t\t\"margin-left\": \"40px\"\n\t\t\t}),\n\n\t\t\tnew StyleRule(element, \".am5exporting-list.am5exporting-align-right\", {\n\t\t\t\t\"margin-right\": \"40px\"\n\t\t\t}),\n\n\t\t\t// new StyleRule(element, \".${newPrefix}-menu-level-0\", {\n\t\t\t// \t\"position\": \"absolute\",\n\t\t\t// \t\"top\": \"5px\",\n\t\t\t// \t\"right\": \"5px\",\n\t\t\t// })\n\t\t]);\n\n\t\trules = new CounterDisposer(() => {\n\t\t\trules = undefined;\n\t\t\tdisposer.dispose();\n\t\t});\n\t}\n\n\treturn rules.increment();\n}","import type { Exporting, ExportingFormats, ExportingTypes } from \"./Exporting\"\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { IDisposer, Disposer } from \"../../core/util/Disposer\";\nimport exportingCSS from \"./ExportingCSS\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IExportingMenuItem {\n\n\t/**\n\t * Indicates type of the menu item:\n\t * * `\"format\"` - indicates export action\n\t * * `\"separator\"` - will show horizontal divider.\n\t * * `\"custom\"` - will invoke custom function when clicked.\n\t */\n\ttype: \"format\" | \"separator\" | \"custom\";\n\n\t/**\n\t * If `type` is set to `\"format\"`, clicking item will initiate export in\n\t * that format.\n\t */\n\tformat?: ExportingFormats;\n\n\t/**\n\t * Indicates export type: `\"image\"`, `\"data\"`, or `\"print\"`.\n\t */\n\texportType?: ExportingTypes;\n\n\t/**\n\t * Menu label.\n\t */\n\tlabel?: string;\n\n\t/**\n\t * Additional information.\n\t */\n\tsublabel?: string;\n\n\t/**\n\t * If `type` is set to `\"custom\"`, this needs to be set to a function.\n\t */\n\tcallback?: (menuItem?: any) => any;\n\n\t/**\n\t * A target for callback function.\n\t */\n\tcallbackTarget?: any;\n\n\t/**\n\t * A DOM element for the menu item.\n\t *\n\t * @readonly\n\t */\n\telement?: HTMLAnchorElement;\n\n}\n\nexport interface IExportingMenuSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal alignment of the menu.\n\t *\n\t * @default \"right\"\n\t */\n\talign?: \"left\" | \"right\";\n\n\t/**\n\t * Vertical alignment of the menu.\n\t *\n\t * @default \"top\"\n\t */\n\tvalign?: \"top\" | \"bottom\";\n\n\t/**\n\t * A reference to an element in the document to place export menu in.\n\t *\n\t * If not set, will use root element's container.\n\t */\n\tcontainer?: HTMLElement;\n\n\t/**\n\t * A list of menu items.\n\t */\n\titems?: IExportingMenuItem[];\n\n\t/**\n\t * A reference to related [[Exporting]] object.\n\t */\n\texporting?: Exporting;\n\n\t/**\n\t * If set to `false` the legend will not load default CSS.\n\t *\n\t * @default true\n\t */\n\tuseDefaultCSS?: boolean;\n\n\t/**\n\t * If set to `true` the menu will close automatically when export operation\n\t * is initiated.\n\t *\n\t * @default true\n\t */\n\tautoClose?: boolean;\n\n\t/**\n\t * Menu will disable all interactions for the underlying chart when browsing\n\t * the menu.\n\t *\n\t * @default true\n\t */\n\tdeactivateRoot?: boolean;\n\n}\n\nexport interface IExportingMenuPrivate extends IEntityPrivate {\n\n\t/**\n\t * A `<div>` element that acts as a container for other menu elements.\n\t */\n\tmenuElement?: HTMLDivElement;\n\n\t/**\n\t * A top-level `<ul>` element containing menu items.\n\t */\n\tlistElement?: HTMLUListElement;\n\n}\n\nexport interface IExportingMenuEvents extends IEntityEvents {\n\t\"menucreated\": {}\n\t\"menuopened\": {}\n\t\"menuclosed\": {}\n}\n\n/**\n * Displays a menu for [[Exporting]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/} for more info\n */\nexport class ExportingMenu extends Entity {\n\tpublic static className: string = \"ExportingMenu\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([ExportingMenu.className]);\n\n\tdeclare public _settings: IExportingMenuSettings;\n\tdeclare public _privateSettings: IExportingMenuPrivate;\n\tdeclare public _events: IExportingMenuEvents;\n\n\tprivate _menuElement?: HTMLDivElement;\n\tprivate _iconElement?: HTMLElement;\n\tprivate _listElement?: HTMLUListElement;\n\tprivate _itemElements?: HTMLLIElement[] = [];\n\tprivate _itemDisposers: Array<IDisposer> = [];\n\n\tprivate _cssDisposer?: IDisposer;\n\tprivate _activeItem?: IExportingMenuItem;\n\n\tpublic isOpen: boolean = false;\n\n\tprivate _isOver: boolean = false;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"container\", this._root._inner);\n\t\tthis._setRawDefault(\"align\", \"right\");\n\t\tthis._setRawDefault(\"valign\", \"top\");\n\t\tthis._setRawDefault(\"useDefaultCSS\", true);\n\t\tthis._setRawDefault(\"autoClose\", true);\n\t\tthis._setRawDefault(\"deactivateRoot\", true);\n\t\tthis._setRawDefault(\"items\", [{\n\t\t\ttype: \"separator\",\n\t\t\tlabel: this._t(\"Export\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"png\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"PNG\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"jpg\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"JPG\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"pdf\",\n\t\t\texportType: \"image\",\n\t\t\tlabel: this._t(\"PDF\"),\n\t\t\tsublabel: this._t(\"Image\")\n\t\t}, {\n\t\t\ttype: \"separator\",\n\t\t\texportType: \"data\",\n\t\t\t//label: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"json\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"JSON\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"csv\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"CSV\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"xlsx\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"XLSX\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"pdfdata\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"PDF\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"html\",\n\t\t\texportType: \"data\",\n\t\t\tlabel: this._t(\"HTML\"),\n\t\t\tsublabel: this._t(\"Data\")\n\t\t}, {\n\t\t\ttype: \"separator\"\n\t\t}, {\n\t\t\ttype: \"format\",\n\t\t\tformat: \"print\",\n\t\t\texportType: \"print\",\n\t\t\tlabel: this._t(\"Print\")\n\t\t}]);\n\n\t\tconst menuElement = document.createElement(\"div\");\n\t\tthis._menuElement = menuElement;\n\t\tthis.setPrivate(\"menuElement\", this._menuElement);\n\n\t\tconst iconElement = document.createElement(\"a\");\n\t\tthis._iconElement = iconElement;\n\n\t\tthis._listElement = document.createElement(\"ul\");\n\t\tthis._listElement.setAttribute(\"role\", \"menu\");\n\t\tthis.setPrivate(\"listElement\", this._listElement);\n\t\tthis._applyClassNames();\n\n\t\ticonElement.innerHTML = '<svg fill=\"none\" height=\"20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\"/></svg>';\n\t\ticonElement.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\ticonElement.setAttribute(\"aria-label\", this._t(\"Export\") + \"; \" + this._t(\"Press ENTER to open\"));\n\t\ticonElement.setAttribute(\"role\", \"button\");\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tif (document.activeElement == this._iconElement || this.isOpen) {\n\t\t\t\t\tif (ev.keyCode == 27) {\n\t\t\t\t\t\t// ESC\n\t\t\t\t\t\tthis.close();\n\t\t\t\t\t}\n\t\t\t\t\telse if (ev.keyCode == 13) {\n\t\t\t\t\t\t// ENTER\n\t\t\t\t\t\tif (this._activeItem) {\n\t\t\t\t\t\t\tthis._handleClick(this._activeItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.toggle();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (ev.keyCode == 38 || ev.keyCode == 40) {\n\t\t\t\t\t\tconst items = this.get(\"items\", []);\n\t\t\t\t\t\tlet currentIndex = (<any>items).indexOf(this._activeItem);\n\t\t\t\t\t\tif (this.get(\"valign\") == \"top\" && currentIndex == -1) {\n\t\t\t\t\t\t\tcurrentIndex = items.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dir = ev.keyCode == 38 ? -1 : 1;\n\t\t\t\t\t\tlet newIndex = currentIndex + dir;\n\t\t\t\t\t\tlet newItem;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (newIndex < 0) {\n\t\t\t\t\t\t\t\tnewIndex = items.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (newIndex > (items.length - 1)) {\n\t\t\t\t\t\t\t\tnewIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (items[newIndex].type == \"separator\") {\n\t\t\t\t\t\t\t\tnewIndex += dir;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tnewItem = items[newIndex];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (!newItem);\n\n\t\t\t\t\t\tif (newItem) {\n\t\t\t\t\t\t\tthis._handleItemFocus(newItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push($utils.addEventListener(iconElement, \"click\", (ev: MouseEvent) => {\n\t\t\tev.stopImmediatePropagation();\n\t\t\tthis.toggle();\n\t\t}));\n\n\t\tmenuElement.appendChild(this._iconElement);\n\t\tmenuElement.appendChild(this._listElement);\n\n\t\tconst container = this.get(\"container\", this._root._inner);\n\n\t\tcontainer.appendChild(this._menuElement);\n\n\t\tthis._disposers.push($utils.addEventListener(menuElement, $utils.getRendererEvent(\"pointerover\"), (_ev) => {\n\t\t\tthis._isOver = true;\n\t\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push($utils.addEventListener(menuElement, $utils.getRendererEvent(\"pointerout\"), (_ev) => {\n\t\t\tif (this.get(\"deactivateRoot\") && (this.isOpen || this._isOver)) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t\t}\n\t\t\tthis._isOver = false;\n\t\t}));\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\tif (this._menuElement) {\n\t\t\t\tcontainer.removeChild(this._menuElement);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push($utils.addEventListener(document, \"click\", (_ev) => {\n\t\t\tif (this.isOpen && !this._isOver) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t}));\n\n\t\tthis.loadDefaultCSS();\n\n\t\tthis._root.addDisposer(this);\n\n\t\tthis.events.dispatch(\"menucreated\", {\n\t\t\ttype: \"menucreated\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tif (this._itemElements!.length == 0) {\n\t\t\tthis.createItems();\n\t\t}\n\n\t\tif (this.isDirty(\"useDefaultCSS\")) {\n\t\t\tif (this.get(\"useDefaultCSS\")) {\n\t\t\t\tthis.loadDefaultCSS();\n\t\t\t}\n\t\t\telse if (this._cssDisposer) {\n\t\t\t\tthis._cssDisposer.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"exporting\")) {\n\t\t\tconst exporting = this.get(\"exporting\");\n\t\t\tif (exporting) {\n\t\t\t\tthis.createItems();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"align\") || this.isDirty(\"valign\")) {\n\t\t\tthis._applyClassNames();\n\t\t}\n\n\t\tif (this.isDirty(\"container\")) {\n\t\t\tconst container = this.get(\"container\");\n\t\t\tif (container) {\n\t\t\t\tcontainer.appendChild(this._menuElement!);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\t$array.each(this._itemDisposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n\n\tprivate _applyClassNames(): void {\n\t\tconst align = this.get(\"align\", \"right\");\n\t\tconst valign = this.get(\"valign\", \"top\");\n\t\tconst status = this.isOpen ? \"am5exporting-menu-open\" : \"am5exporting-menu-closed\";\n\n\t\tthis._menuElement!.className = \"am5exporting am5exporting-menu am5exporting-align-\" + align + \" am5exporting-valign-\" + valign + \" \" + status;\n\t\tthis._iconElement!.className = \"am5exporting am5exporting-icon am5exporting-align-\" + align + \" am5exporting-valign-\" + valign;\n\t\tthis._listElement!.className = \"am5exporting am5exporting-list am5exporting-align-\" + align + \" am5exporting-valign-\" + valign;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createItems(): void {\n\t\tconst exporting = this.get(\"exporting\");\n\t\tif (!exporting) {\n\t\t\treturn;\n\t\t}\n\t\tthis._listElement!.innerHTML = \"\";\n\t\tthis._itemElements = [];\n\t\tconst items = this.get(\"items\", []);\n\t\tconst supportedFormats = exporting.supportedFormats();\n\t\tconst supportedExportTypes = exporting.supportedExportTypes();\n\n\t\t$array.each(this._itemDisposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\tthis._itemDisposers.length = 0;\n\n\t\t$array.each(items, (item) => {\n\n\t\t\tif (item.format && supportedFormats.indexOf(item.format) == -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (item.exportType && supportedExportTypes.indexOf(item.exportType) == -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst li = document.createElement(\"li\");\n\t\t\tli.setAttribute(\"role\", \"menuitem\");\n\n\t\t\tli.className = \"am5exporting am5exporting-item am5exporting-type-\" + item.type;\n\t\t\tif (item.format) {\n\t\t\t\tli.className += \" am5exporting-format-\" + item.format;\n\t\t\t}\n\n\t\t\tconst a = document.createElement(\"a\");\n\n\t\t\tlet ariaLabel = this._t(\"Export\");\n\t\t\tif (item.label) {\n\t\t\t\ta.innerHTML = item.label;\n\t\t\t\tariaLabel += \" \" + item.label;\n\t\t\t}\n\n\t\t\tif (item.sublabel) {\n\t\t\t\ta.innerHTML += \" <span class=\\\"am5exporting-label-alt\\\">\" + item.sublabel + \"</span>\";\n\t\t\t\tariaLabel += \" (\" + item.sublabel + \")\";\n\t\t\t}\n\n\t\t\tif (item.callback) {\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"click\", (_ev) => {\n\t\t\t\t\titem.callback!.call(item.callbackTarget || this)\n\t\t\t\t}));\n\t\t\t\ta.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\t\t}\n\t\t\telse if (item.format && exporting) {\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"click\", (_ev) => {\n\t\t\t\t\tthis._handleClick(item);\n\t\t\t\t}));\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"focus\", (_ev) => {\n\t\t\t\t\tthis._handleItemFocus(item);\n\t\t\t\t}));\n\t\t\t\tthis._itemDisposers.push($utils.addEventListener(a, \"blur\", (_ev) => {\n\t\t\t\t\tthis._handleItemBlur(item);\n\t\t\t\t}));\n\t\t\t\ta.setAttribute(\"tabindex\", this._root.tabindex.toString());\n\t\t\t\ta.setAttribute(\"aria-label\", ariaLabel);\n\t\t\t}\n\n\t\t\titem.element = a;\n\t\t\tli.appendChild(a);\n\t\t\tthis._listElement!.appendChild(li);\n\t\t\tthis._itemElements!.push(li);\n\t\t});\n\t}\n\n\tprivate _handleClick(item: IExportingMenuItem): void {\n\t\tconst exporting = this.get(\"exporting\")!;\n\t\tif (this.get(\"autoClose\")) {\n\t\t\tthis.close();\n\t\t}\n\t\tif (item.format == \"print\") {\n\t\t\texporting.print();\n\t\t}\n\t\telse {\n\t\t\texporting.download(item.format!);\n\t\t}\n\t}\n\n\tprivate _handleItemFocus(item: IExportingMenuItem): void {\n\t\tif (item != this._activeItem) {\n\t\t\tif (this._activeItem) {\n\t\t\t\tthis._activeItem.element!.className = \"\";\n\t\t\t}\n\t\t\tthis._activeItem = item;\n\t\t\titem.element!.className = \"am5exporting-item-active\";\n\t\t\titem.element!.focus();\n\t\t}\n\t}\n\n\tprivate _handleItemBlur(item: IExportingMenuItem): void {\n\t\titem.element!.className = \"\";\n\t\tif (item == this._activeItem) {\n\t\t\tthis._activeItem = undefined\n\t\t}\n\t\tthis.setTimeout(() => {\n\t\t\tif (!document.activeElement || !$utils.contains(this.get(\"container\")!, document.activeElement!)) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t}, 10);\n\n\t}\n\n\t/**\n\t * Loads the default CSS.\n\t *\n\t * @ignore Exclude from docs\n\t */\n\tpublic loadDefaultCSS(): void {\n\t\tconst disposer = exportingCSS($utils.getShadowRoot(this._root.dom), this._root);\n\t\tthis._disposers.push(disposer);\n\t\tthis._cssDisposer = disposer;\n\n\t\t// if (this._element) {\n\t\t// \tthis._element.style.display = \"\";\n\t\t// }\n\t}\n\n\t/**\n\t * Opens menu.\n\t */\n\tpublic open(): void {\n\t\tthis.setTimeout(() => {\n\t\t\tthis.isOpen = true;\n\t\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t\t}\n\t\t\tthis._applyClassNames();\n\t\t\tthis.events.dispatch(\"menuopened\", {\n\t\t\t\ttype: \"menuopened\",\n\t\t\t\ttarget: this\n\t\t\t});\n\t\t}, 1);\n\t}\n\n\t/**\n\t * Closes menu.\n\t */\n\tpublic close(): void {\n\t\tthis.isOpen = false;\n\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t}\n\t\t$utils.blur();\n\t\tthis._applyClassNames();\n\t\tthis.events.dispatch(\"menuclosed\", {\n\t\t\ttype: \"menuclosed\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\t/**\n\t * Toggles menu open and close.\n\t */\n\tpublic toggle(): void {\n\t\tif (this.isOpen) {\n\t\t\tthis.close();\n\t\t}\n\t\telse {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\n}\n","import { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { Container } from \"../../core/render/Container\";\nimport { Picture } from \"../../core/render/Picture\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IAnnotatorSettings extends IEntitySettings {\n\n\t/**\n\t * Layer number to use for annotations.\n\t *\n\t * @default 1000\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Raw annotation info saved by MarkerJS.\n\t */\n\tmarkerState?: any;\n\n}\n\nexport interface IAnnotatorPrivate extends IEntityPrivate {\n}\n\nexport interface IAnnotatorEvents extends IEntityEvents {\n}\n\n\n\n/**\n * A plugin that can be used to annotate charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/annotator/} for more info\n */\nexport class Annotator extends Entity {\n\tpublic static className: string = \"Annotator\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Annotator.className]);\n\n\tdeclare public _settings: IAnnotatorSettings;\n\tdeclare public _privateSettings: IAnnotatorPrivate;\n\tdeclare public _events: IAnnotatorEvents;\n\n\tprivate _container?: Container;\n\tprivate _picture?: Picture;\n\tprivate _markerArea?: any;\n\tprivate _skipRender?: boolean = false;\n\n\t//public extraImages: Array<Root | IAnnotatorImageSource> = [];\n\t//public dataSources: any[] = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"layer\", 1000);\n\t\tthis._root.addDisposer(this);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"markerState\")) {\n\t\t\tthis._renderState();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers annotation mode on the chart. This will display UI toolbars and\n\t * disable all interactions on the chart itself.\n\t */\n\tpublic async open() {\n\n\t\t// Delay this so that it's not knocked off by closing of the ExportingMenu\n\t\tthis.setTimeout(() => {\n\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t}, 100)\n\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tmarkerArea.show();\n\t\tthis._picture!.hide(0);\n\t\tif (this.get(\"markerState\")) {\n\t\t\tmarkerArea.restoreState(this.get(\"markerState\"));\n\t\t}\n\t}\n\n\tpublic async _renderState() {\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tif (this.get(\"markerState\")) {\n\t\t\tthis._skipRender = true;\n\t\t\tmarkerArea.renderState(this.get(\"markerState\"));\n\t\t}\n\t}\n\n\t/**\n\t * Exists from annotation mode. All annotations remain visible on the chart.\n\t */\n\tpublic async close() {\n\t\t//this._root._renderer.interactionsEnabled = true;\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tmarkerArea!.close();\n\t\tthis._markerArea = undefined;\n\t}\n\n\t/**\n\t * Exits from annotation mode. Any changes made during last session of the\n\t * annotation editing are cancelled.\n\t */\n\tpublic async cancel() {\n\t\tthis._root._renderer.interactionsEnabled = true;\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tthis._picture!.show(0);\n\t\tmarkerArea!.close();\n\t\tthis._markerArea = undefined;\n\t\t//markerArea!.cancel();\n\t}\n\n\t/**\n\t * All annotations are removed.\n\t */\n\tpublic clear() {\n\t\tthis.set(\"markerState\", undefined);\n\t\tif (this._picture) {\n\t\t\tthis._picture.set(\"src\", \"\");\n\t\t}\n\t}\n\n\tpublic async toggle() {\n\t\tconst markerArea = await this.getMarkerArea();\n\t\tif (markerArea.isOpen) {\n\t\t\tthis.close();\n\t\t}\n\t\telse {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._markerArea && this._markerArea.isOpen) {\n\t\t\tthis._markerArea.close();\n\t\t}\n\t}\n\n\tprivate async _maybeInit() {\n\n\t\t// Create layer canvas\n\t\tif (!this._container) {\n\t\t\tthis._container = this._root.container.children.push(Container.new(this._root, {\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100,\n\t\t\t\tlayer: this.get(\"layer\"),\n\t\t\t\tinteractiveChildren: false\n\t\t\t}));\n\n\t\t\tthis._picture = this._container.children.push(Picture.new(this._root, {\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100\n\t\t\t}));\n\t\t}\n\n\t\t// Create MarkerArea\n\t\tif (!this._markerArea) {\n\t\t\tconst markerjs2 = await this._getMarkerJS();\n\t\t\tconst canvas = this._container._display.getCanvas();\n\t\t\tconst markerArea = new markerjs2.MarkerArea(canvas);\n\t\t\t//markerArea.renderTarget = canvas;\n\t\t\tmarkerArea.uiStyleSettings.logoPosition = \"right\";\n\t\t\tmarkerArea.uiStyleSettings.zIndex = 20;\n\t\t\tmarkerArea.targetRoot = canvas.parentElement!;\n\n\t\t\tthis._disposers.push($utils.addEventListener(markerArea, \"close\", () => {\n\t\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t\t\tthis._picture!.show(0);\n\t\t\t\tthis._markerArea = undefined;\n\t\t\t}));\n\n\t\t\tthis._disposers.push($utils.addEventListener(markerArea, \"render\", (event: any) => {\n\t\t\t\tconst picture = this._picture!;\n\t\t\t\tpicture.set(\"src\", event.dataUrl);\n\t\t\t\tif (!this._skipRender) {\n\t\t\t\t\tthis.set(\"markerState\", event.state);\n\t\t\t\t}\n\t\t\t\tthis._skipRender = false;\n\t\t\t}));\n\n\t\t\tthis._markerArea = markerArea;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate async _getMarkerJS(): Promise<any> {\n\t\treturn await import(/* webpackChunkName: \"markerjs2\" */ \"markerjs2\");\n\t}\n\n\t/**\n\t * An instance of MarkerJS's [[MarkerArea]].\n\t *\n\t * @see {@link https://markerjs.com/docs/getting-started} for more info\n\t * @return MarkerArea\n\t */\n\tpublic async getMarkerArea(): Promise<any> {\n\t\tawait this._maybeInit();\n\t\treturn this._markerArea;\n\t}\n\n}\n"],"names":["Picture","_Sprite","_inherits","_super","_createSuper","_this","_classCallCheck","Object","defineProperty","_assertThisInitialized","_root","_renderer","makePicture","undefined","_createClass","key","value","_get","_getPrototypeOf","prototype","call","this","isDirty","width","get","_display","$type","height","clear","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","_load","_this2","src","eventType","image","Image","crossOrigin","decode","then","_updateSize","catch","_error","events","isEnabled","dispatch","type","target","w","getPrivate","h","r","markDirtyBounds","markDirty","Sprite","classNames","concat","className","pdfmakePromise","Exporting","_Entity","apply","arguments","_setRawDefault","quality","maintainPixelRatio","delay","printMethod","imageFormat","indent","renameFields","separator","addColumnNames","emptyAs","addBOM","fontSize","align","addURL","addDisposer","menu","set","_disposers","push","format","options","newOptions","$object","customOptions","ext","fileName","_getFormatOptions","_context2","next","export","uri","sent","streamFile","stop","_callee2","_context3","initiatePrint","_callee3","promise","_context4","t0","_runTickerNow","exportImage","abrupt","exportJSON","exportCSV","exportHTML","exportXLSX","exportPDF","exportPDFData","_callee4","_context5","getCanvas","canvas","data","toDataURL","getContentType","disposeCanvas","_callee5","_context6","_callee6","mainCanvas","_rootContainer","extraImages","middleLeft","middleTop","middleWidth","middleHeight","extraRight","extraBottom","extras","$array","extraRoot","extra","Root","source","position","marginTop","marginRight","marginBottom","marginLeft","extraCanvas","extraWidth","extraHeight","crop","Math","max","left","top","newCanvas","getDisposableCanvas","ctx","getContext","background","findBackgroundColor","dom","backgroundOpacity","fillStyle","toCSS","fillRect","right","bottom","drawImage","_context7","_callee7","_context8","t1","encodeURIComponent","getJSON","t2","t3","_callee8","_context9","JSON","stringify","getData","_key","field","item","convertToSpecialFormat","_callee9","_context10","getCSV","_callee10","csv","br","dataFields","getDataFields","pivot","dataFieldsOrder","val","dataRow","len","length","i","dataValue","getCSVRow","a","b","ai","indexOf","bi","row","reverse","_context11","_callee11","_this3","asIs","items","_name","convertEmptyValue","replace","forceQuotes","search","RegExp","join","_context12","getHTML","_callee12","html","tableClass","_this4","getHTMLRow","_context13","_callee13","_this5","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","_context14","getXLSX","_callee14","_context15","getXLSXLib","XLSX","wbOptions","bookType","bookSST","sheetName","_normalizeExcelSheetName","_t","wb","SheetNames","Sheets","wsData","_this6","getXLSXRow","utils","aoa_to_sheet","workbook","workbookOptions","xlsx","write","_callee15","name","substr","_this7","_context16","_callee16","_xlsx","_context17","getPDF","_callee17","_context18","_callee18","includeImage","includeData","addFont","_regeneratorRuntime","wrap","_context19","prev","font","paths","normal","path","vfs","bytes","bold","italics","bolditalics","fonts","dataOptions","orientation","pageOrientation","getPdfmake","pdfmake","defaultMargins","doc","pageSize","pageMargins","defaultStyle","content","title","extraMargin","text","margin","document","location","href","alignment","fit","getPageSizeFit","hasData","getPDFData","table","extraFonts","Promise","success","createPdf","getBase64","_callee19","_this8","body","getPDFDataRow","headerRows","_context20","_callee20","_this9","all","_context","default","vfs_fonts","global","window","pdfMake","_callee","_pdfmake","margins","newMargins","fitSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","dataSource","_this10","newRow","event","_value","_field","keepOriginal","isDateField","Date","isNumericField","numberFormatter","isDurationField","durationFormatter","useTimestamps","getTime","useLocale","toLocaleString","dateFormatter","contentType","createElement","style","appendChild","removeChild","element","opacity","currentColor","getComputedStyle","getPropertyValue","match","parent","parentElement","Color","fromHex","fromCSS","blobDownloadSupport","link","download","parts","split","shift","decodeURIComponent","blob","Blob","url","URL","createObjectURL","click","setTimeout","revokeObjectURL","atob","e","chars","Array","charCode","Uint8Array","linkDownloadSupport","_printViaCSS","_printViaIframe","originalTitle","scroll","documentElement","scrollTop","rule","StyleRule","$utils","nonce","img","maxWidth","display","visibility","clipPath","print","test","navigator","userAgent","MSStream","dispose","iframe","contentWindow","open","close","load","execCommand","_this11","res","downloadSupport","disabled","Entity","rules","ExportingMenu","_inner","label","exportType","sublabel","menuElement","_menuElement","setPrivate","iconElement","_iconElement","_listElement","setAttribute","_applyClassNames","innerHTML","tabindex","toString","ev","activeElement","isOpen","keyCode","_activeItem","_handleClick","toggle","currentIndex","newItem","dir","newIndex","_handleItemFocus","stopImmediatePropagation","container","_ev","_isOver","interactionsEnabled","Disposer","loadDefaultCSS","_itemElements","createItems","_cssDisposer","_itemDisposers","x","valign","status","exporting","supportedFormats","supportedExportTypes","li","ariaLabel","callback","callbackTarget","_handleItemBlur","focus","disposer","root","_prefix","ic","interfaceColors","MultiDisposer","CounterDisposer","increment","exportingCSS","Annotator","_renderState","getMarkerArea","markerArea","show","_picture","hide","restoreState","_skipRender","renderState","_markerArea","_container","children","Container","new","p100","layer","interactiveChildren","_getMarkerJS","markerjs2","MarkerArea","uiStyleSettings","logoPosition","zIndex","targetRoot","dataUrl","state","_maybeInit"],"sourceRoot":""}