{"version":3,"file":"static/js/json_map.42041f9f.chunk.js","mappings":"2hBAqGsBA,EAAU,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAhC,SAAAA,IAAA,IAAAK,EAgBkE,OAhBlEC,EAAAA,EAAAA,GAAA,KAAAN,G,0BAUCO,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,U,gDAAwD,KAExDE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,e,gDAA8C,KAC9CE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,iDAAoC,IAEpCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,a,gDAA2D,KAC3DE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,gB,gDAA8D,KAAGA,CAiSlE,CADE,OACDK,EAAAA,EAAAA,GAAAV,EAAA,EAAAW,IAAA,YAAAC,MA/RU,WAAS,IAAAC,EAAA,KAClBC,KAAKC,OAAOC,KAAK,WAAY,gBAC7BF,KAAKG,eAAe,gBAAiB,YACrCH,KAAKG,eAAe,oBAAqB,gBACzCH,KAAKG,eAAe,UAAW,MAE/BH,KAAKI,GAAG,WAAW,SAACC,GACnB,IAAIC,EAAWP,EAAKQ,cAAcF,QAC9BC,GAAYA,GAAYD,GAC3BN,EAAKS,KAAKC,OAEZ,KAEAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAzB,EAAA0B,WAAA,kBAAAC,KAAA,KACD,GAAC,CAAAhB,IAAA,iBAAAC,MAES,WACT,IAAMO,EAAUL,KAAKc,IAAI,WACrBR,EAAWN,KAAKO,cAAcF,QAE9BC,GAAYA,GAAYD,IAC3BL,KAAKO,cAAcF,aAAUU,EAC7Bf,KAAKgB,gBAAiB,GAGlBhB,KAAKgB,iBACThB,KAAKiB,gBACLjB,KAAKgB,gBAAiB,EAExB,GAAC,CAAAnB,IAAA,mBAAAC,MAEM,WAAgB,IAAAoB,EAAA,KAOtB,IANAR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAzB,EAAA0B,WAAA,yBAAAC,KAAA,MAEIb,KAAKmB,cACRnB,KAAKoB,iBAGFpB,KAAKqB,QAAQ,YAAcrB,KAAKqB,QAAQ,YAAcrB,KAAKqB,QAAQ,WAAY,CAElFrB,KAAKoB,iBAEL,IAAME,EAAQtB,KAAKsB,MAEbC,EAAUvB,KAAKc,IAAI,WAErBS,IACCD,IACHA,EAAME,gBAAkB,MAEzBC,EAAAA,GAAYF,GAAS,SAACG,GACrB,IAAMC,EAAWT,EAAKU,gBAAgBF,GAClCC,GACHT,EAAKW,iBAAiBF,EAExB,KAGIJ,GAA6B,GAAlBA,EAAQO,SACvBL,EAAAA,GAAYzB,KAAK+B,WAAW,SAACJ,GAC5BT,EAAKc,mBAAmBL,EACzB,IACA3B,KAAK+B,UAAY,IAGlB,IAAME,EAAUjC,KAAKc,IAAI,WACrBmB,IACCX,IACHA,EAAME,gBAAkB,MAEzBC,EAAAA,GAAYzB,KAAKkC,WAAW,SAACP,GAC5B,IAAMD,EAAKC,EAASb,IAAI,MACpBY,IAA8B,GAAxBO,EAAQE,QAAQT,GACzBR,EAAKkB,oBAAoBT,GAGzBT,EAAKmB,sBAAsBV,EAE7B,KAGIM,IACJR,EAAAA,GAAYzB,KAAKsC,cAAc,SAACX,GAC/BT,EAAKmB,sBAAsBV,EAC5B,IACA3B,KAAKsC,aAAe,G,CAIvB,GAAC,CAAAzC,IAAA,mBAAAC,MAES,SAAiB6B,GAC1B3B,KAAKuC,gBAAgBZ,EAASb,IAAI,aAClCW,EAAAA,GAAYzB,KAAK+B,UAAWJ,EAC7B,GAAC,CAAA9B,IAAA,qBAAAC,MAES,SAAmB6B,GAC5B3B,KAAKwC,aAAab,EAASb,IAAI,YAAad,KAC7C,GAAC,CAAAH,IAAA,sBAAAC,MAES,SAAoB6B,GAC7B3B,KAAKuC,gBAAgBZ,EAASb,IAAI,aAClCW,EAAAA,GAAYzB,KAAKsC,aAAcX,EAChC,GAAC,CAAA9B,IAAA,wBAAAC,MAES,SAAsB6B,GAC/B3B,KAAKwC,aAAab,EAASb,IAAI,YAAad,KAC7C,GAAC,CAAAH,IAAA,eAAAC,MAES,SAAa4B,EAAYe,EAAgCC,GAClE,GAAID,EAAU,CACb,GAAuB,GAAnBA,EAASX,OACZ,OAAO,EAGP,IAA6B,GAAzBW,EAASN,QAAQT,GACpB,OAAO,C,CAKV,QAAIgB,GAAYA,EAASZ,OAAS,IACJ,GAAzBY,EAASP,QAAQT,GAKvB,GAAC,CAAA7B,IAAA,gBAAAC,MAES,WAAa,IAAA6C,EAAA,KAEhBtC,EAAUL,KAAKc,IAAI,WACzB,GAAIT,EAAS,CAEZ,IAAIuC,EAEgB,qBAAhBvC,EAAQwC,KACXD,EAAWvC,EAAQuC,SAEK,WAAhBvC,EAAQwC,KAChBD,EAAW,CAACvC,IAE0G,GAA9G,CAAC,QAAS,aAAc,UAAW,aAAc,kBAAmB,gBAAgB8B,QAAQ9B,EAAQwC,MAC5GD,EAAW,CAAC,CAAEE,SAAUzC,IAGxB0C,QAAQC,IAAI,4BAGb,IAAMC,EAAejD,KAAKc,IAAI,gBAC9B,GAAI8B,EAIH,IAFA,IAAMM,EAAUlD,KAAKc,IAAI,UAAW,MAAMqC,EAAA,WAGzC,IAAIC,EAAeR,EAASS,GACxBP,EAAgBM,EAAQN,SAE5B,GAAIA,EAAU,CACb,IAYKnB,EASA2B,EArBDT,EAAOC,EAASD,KAChBnB,EAAa0B,EAAQF,GAMzB,GAJID,GAAgBA,EAAavB,KAChC0B,EAAQG,WAAWC,KAAOP,EAAavB,KAGN,GAA9BiB,EAAKc,OAAOtB,QAAQU,GAOb,MAANnB,IAEHC,EAAWF,EAAAA,GAAYkB,EAAKT,WAAW,SAACpC,GACvC,OAAOA,EAAMgB,IAAI,OAASY,CAC3B,KAKGC,IACH2B,EAAa3B,EAAS+B,aAIlB/B,EAQC2B,EAAWR,WACfQ,EAAWR,SAAWA,EACtBQ,EAAWK,aAAed,EAC1BlB,EAASiC,IAAI,WAAYd,GACzBnB,EAASiC,IAAI,eAAgBf,GAC7BF,EAAKkB,gBAAgBlC,MAZtB2B,EAAa,CAAER,SAAUA,EAAUa,aAAcd,EAAMiB,iBAAiB,IAC7DZ,GAAWxB,EACtBiB,EAAKnC,KAAKN,KAAKoD,IAehBS,EAAAA,GAA2BX,EAAQG,WAAYD,E,GAnDzCD,EAAI,EAAGW,EAAMpB,EAASd,OAAQuB,EAAIW,EAAKX,IAAGF,IAyDpD,IAAMN,EAAO,mBACT7C,KAAKiE,OAAOC,UAAUrB,IACzB7C,KAAKiE,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQpE,M,CAGpD,GAAC,CAAAH,IAAA,yBAAAC,MAOM,SAAuBuE,GAC7BrE,KAAKsE,SAASC,UAAUvE,KAAKwE,iBAC9B,GAAC,CAAA3E,IAAA,0BAAAC,MAEM,WAEP,GAEA,CAAAD,IAAA,aAAAC,MAGO,WACN,IAAMwB,EAAQtB,KAAKsB,MACnB,GAAIA,EACH,OAAOA,EAAMR,IAAI,aAEnB,GAEA,CAAAjB,IAAA,UAAAC,MAGO,WACN,IAAMwB,EAAQtB,KAAKsB,MACnB,GAAIA,EACH,OAAOA,EAAMmD,WAAW,UAE1B,GAAC,CAAA5E,IAAA,eAAAC,MAES,SAAagD,EAAe4B,GACrC,GAAI5B,GAAY4B,EAAO5D,IAAI,iBAAiB,GAAO,CAClDd,KAAK2E,YAAYzE,KAAK4C,GAEtB,IAAMxB,EAAQtB,KAAKsB,MACfA,GACHA,EAAMsD,qB,CAGT,GAAC,CAAA/E,IAAA,kBAAAC,MAES,SAAgBgD,GACzB,GAAIA,EAAU,CACbrB,EAAAA,GAAczB,KAAK2E,YAAa7B,GAEhC,IAAMxB,EAAQtB,KAAKsB,MACfA,GACHA,EAAMsD,qB,CAGT,GAAC,CAAA/E,IAAA,WAAAC,MAES,YACTY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAzB,EAAA0B,WAAA,iBAAAC,KAAA,MAEA,IAAMS,EAAQtB,KAAKsB,MACfA,GACHA,EAAMoD,OAAOG,YAAY7E,KAE3B,GAAC,CAAAH,IAAA,eAAAC,MAES,YACTY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAzB,EAAA0B,WAAA,qBAAAC,KAAA,MACAb,KAAKgB,gBAAiB,EACtBhB,KAAK8E,cAAc,UACpB,KAAC5F,CAAA,CAhT8B,CAAQ6F,EAAAA,GACvCtF,OAAAC,eAAAR,EAAA,a,gDAAkC,cAClCO,OAAAC,eAAAR,EAAA,c,gDAA0C6F,EAAAA,EAAOC,WAAWC,OAAO,CAAC/F,EAAUgG,c,iCCtGlEC,EAAK,WAChB,SAAAA,KAAc3F,EAAAA,EAAAA,GAAA,KAAA2F,GACZnF,KAAKoF,UAAY,IAAIC,aAAa,IAClCrF,KAAKsF,GAAK,CACZ,CAkCC,OAlCA1F,EAAAA,EAAAA,GAAAuF,EAAA,EAAAtF,IAAA,MAAAC,MACD,SAAIyF,GAGF,IAFA,IAAMC,EAAIxF,KAAKoF,UACX/B,EAAI,EACCoC,EAAI,EAAGA,EAAIzF,KAAKsF,IAAMG,EAAI,GAAIA,IAAK,CAC1C,IAAMC,EAAIF,EAAEC,GACVE,EAAKJ,EAAIG,EACTE,EAAKC,KAAKC,IAAIP,GAAKM,KAAKC,IAAIJ,GAAKH,GAAKI,EAAKD,GAAKA,GAAKC,EAAKJ,GACxDK,IAAIJ,EAAEnC,KAAOuC,GACjBL,EAAII,CACN,CAGA,OAFAH,EAAEnC,GAAKkC,EACPvF,KAAKsF,GAAKjC,EAAI,EACPrD,IACT,GAAC,CAAAH,IAAA,UAAAC,MACD,WACE,IACiByF,EAAGG,EAAGE,EADjBJ,EAAIxF,KAAKoF,UACXW,EAAI/F,KAAKsF,GAAcK,EAAK,EAChC,GAAII,EAAI,EAAG,CAET,IADAJ,EAAKH,IAAIO,GACFA,EAAI,IACTR,EAAII,IAGJC,GAFAF,EAAIF,IAAIO,MACRJ,EAAKJ,EAAIG,GACMH,OAGbQ,EAAI,IAAOH,EAAK,GAAKJ,EAAEO,EAAI,GAAK,GAAOH,EAAK,GAAKJ,EAAEO,EAAI,GAAK,KAC9DL,EAAS,EAALE,KACJL,EAAII,EAAKD,GACIC,IAAIA,EAAKJ,EAE1B,CACA,OAAOI,CACT,KAACR,CAAA,CAtCe,GCDX,IAAIa,EAAU,KACVC,EAAW,MACXC,EAAKL,KAAKM,GACVC,EAASF,EAAK,EACdG,EAAYH,EAAK,EACjBI,EAAW,EAALJ,EAENK,EAAU,IAAML,EAChBM,EAAUN,EAAK,IAEfJ,EAAMD,KAAKC,IACXW,EAAOZ,KAAKY,KACZC,EAAQb,KAAKa,MACbC,EAAMd,KAAKc,IACXC,EAAOf,KAAKe,KACZC,EAAMhB,KAAKgB,IAEXC,GADQjB,KAAKkB,MACLlB,KAAKiB,OACb9D,EAAM6C,KAAK7C,IAEXgE,GADMnB,KAAKoB,IACLpB,KAAKmB,KACXE,EAAOrB,KAAKqB,MAAQ,SAAS3B,GAAK,OAAOA,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAI,CAAG,EACrE4B,EAAOtB,KAAKsB,KACZC,EAAMvB,KAAKuB,IAMf,SAASC,EAAK9B,GACnB,OAAOA,EAAI,EAAIa,EAASb,GAAK,GAAKa,EAASP,KAAKwB,KAAK9B,EACvD,CAEO,SAAS+B,EAAS/B,GACvB,OAAQA,EAAIyB,EAAIzB,EAAI,IAAMA,CAC5B,CCnCe,SAASgC,IAAQ,CCAhC,SAASC,EAAe1E,EAAU2E,GAC5B3E,GAAY4E,EAAmBC,eAAe7E,EAASD,OACzD6E,EAAmB5E,EAASD,MAAMC,EAAU2E,EAEhD,CAEA,ICDIG,EACAC,EACAC,EACAC,EDFAC,EAAmB,CACrBC,QAAS,SAASC,EAAQT,GACxBD,EAAeU,EAAOpF,SAAU2E,EAClC,EACAU,kBAAmB,SAASD,EAAQT,GAElC,IADA,IAAI7E,EAAWsF,EAAOtF,SAAUS,GAAK,EAAG0C,EAAInD,EAASd,SAC5CuB,EAAI0C,GAAGyB,EAAe5E,EAASS,GAAGP,SAAU2E,EACvD,GAGEC,EAAqB,CACvBU,OAAQ,SAASF,EAAQT,GACvBA,EAAOY,QACT,EACAC,MAAO,SAASJ,EAAQT,GACtBS,EAASA,EAAOK,YAChBd,EAAOe,MAAMN,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAC5C,EACAO,WAAY,SAASP,EAAQT,GAE3B,IADA,IAAIc,EAAcL,EAAOK,YAAalF,GAAK,EAAG0C,EAAIwC,EAAYzG,SACrDuB,EAAI0C,GAAGmC,EAASK,EAAYlF,GAAIoE,EAAOe,MAAMN,EAAO,GAAIA,EAAO,GAAIA,EAAO,GACrF,EACAQ,WAAY,SAASR,EAAQT,GAC3BkB,EAAWT,EAAOK,YAAad,EAAQ,EACzC,EACAmB,gBAAiB,SAASV,EAAQT,GAEhC,IADA,IAAIc,EAAcL,EAAOK,YAAalF,GAAK,EAAG0C,EAAIwC,EAAYzG,SACrDuB,EAAI0C,GAAG4C,EAAWJ,EAAYlF,GAAIoE,EAAQ,EACrD,EACAoB,QAAS,SAASX,EAAQT,GACxBqB,EAAcZ,EAAOK,YAAad,EACpC,EACAsB,aAAc,SAASb,EAAQT,GAE7B,IADA,IAAIc,EAAcL,EAAOK,YAAalF,GAAK,EAAG0C,EAAIwC,EAAYzG,SACrDuB,EAAI0C,GAAG+C,EAAcP,EAAYlF,GAAIoE,EAChD,EACAuB,mBAAoB,SAASd,EAAQT,GAEnC,IADA,IAAIwB,EAAaf,EAAOe,WAAY5F,GAAK,EAAG0C,EAAIkD,EAAWnH,SAClDuB,EAAI0C,GAAGyB,EAAeyB,EAAW5F,GAAIoE,EAChD,GAGF,SAASkB,EAAWJ,EAAad,EAAQyB,GACvC,IAA6CC,EAAzC9F,GAAK,EAAG0C,EAAIwC,EAAYzG,OAASoH,EAErC,IADAzB,EAAO2B,cACE/F,EAAI0C,GAAGoD,EAAaZ,EAAYlF,GAAIoE,EAAOe,MAAMW,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACnG1B,EAAO4B,SACT,CAEA,SAASP,EAAcP,EAAad,GAClC,IAAIpE,GAAK,EAAG0C,EAAIwC,EAAYzG,OAE5B,IADA2F,EAAO6B,iBACEjG,EAAI0C,GAAG4C,EAAWJ,EAAYlF,GAAIoE,EAAQ,GACnDA,EAAO8B,YACT,CAEe,WAASrB,EAAQT,GAC1BS,GAAUF,EAAiBL,eAAeO,EAAOrF,MACnDmF,EAAiBE,EAAOrF,MAAMqF,EAAQT,GAEtCD,EAAeU,EAAQT,EAE3B,CC1DA,IAAI+B,EAAe,CACjBnB,OAAQd,EACRiB,MAAOjB,EACP6B,UAMF,WACEI,EAAahB,MAAQiB,EACrBD,EAAaH,QAAUK,CACzB,EAREL,QAAS9B,EACT+B,aAAc/B,EACdgC,WAAYhC,GAQd,SAASmC,IACPF,EAAahB,MAAQgB,EAAaH,QAAU9B,CAC9C,CAEA,SAASkC,EAAiBE,EAAQC,GAEhC/B,EADA8B,GAAUnD,EACQsB,EAAUd,EADT4C,GAAOpD,GACYuB,EAAUpB,EAAIiD,GACpDJ,EAAahB,MAAQqB,EACvB,CAEA,SAASA,GAAYF,EAAQC,GAC3BD,GAAUnD,EACV,IAAIsD,EAAS9C,EADM4C,GAAOpD,GAEtBuD,EAASpD,EAAIiD,GACbI,EAAQlE,EAAI6D,EAAS9B,GACrBoC,EAAWtD,EAAIqD,GAEfzE,EAAIwE,EADO/C,EAAIgD,GAEftE,EAAIqC,EAAU+B,EAAShC,EAAUiC,EAASE,EAC1CC,EAAIpC,EAAUgC,EAAS/B,EAAUgC,EAASE,EAC9CrC,EAAUuC,IAAIzD,EAAMS,EAAK5B,EAAIA,EAAIG,EAAIA,GAAIwE,IACzCrC,EAAU8B,EAAQ7B,EAAUgC,EAAQ/B,EAAUgC,CAChD,CAEe,YAAS7B,GAGtB,OAFAN,EAAY,IAAIzC,EAChBsC,EAAOS,EAAQsB,IACP5B,CACV,CClDA,IAAIW,GAAc,CAAC,KAAM,MACrBL,GAAS,CAACrF,KAAM,aAAc0F,YAAaA,IAEhC,YAAS6B,EAAGC,GAGzB,OAFA9B,GAAY,GAAK6B,EACjB7B,GAAY,GAAK8B,EACVvI,GAAOoG,GAChB,CCkCO,IAAMoC,GAAQ,SAAAC,IAAAnL,EAAAA,EAAAA,GAAAkL,EAAAC,GAAA,IAAAlL,GAAAC,EAAAA,EAAAA,GAAAgL,GAArB,SAAAA,IAAA,IAAA/K,EAQ6C,OAR7CC,EAAAA,EAAAA,GAAA,KAAA8K,G,0BAQC7K,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,oB,iDAAsC,IAAMA,CAqN7C,CADE,OACDK,EAAAA,EAAAA,GAAA0K,EAAA,EAAAzK,IAAA,iBAAAC,MAnNO,WAAc,IAAAC,EAAA,KAGpB,IAFAW,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2J,EAAA1J,WAAA,uBAAAC,KAAA,MAEIb,KAAKwK,kBAAoBxK,KAAKqB,QAAQ,aAAerB,KAAKqB,QAAQ,aAAc,CACnF,IAAMyB,EAAW9C,KAAKc,IAAI,YAC1B,GAAIgC,EAAU,CACb,IAAM4B,EAAS1E,KAAKyE,WAAW,UAC/B,GAAIC,EAAQ,CACX,IAAMpD,EAAQoD,EAAOpD,MACrB,GAAIA,EAAO,CACV,IAAMmJ,EAAanJ,EAAMR,IAAI,cACzB4J,EAA2B,KAE3BD,GAAcA,EAAWC,YAC5BA,EAAYD,EAAWC,YACvBD,EAAWE,UAAU3K,KAAKc,IAAI,YAAa,MAE5C,IAAMa,EAAW3B,KAAK2B,SAChBiJ,EAAUtJ,EAAMmD,WAAW,WACjC,GAAImG,GAAWjJ,EAEd,GADA3B,KAAK6K,QAAS,EAC0C,YAApDlJ,EAASb,IAAI,WAAY4D,EAAO5D,IAAI,aAA4B,CAEnE,IAAMgC,EAAW9C,KAAKc,IAAI,YAE1B,GAAIgC,EAAU,CACb,IAGKgI,EAHDvC,EAAczF,EAASyF,YAC3B,GAAIA,EAIkB,cAAjBzF,EAASD,KACZiI,EAAW,CAACvC,GAEa,mBAAjBzF,EAASD,OACjBiI,EAAWvC,GAGZvI,KAAK4D,IAAI,QAAQ,SAACmH,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAShJ,OAAQkJ,IAAK,CACzC,IAAIC,EAAUH,EAASE,GACvB,GAAIC,EAAQnJ,OAAS,EAAG,CACvB,IAAMoJ,EAAMD,EAAQ,GACdE,EAAK7J,EAAM8J,QAAQ,CAAEC,UAAWH,EAAI,GAAII,SAAUJ,EAAI,KAC5DH,EAAQQ,OAAOJ,EAAG5F,EAAG4F,EAAGzF,GAExB,IAAK,IAAIF,EAAI,EAAGA,EAAIyF,EAAQnJ,OAAQ0D,IAAK,CACxC,IAAMgG,EAAKP,EAAQzF,GACbiG,EAAKnK,EAAM8J,QAAQ,CAAEC,UAAWG,EAAG,GAAIF,SAAUE,EAAG,KAC1DT,EAAQQ,OAAOE,EAAGlG,EAAGkG,EAAG/F,E,GAI5B,G,OAKF1F,KAAK4D,IAAI,QAAQ,SAAC8H,GACbjB,IAAyC,IAA3B/F,EAAO5D,IAAI,aAC5B2J,EAAWC,UAAU,KAGtBE,EAAQe,QAAQ5L,EAAK2L,UACrBd,EAAQ9H,GACR8H,EAAQe,QAAQ,MAEZlB,GAAcA,EAAWC,WAC5BD,EAAWC,UAAUA,EAEvB,G,GAML,IAAM7H,EAAO,cACT7C,KAAKiE,OAAOC,UAAUrB,IACzB7C,KAAKiE,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQpE,M,CAGpD,GAEA,CAAAH,IAAA,sBAAAC,MAGO,WACNE,KAAK4L,YACL5L,KAAKwK,kBAAmB,CACzB,GAAC,CAAA3K,IAAA,cAAAC,MAEM,YACNY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2J,EAAA1J,WAAA,oBAAAC,KAAA,MACAb,KAAKwK,kBAAmB,CACzB,GAAC,CAAA3K,IAAA,mBAAAC,MAEM,WACN,IAAI+L,EAAW7L,KAAKc,IAAI,YACpBgL,EAAW9L,KAAKc,IAAI,YAEpByE,EAAI,EACJG,EAAI,EAUR,GARIqG,EAAAA,GAAeF,KAClBtG,EAAIsG,GAGDE,EAAAA,GAAeD,KAClBpG,EAAIoG,GAGDD,aAAoBG,EAAAA,GAAS,CAChC,IAAMC,EAAWjM,KAAKkM,mBAAmBL,EAAS/L,OAC5C4E,EAAS1E,KAAKyE,WAAW,UAC/B,GAAIC,EAAQ,CACX,IAAMpD,EAAQoD,EAAOpD,MACrB,GAAIA,EAAO,CACV,IAAMkH,EAAQlH,EAAM8J,QAAQa,GAC5B1G,EAAIiD,EAAMjD,EACVG,EAAI8C,EAAM9C,C,GAKb,MAAO,CAAEH,EAAAA,EAAGG,EAAAA,EACb,GAEA,CAAA7F,IAAA,qBAAAC,MAMO,SAAmBqM,GAEzB,IAAMrJ,EAAW9C,KAAKc,IAAI,YACpB4D,EAAS1E,KAAKyE,WAAW,UACzBnD,EAAQoD,EAAOpD,MACfK,EAAW3B,KAAK2B,SAEtB,GAAImB,GAAY4B,GAAUpD,GAASK,EAAU,CAC5C,IAOIyK,EACAC,EAREC,EAAW3K,EAASb,IAAI,WAAY4D,EAAO5D,IAAI,aACjDyL,EAAwBC,GAAU1J,GAClC2J,EAA0B,EAG1BC,EAAoB,EACpBC,EAAoB,EAIpBpE,EAAczF,EAASyF,YAC3B,GAAIA,EAAa,CAChB,IAAIuC,EAEiB,cAAjBhI,EAASD,KACZiI,EAAW,CAACvC,GAEa,mBAAjBzF,EAASD,OACjBiI,EAAWvC,GAGZ,IAAK,IAAIyC,EAAI,EAAGA,EAAIF,EAAShJ,OAAQkJ,IAAK,CACzC,IAAIC,EAAUH,EAASE,GACvB,GAAIC,EAAQnJ,OAAS,GACpB,IAAK,IAAI0D,EAAI,EAAGA,EAAIyF,EAAQnJ,OAAQ0D,IASnC,GALAkH,EAAYD,EAAkBF,EAG9BI,GADAF,GADaG,GAJbR,EAASnB,EAAQzF,EAAI,GACrB6G,EAASpB,EAAQzF,KAKa+G,EAE1BG,GAAaP,GAAYQ,EAAYR,EAAU,CAClDnB,EAAIF,EAAShJ,OACb,K,OAIwB,GAAlBmJ,EAAQnJ,SAChBsK,EAASnB,EAAQ,GACjBoB,EAASpB,EAAQ,GACjByB,EAAY,EACZC,EAAY,E,CAId,GAAIP,GAAUC,EAAQ,CACrB,IACIQ,EADAC,GAAsBX,EAAWO,IAAcC,EAAYD,GAG/D,GAAgB,YAAZJ,EAAwB,CAC3B,IAAInB,EAAK7J,EAAM8J,QAAQ,CAAEC,UAAWe,EAAO,GAAId,SAAUc,EAAO,KAC5DW,EAAKzL,EAAM8J,QAAQ,CAAEC,UAAWgB,EAAO,GAAIf,SAAUe,EAAO,KAE5D9G,EAAI4F,EAAG5F,GAAKwH,EAAGxH,EAAI4F,EAAG5F,GAAKuH,EAC3BpH,EAAIyF,EAAGzF,GAAKqH,EAAGrH,EAAIyF,EAAGzF,GAAKoH,EAE/B,OAAOxL,EAAM0L,OAAO,CAAEzH,EAAGA,EAAGG,EAAGA,G,CAI/B,OADAmH,EC7PS,SAASzC,EAAGC,GACzB,IAAI4C,EAAK7C,EAAE,GAAK5D,EACZ0G,EAAK9C,EAAE,GAAK5D,EACZ2G,EAAK9C,EAAE,GAAK7D,EACZ4G,EAAK/C,EAAE,GAAK7D,EACZ6G,EAAM1G,EAAIuG,GACVI,EAAMtG,EAAIkG,GACVK,EAAM5G,EAAIyG,GACVI,EAAMxG,EAAIoG,GACVK,EAAMJ,EAAM1G,EAAIsG,GAChBS,EAAML,EAAMrG,EAAIiG,GAChBU,EAAMJ,EAAM5G,EAAIwG,GAChBS,EAAML,EAAMvG,EAAImG,GAChBU,EAAI,EAAIxG,EAAKF,EAAKG,EAAS8F,EAAKF,GAAMG,EAAME,EAAMjG,EAAS6F,EAAKF,KAChEa,EAAI9G,EAAI6G,GAERE,EAAcF,EAAI,SAASG,GAC7B,IAAIC,EAAIjH,EAAIgH,GAAKH,GAAKC,EAClBI,EAAIlH,EAAI6G,EAAIG,GAAKF,EACjBvI,EAAI2I,EAAIT,EAAMQ,EAAIN,EAClBjI,EAAIwI,EAAIR,EAAMO,EAAIL,EAClB1D,EAAIgE,EAAIZ,EAAMW,EAAIT,EACtB,MAAO,CACL9G,EAAMhB,EAAGH,GAAKgB,EACdG,EAAMwD,EAAG/C,EAAK5B,EAAIA,EAAIG,EAAIA,IAAMa,EAEpC,EAAI,WACF,MAAO,CAAC0G,EAAK1G,EAAS2G,EAAK3G,EAC7B,EAIA,OAFAwH,EAAYI,SAAWN,EAEhBE,CACT,CD4NiBK,CAAehC,EAAQC,EAAvB+B,CAA+BtB,GACnC,CAAEzB,UAAWwB,EAAS,GAAIvB,SAAUuB,EAAS,G,GAMxD,MAAO,CAAExB,UAAW,EAAGC,SAAU,EAClC,KAAChB,CAAA,CA5NmB,CAAQ+D,EAAAA,GAM5B5O,OAAAC,eAAA4K,GAAA,a,gDAAkC,YAClC7K,OAAAC,eAAA4K,GAAA,c,gDAA0C+D,EAAAA,EAASrJ,WAAWC,OAAO,CAACqF,GAAQpF,c,0BEiClEoJ,GAAc,SAAAC,IAAAnP,EAAAA,EAAAA,GAAAkP,EAAAC,GAAA,IAAAlP,GAAAC,EAAAA,EAAAA,GAAAgP,GAA3B,SAAAA,IAAA,IAAA/O,EAqC2F,OArC3FC,EAAAA,EAAAA,GAAA,KAAA8O,G,0BAyBC7O,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Y,gDAAkD,IAAIiP,GAAAA,EACrDC,GAAAA,GAASC,IAAI,CAAC,IACd,kBAAMpE,GAAQqE,KAAKpP,EAAKqP,MAAO,CAAC,EAAG,CAACrP,EAAKsP,SAASC,UAAU,MAU7DrP,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,U,gDAAwD,CAAC,aAAc,qBAAmBA,CAkK3F,CADE,OACDK,EAAAA,EAAAA,GAAA0O,EAAA,EAAAzO,IAAA,YAAAC,MArMU,WACTE,KAAKC,OAAOC,KAAK,YACjBF,KAAKG,eAAe,gBAAiB,aACrCO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,kBAAAC,KAAA,KACD,GAEA,CAAAhB,IAAA,cAAAC,MAGO,SAAY6B,GAClB,IAAMoN,EAAU/O,KAAKsE,SAASpE,KAAKF,KAAK6O,SAASG,QAGjD,OAFAD,EAAQE,aAAatN,GACrB3B,KAAK6O,SAAS3O,KAAK6O,GACZA,CACR,GAuBA,CAAAlP,IAAA,sBAAAC,MAGO,WACN2B,EAAAA,GAAYzB,KAAKkC,WAAW,SAACP,GAC5B,IAAIoN,EAAUpN,EAASb,IAAI,WACvBiO,GACHA,EAAQG,qBAEV,GACD,GAAC,CAAArP,IAAA,mBAAAC,MAEM,YACNY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,yBAAAC,KAAA,MAEIb,KAAKqB,QAAQ,WAChBrB,KAAK6O,SAASC,SAASlL,IAAI,SAAU5D,KAAKc,IAAI,UAEhD,GAAC,CAAAjB,IAAA,kBAAAC,MAES,SAAgB6B,GAA6C,IAAA5B,EAAA,MACtEW,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,wBAAAC,KAAA,KAAsBc,GAEtB,IAAIoN,EAAUpN,EAASb,IAAI,WACtBiO,IACJA,EAAU/O,KAAKmP,YAAYxN,IAG5B3B,KAAKoP,uBAAuBzN,GAC5BA,EAASvB,GAAG,mBAAmB,WAC9BL,EAAKqP,uBAAuBzN,EAC7B,IAEAA,EAASiC,IAAI,UAAWmL,GAExB/O,KAAKwC,aAAab,EAASb,IAAI,YAAad,MAE5C+O,EAAQM,WAAW,SAAUrP,KAC9B,GAAC,CAAAH,IAAA,yBAAAC,MAES,SAAuB6B,GAA6C,IAAAT,EAAA,KAEvEoO,EAAkB3N,EAASb,IAAI,mBACjCwO,IACH7N,EAAAA,GAAY6N,GAAiB,SAAC9G,GAE7BA,EAAMpI,GAAG,YAAY,WACpBc,EAAKqO,gBAAgB5N,EACtB,IAEA6G,EAAMpI,GAAG,aAAa,WACrBc,EAAKqO,gBAAgB5N,EACtB,IAEA6G,EAAMpI,GAAG,YAAY,WACpBc,EAAKqO,gBAAgB5N,EACtB,GACD,IAEA3B,KAAKuP,gBAAgB5N,GAEvB,GAEA,CAAA9B,IAAA,kBAAAC,MAKO,SAAgB6B,GAEtB,IADAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,wBAAAC,KAAA,MACIc,EAAU,CACb,IAAMoN,EAAUpN,EAASb,IAAI,WAC7B,GAAIiO,EAAS,CACZ,IAAMO,EAAkB3N,EAASb,IAAI,mBACrC,GAAIwO,EAAiB,CACpB,IAAI/G,EAAoC,GACxC9G,EAAAA,GAAY6N,GAAiB,SAAC9G,GAC7B,IAAM6C,EAAY7C,EAAM1H,IAAI,aACtBwK,EAAW9C,EAAM1H,IAAI,YAC3B,GAAiB,MAAbuK,GAAiC,MAAZC,EACxB/C,EAAYrI,KAAK,CAACmL,EAAWC,QAEzB,CACJ,IAAMxI,EAAW0F,EAAM1H,IAAI,YAC3B,GAAIgC,EAAU,CACb,IAAM0M,EAAS1M,EAASyF,YACpBiH,GACHjH,EAAYrI,KAAK,CAACsP,EAAO,GAAWA,EAAO,I,EAI/C,IAEA,IAAI1M,EAAgB,CAAED,KAAM,aAAc0F,YAAaA,GAEvD5G,EAAS8N,OAAO,WAAY3M,GAC5BiM,EAAQnL,IAAI,WAAYd,E,MAGxBiM,EAAQnL,IAAI,WAAYjC,EAASb,IAAI,Y,EAIzC,GAEA,CAAAjB,IAAA,kBAAAC,MAGO,SAAgB6B,IACtBjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,wBAAAC,KAAA,KAAsBc,GACtB,IAAMoN,EAAUpN,EAASb,IAAI,WACzBiO,IACH/O,KAAK6O,SAAShK,YAAYkK,GAC1BA,EAAQW,UAEV,GAEA,CAAA7P,IAAA,mBAAAC,MAGU,SAAiB6B,IAC1BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,yBAAAC,KAAA,KAAuBc,GACvB,IAAMoN,EAAUpN,EAASb,IAAI,WACzBiO,GACHA,EAAQM,WAAW,WAAW,EAEhC,GAEA,CAAAxP,IAAA,qBAAAC,MAGU,SAAmB6B,IAC5BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,2BAAAC,KAAA,KAAyBc,GACzB,IAAMoN,EAAUpN,EAASb,IAAI,WACzBiO,GACHA,EAAQM,WAAW,WAAW,EAEhC,GAEA,CAAAxP,IAAA,sBAAAC,MAGU,SAAoB6B,IAC7BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,4BAAAC,KAAA,KAA0Bc,GAC1B,IAAMoN,EAAUpN,EAASb,IAAI,WACzBiO,GACHA,EAAQM,WAAW,WAAW,EAEhC,GAEA,CAAAxP,IAAA,wBAAAC,MAGU,SAAsB6B,IAC/BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA2N,EAAA1N,WAAA,8BAAAC,KAAA,KAA4Bc,GAC5B,IAAMoN,EAAUpN,EAASb,IAAI,WACzBiO,GACHA,EAAQM,WAAW,WAAW,EAEhC,KAACf,CAAA,CAtMyB,CAAQpP,GA8BlCO,OAAAC,eAAA4O,GAAA,a,gDAAkC,kBAClC7O,OAAAC,eAAA4O,GAAA,c,gDAA0CpP,EAAU8F,WAAWC,OAAO,CAACqJ,GAAcpJ,c,eC/GtF,SAASyK,GAAWzC,EAAIE,EAAIwC,GAC1B,IAAIlK,GAAImK,EAAAA,GAAAA,GAAM3C,EAAIE,EAAKpH,EAAS4J,GAAI3K,OAAOmI,GAC3C,OAAO,SAAS7H,GAAK,OAAOG,EAAEoK,KAAI,SAASpK,GAAK,MAAO,CAACH,EAAGG,EAAI,GAAI,CACrE,CAEA,SAASqK,GAAW9C,EAAIE,EAAI6C,GAC1B,IAAIzK,GAAIsK,EAAAA,GAAAA,GAAM5C,EAAIE,EAAKnH,EAASgK,GAAI/K,OAAOkI,GAC3C,OAAO,SAASzH,GAAK,OAAOH,EAAEuK,KAAI,SAASvK,GAAK,MAAO,CAACA,EAAGG,EAAI,GAAI,CACrE,CAEe,SAASuK,KACtB,IAAI9C,EAAIF,EAAIiD,EAAIC,EACZ/C,EAAIF,EAAIkD,EAAIC,EAEZ9K,EAAGG,EAAG4K,EAAGC,EADTP,EAAK,GAAIJ,EAAKI,EAAIQ,EAAK,GAAIC,EAAK,IAEhC9F,EAAY,IAEhB,SAASsF,IACP,MAAO,CAACpN,KAAM,kBAAmB0F,YAAamI,IAChD,CAEA,SAASA,IACP,OAAOb,EAAAA,GAAAA,GAAMjJ,EAAKuJ,EAAKK,GAAMA,EAAIN,EAAIM,GAAIV,IAAIQ,GACxCrL,QAAO4K,EAAAA,GAAAA,GAAMjJ,EAAKyJ,EAAKI,GAAMA,EAAIL,EAAIK,GAAIX,IAAIS,IAC7CtL,QAAO4K,EAAAA,GAAAA,GAAMjJ,EAAKqG,EAAK+C,GAAMA,EAAI7C,EAAI6C,GAAIW,QAAO,SAASpL,GAAK,OAAOO,EAAIP,EAAIiL,GAAMxK,CAAS,IAAG8J,IAAIvK,IACnGN,QAAO4K,EAAAA,GAAAA,GAAMjJ,EAAKsG,EAAK0C,GAAMA,EAAIxC,EAAIwC,GAAIe,QAAO,SAASjL,GAAK,OAAOI,EAAIJ,EAAI+K,GAAMzK,CAAS,IAAG8J,IAAIpK,GAC1G,CAoEA,OAlEAuK,EAAUS,MAAQ,WAChB,OAAOA,IAAQZ,KAAI,SAASvH,GAAe,MAAO,CAAC1F,KAAM,aAAc0F,YAAaA,EAAc,GACpG,EAEA0H,EAAUW,QAAU,WAClB,MAAO,CACL/N,KAAM,UACN0F,YAAa,CACX+H,EAAEH,GAAIlL,OACNsL,EAAEH,GAAIS,MAAM,GACZP,EAAEJ,GAAIY,UAAUD,MAAM,GACtBN,EAAEF,GAAIS,UAAUD,MAAM,KAG5B,EAEAZ,EAAUc,OAAS,SAASC,GAC1B,OAAKC,UAAUnP,OACRmO,EAAUiB,YAAYF,GAAGG,YAAYH,GADdf,EAAUkB,aAE1C,EAEAlB,EAAUiB,YAAc,SAASF,GAC/B,OAAKC,UAAUnP,QACfqO,GAAMa,EAAE,GAAG,GAAId,GAAMc,EAAE,GAAG,GAC1BX,GAAMW,EAAE,GAAG,GAAIZ,GAAMY,EAAE,GAAG,GACtBb,EAAKD,IAAIc,EAAIb,EAAIA,EAAKD,EAAIA,EAAKc,GAC/BX,EAAKD,IAAIY,EAAIX,EAAIA,EAAKD,EAAIA,EAAKY,GAC5Bf,EAAUtF,UAAUA,IALG,CAAC,CAACwF,EAAIE,GAAK,CAACH,EAAIE,GAMhD,EAEAH,EAAUkB,YAAc,SAASH,GAC/B,OAAKC,UAAUnP,QACfmL,GAAM+D,EAAE,GAAG,GAAI7D,GAAM6D,EAAE,GAAG,GAC1B9D,GAAM8D,EAAE,GAAG,GAAI5D,GAAM4D,EAAE,GAAG,GACtB/D,EAAKE,IAAI6D,EAAI/D,EAAIA,EAAKE,EAAIA,EAAK6D,GAC/B9D,EAAKE,IAAI4D,EAAI9D,EAAIA,EAAKE,EAAIA,EAAK4D,GAC5Bf,EAAUtF,UAAUA,IALG,CAAC,CAACsC,EAAIC,GAAK,CAACC,EAAIC,GAMhD,EAEA6C,EAAUmB,KAAO,SAASJ,GACxB,OAAKC,UAAUnP,OACRmO,EAAUoB,UAAUL,GAAGM,UAAUN,GADVf,EAAUqB,WAE1C,EAEArB,EAAUoB,UAAY,SAASL,GAC7B,OAAKC,UAAUnP,QACf0O,GAAMQ,EAAE,GAAIP,GAAMO,EAAE,GACbf,GAFuB,CAACO,EAAIC,EAGrC,EAEAR,EAAUqB,UAAY,SAASN,GAC7B,OAAKC,UAAUnP,QACfkO,GAAMgB,EAAE,GAAIpB,GAAMoB,EAAE,GACbf,GAFuB,CAACD,EAAIJ,EAGrC,EAEAK,EAAUtF,UAAY,SAASqG,GAC7B,OAAKC,UAAUnP,QACf6I,GAAaqG,EACbzL,EAAIoK,GAAWzC,EAAIE,EAAI,IACvB1H,EAAIqK,GAAW9C,EAAIE,EAAIxC,GACvB2F,EAAIX,GAAWU,EAAID,EAAI,IACvBG,EAAIR,GAAWI,EAAID,EAAIvF,GAChBsF,GANuBtF,CAOhC,EAEOsF,EACFiB,YAAY,CAAC,EAAE,KAAM,GAAKlL,GAAU,CAAC,IAAK,GAAKA,KAC/CmL,YAAY,CAAC,EAAE,KAAM,GAAKnL,GAAU,CAAC,IAAK,GAAKA,IACtD,CCzEO,IAAMuL,GAAgB,SAAAC,IAAApS,EAAAA,EAAAA,GAAAmS,EAAAC,GAAA,IAAAnS,GAAAC,EAAAA,EAAAA,GAAAiS,GAA7B,SAAAA,IAAA,IAAAhS,EAQkF,OARlFC,EAAAA,EAAAA,GAAA,KAAA+R,G,0BAQC9R,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,a,gDAA2DA,EAAKkS,aAAa,CAAC,KAAGlS,CAiDlF,CADE,OACDK,EAAAA,EAAAA,GAAA2R,EAAA,EAAA1R,IAAA,YAAAC,MA/CU,YACTY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA4Q,EAAA3Q,WAAA,kBAAAC,KAAA,MACAb,KAAKkC,UAAUhC,KAAKF,KAAK0R,WACzB1R,KAAK2R,WACN,GAAC,CAAA9R,IAAA,kBAAAC,MAEM,WAAe,IAAAC,EAAA,KAOrB,IANAW,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA4Q,EAAA3Q,WAAA,wBAAAC,KAAA,MAEIb,KAAKqB,QAAQ,SAChBrB,KAAK2R,YAGF3R,KAAKqB,QAAQ,eAEZrB,KAAKc,IAAI,cAAe,CAC3B,IAAMQ,EAAQtB,KAAKsB,MACfA,GACHA,EAAM2C,OAAO7D,GAAG,oBAAoB,WACnCL,EAAK4R,WACN,IAED3R,KAAK2R,W,CAGR,GAAC,CAAA9R,IAAA,YAAAC,MAES,WACT,IAAImQ,EAAY2B,KAEhB,GAAI3B,EAAW,CACd,GAAIjQ,KAAKc,IAAI,cAAe,CAC3B,IAAMQ,EAAQtB,KAAKsB,MACnB,GAAIA,EAAO,CACV,IAAMuQ,EAAYvQ,EAAMuQ,YACpBA,GACH5B,EAAUc,OAAO,CAAC,CAACc,EAAUC,KAAMD,EAAUE,QAAS,CAACF,EAAUG,MAAOH,EAAUI,M,EAKrF,IAAMb,EAAOpR,KAAKc,IAAI,OAAQ,IAC9BmP,EAAUqB,UAAU,CAAC,IAAK,MAC1BrB,EAAUoB,UAAU,CAACD,EAAMA,IAC3BpR,KAAK0R,UAAU9N,IAAI,WAAYqM,I,CAEjC,KAACsB,CAAA,CAxD2B,CAAQjD,IAEpC7O,OAAAC,eAAA6R,GAAA,a,gDAAkC,oBAClC9R,OAAAC,eAAA6R,GAAA,c,gDAA0CjD,GAActJ,WAAWC,OAAO,CAACsM,GAAgBrM,c,0BC9B7E,YAASkF,EAAGC,GAEzB,SAAS6H,EAAQ3M,EAAGG,GAClB,OAAOH,EAAI6E,EAAE7E,EAAGG,GAAI2E,EAAE9E,EAAE,GAAIA,EAAE,GAChC,CAMA,OAJI6E,EAAE4C,QAAU3C,EAAE2C,SAAQkF,EAAQlF,OAAS,SAASzH,EAAGG,GACrD,OAAOH,EAAI8E,EAAE2C,OAAOzH,EAAGG,KAAS0E,EAAE4C,OAAOzH,EAAE,GAAIA,EAAE,GACnD,GAEO2M,CACT,CCRA,SAASC,GAAiBxI,EAAQC,GAEhC,OADI9D,EAAI6D,GAAUzD,IAAIyD,GAAU9D,KAAKuM,MAAMzI,EAASrD,GAAOA,GACpD,CAACqD,EAAQC,EAClB,CAIO,SAASyI,GAAcC,EAAaC,EAAUC,GACnD,OAAQF,GAAehM,GAAQiM,GAAYC,EAAaN,GAAQO,GAAeH,GAAcI,GAAiBH,EAAUC,IACpHC,GAAeH,GACdC,GAAYC,EAAaE,GAAiBH,EAAUC,GACrDL,EACN,CAEA,SAASQ,GAAsBL,GAC7B,OAAO,SAAS3I,EAAQC,GAGtB,OADI9D,EADJ6D,GAAU2I,GACQpM,IAAIyD,GAAU9D,KAAKuM,MAAMzI,EAASrD,GAAOA,GACpD,CAACqD,EAAQC,EAClB,CACF,CAEA,SAAS6I,GAAeH,GACtB,IAAIM,EAAWD,GAAsBL,GAErC,OADAM,EAAS5F,OAAS2F,IAAuBL,GAClCM,CACT,CAEA,SAASF,GAAiBH,EAAUC,GAClC,IAAIK,EAAclM,EAAI4L,GAClBO,EAAc9L,EAAIuL,GAClBQ,EAAgBpM,EAAI6L,GACpBQ,EAAgBhM,EAAIwL,GAExB,SAASI,EAASjJ,EAAQC,GACxB,IAAIG,EAASpD,EAAIiD,GACbrE,EAAIoB,EAAIgD,GAAUI,EAClBrE,EAAIsB,EAAI2C,GAAUI,EAClBG,EAAIlD,EAAI4C,GACRkE,EAAI5D,EAAI2I,EAActN,EAAIuN,EAC9B,MAAO,CACLpM,EAAMhB,EAAIqN,EAAgBjF,EAAIkF,EAAezN,EAAIsN,EAAc3I,EAAI4I,GACnEzL,EAAKyG,EAAIiF,EAAgBrN,EAAIsN,GAEjC,CAcA,OAZAJ,EAAS5F,OAAS,SAASrD,EAAQC,GACjC,IAAIG,EAASpD,EAAIiD,GACbrE,EAAIoB,EAAIgD,GAAUI,EAClBrE,EAAIsB,EAAI2C,GAAUI,EAClBG,EAAIlD,EAAI4C,GACRkE,EAAI5D,EAAI6I,EAAgBrN,EAAIsN,EAChC,MAAO,CACLtM,EAAMhB,EAAIqN,EAAgB7I,EAAI8I,EAAezN,EAAIsN,EAAc/E,EAAIgF,GACnEzL,EAAKyG,EAAI+E,EAActN,EAAIuN,GAE/B,EAEOF,CACT,CC5De,cACb,IACIK,EADAvC,EAAQ,GAEZ,MAAO,CACLlI,MAAO,SAASjD,EAAGG,EAAGwN,GACpBD,EAAK/S,KAAK,CAACqF,EAAGG,EAAGwN,GACnB,EACA9J,UAAW,WACTsH,EAAMxQ,KAAK+S,EAAO,GACpB,EACA5J,QAAS9B,EACT4L,OAAQ,WACFzC,EAAM5O,OAAS,GAAG4O,EAAMxQ,KAAKwQ,EAAM0C,MAAMnO,OAAOyL,EAAM2C,SAC5D,EACAC,OAAQ,WACN,IAAIA,EAAS5C,EAGb,OAFAA,EAAQ,GACRuC,EAAO,KACAK,CACT,EAEJ,CCrBe,YAASlJ,EAAGC,GACzB,OAAOvE,EAAIsE,EAAE,GAAKC,EAAE,IAAMrE,GAAWF,EAAIsE,EAAE,GAAKC,EAAE,IAAMrE,CAC1D,CCDA,SAASuN,GAAa/K,EAAOgL,EAAQC,EAAOC,GAC1C1T,KAAKuF,EAAIiD,EACTxI,KAAKkK,EAAIsJ,EACTxT,KAAK2T,EAAIF,EACTzT,KAAK4T,EAAIF,EACT1T,KAAK6T,GAAI,EACT7T,KAAK+F,EAAI/F,KAAKwF,EAAI,IACpB,CAKe,YAASsF,EAAUgJ,EAAqBC,EAAahG,EAAatG,GAC/E,IAEIpE,EACA0C,EAHAiO,EAAU,GACVC,EAAO,GAyBX,GArBAnJ,EAASoJ,SAAQ,SAASjJ,GACxB,MAAKlF,EAAIkF,EAAQnJ,OAAS,IAAM,GAAhC,CACA,IAAIiE,EAAqCR,EAAlC4F,EAAKF,EAAQ,GAAI8B,EAAK9B,EAAQlF,GAErC,GAAIoO,GAAWhJ,EAAI4B,GAAK,CACtB,IAAK5B,EAAG,KAAO4B,EAAG,GAAI,CAEpB,IADAtF,EAAO2B,YACF/F,EAAI,EAAGA,EAAI0C,IAAK1C,EAAGoE,EAAOe,OAAO2C,EAAKF,EAAQ5H,IAAI,GAAI8H,EAAG,IAE9D,YADA1D,EAAO4B,SAET,CAEA0D,EAAG,IAAM,EAAI/G,CACf,CAEAgO,EAAQ9T,KAAKqF,EAAI,IAAIgO,GAAapI,EAAIF,EAAS,MAAM,IACrDgJ,EAAK/T,KAAKqF,EAAEoO,EAAI,IAAIJ,GAAapI,EAAI,KAAM5F,GAAG,IAC9CyO,EAAQ9T,KAAKqF,EAAI,IAAIgO,GAAaxG,EAAI9B,EAAS,MAAM,IACrDgJ,EAAK/T,KAAKqF,EAAEoO,EAAI,IAAIJ,GAAaxG,EAAI,KAAMxH,GAAG,GAjBL,CAkB3C,IAEKyO,EAAQlS,OAAb,CAMA,IAJAmS,EAAKG,KAAKN,GACVO,GAAKL,GACLK,GAAKJ,GAEA5Q,EAAI,EAAG0C,EAAIkO,EAAKnS,OAAQuB,EAAI0C,IAAK1C,EACpC4Q,EAAK5Q,GAAGuQ,EAAIG,GAAeA,EAO7B,IAJA,IACIP,EACAhL,EAFA8L,EAAQN,EAAQ,KAIV,CAIR,IAFA,IAAIO,EAAUD,EACVE,GAAY,EACTD,EAAQV,OAAQU,EAAUA,EAAQxO,KAAOuO,EAAO,OACvDd,EAASe,EAAQrK,EACjBzC,EAAO2B,YACP,EAAG,CAED,GADAmL,EAAQV,EAAIU,EAAQZ,EAAEE,GAAI,EACtBU,EAAQX,EAAG,CACb,GAAIY,EACF,IAAKnR,EAAI,EAAG0C,EAAIyN,EAAO1R,OAAQuB,EAAI0C,IAAK1C,EAAGoE,EAAOe,OAAOA,EAAQgL,EAAOnQ,IAAI,GAAImF,EAAM,SAEtFuF,EAAYwG,EAAQhP,EAAGgP,EAAQxO,EAAER,EAAG,EAAGkC,GAEzC8M,EAAUA,EAAQxO,CACpB,KAAO,CACL,GAAIyO,EAEF,IADAhB,EAASe,EAAQ/O,EAAE0E,EACd7G,EAAImQ,EAAO1R,OAAS,EAAGuB,GAAK,IAAKA,EAAGoE,EAAOe,OAAOA,EAAQgL,EAAOnQ,IAAI,GAAImF,EAAM,SAEpFuF,EAAYwG,EAAQhP,EAAGgP,EAAQ/O,EAAED,GAAI,EAAGkC,GAE1C8M,EAAUA,EAAQ/O,CACpB,CAEAgO,GADAe,EAAUA,EAAQZ,GACDzJ,EACjBsK,GAAaA,CACf,QAAUD,EAAQV,GAClBpM,EAAO4B,SACT,CA5C2B,CA6C7B,CAEA,SAASgL,GAAKI,GACZ,GAAM1O,EAAI0O,EAAM3S,OAAhB,CAKA,IAJA,IAAIiE,EAGAsE,EAFAhH,EAAI,EACJ+G,EAAIqK,EAAM,KAELpR,EAAI0C,GACXqE,EAAErE,EAAIsE,EAAIoK,EAAMpR,GAChBgH,EAAE7E,EAAI4E,EACNA,EAAIC,EAEND,EAAErE,EAAIsE,EAAIoK,EAAM,GAChBpK,EAAE7E,EAAI4E,CAXyB,CAYjC,CCpGO,SAASsK,GAAUC,GACxB,MAAO,CAACjO,EAAMiO,EAAU,GAAIA,EAAU,IAAKtN,EAAKsN,EAAU,IAC5D,CAEO,SAASA,GAAUD,GACxB,IAAI/K,EAAS+K,EAAU,GAAI9K,EAAM8K,EAAU,GAAI3K,EAASpD,EAAIiD,GAC5D,MAAO,CAACG,EAASpD,EAAIgD,GAASI,EAAS/C,EAAI2C,GAAS3C,EAAI4C,GAC1D,CAEO,SAASgL,GAAaxK,EAAGC,GAC9B,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,EAC9C,CAEO,SAASwK,GAAezK,EAAGC,GAChC,MAAO,CAACD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACvF,CAGO,SAASyK,GAAoB1K,EAAGC,GACrCD,EAAE,IAAMC,EAAE,GAAID,EAAE,IAAMC,EAAE,GAAID,EAAE,IAAMC,EAAE,EACxC,CAEO,SAAS0K,GAAeC,EAAQlH,GACrC,MAAO,CAACkH,EAAO,GAAKlH,EAAGkH,EAAO,GAAKlH,EAAGkH,EAAO,GAAKlH,EACpD,CAGO,SAASmH,GAA0BpH,GACxC,IAAIqH,EAAI/N,EAAK0G,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAClDA,EAAE,IAAMqH,EAAGrH,EAAE,IAAMqH,EAAGrH,EAAE,IAAMqH,CAChC,CC5BA,SAAS7J,GAAU7C,GACjB,OAAO1C,EAAI0C,EAAM,KAAOtC,EAAKsC,EAAM,GAAKtB,EAAKsB,EAAM,MAAQ1C,EAAI0C,EAAM,IAAMtC,GAAMI,EAAMJ,EACzF,CLEAiM,GAAiBnF,OAASmF,G,6CMRhBgD,IAAV,SAAUA,GAAQC,GAAM,IAAAC,EAAAC,EAAAb,EAAA,OAAAc,EAAAA,GAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAN,GAAAO,EAAAA,GAAAA,GACFR,GAAMK,EAAAC,KAAA,EAAAL,EAAArK,IAAA,WAAAsK,EAAAD,EAAAtP,KAAA8P,KAAE,CAAFJ,EAAAE,KAAA,QACxB,OADSlB,EAAKa,EAAAxV,MACd2V,EAAAK,cAAOrB,EAAK,eAAAgB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAAAJ,EAAAzB,EAAA6B,EAAAM,IAAA,eAAAN,EAAAC,KAAA,GAAAL,EAAAW,IAAAP,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAC,GAAA,qBAID,SAASC,GAAMhB,GAC5B,OAAOiB,MAAMC,KAAKnB,GAAQC,GAC5B,CCFe,YAASmB,EAAcC,EAAUzI,EAAauG,GAC3D,OAAO,SAASmC,GACd,IAIIC,EACA5L,EACA6L,EANA1D,EAAOuD,EAASC,GAChBG,EAAaC,KACbC,EAAWN,EAASI,GACpBG,GAAiB,EAKjB9C,EAAO,CACTzL,MAAOA,EACPY,UAAWA,EACXC,QAASA,EACTC,aAAc,WACZ2K,EAAKzL,MAAQwO,EACb/C,EAAK7K,UAAY6N,EACjBhD,EAAK5K,QAAU6N,EACfpM,EAAW,GACX4L,EAAU,EACZ,EACAnN,WAAY,WACV0K,EAAKzL,MAAQA,EACbyL,EAAK7K,UAAYA,EACjB6K,EAAK5K,QAAUA,EACfyB,EAAWsL,GAAMtL,GACjB,IAAIiJ,EFxBG,SAAS2C,EAASlO,GAC/B,IAAImB,EAAS0B,GAAU7C,GACnBoB,EAAMpB,EAAM,GACZsB,EAAS9C,EAAI4C,GACbuN,EAAS,CAACnQ,EAAI2C,IAAUhD,EAAIgD,GAAS,GACrCyN,EAAQ,EACRC,EAAU,EAEVC,EAAM,IAAInS,EAEC,IAAX2E,EAAcF,EAAMxD,EAASJ,GACZ,IAAZ8D,IAAeF,GAAOxD,EAASJ,GAExC,IAAK,IAAI3C,EAAI,EAAG0C,EAAI2Q,EAAQ5U,OAAQuB,EAAI0C,IAAK1C,EAC3C,GAAM6P,GAAKyD,EAAOD,EAAQrT,IAAIvB,OAS9B,IARA,IAAI6U,EACAzD,EACAqE,EAASZ,EAAKzD,EAAI,GAClBrL,EAAUwD,GAAUkM,GACpBC,EAAOD,EAAO,GAAK,EAAIlR,EACvByB,EAAUd,EAAIwQ,GACdzP,EAAUpB,EAAI6Q,GAET/R,EAAI,EAAGA,EAAIyN,IAAKzN,EAAGoC,EAAU4P,EAAS3P,EAAU4P,EAAS3P,EAAU4P,EAASJ,EAASK,EAAQ,CACpG,IAAIA,EAASjB,EAAKlR,GACdgS,EAAUpM,GAAUuM,GACpBC,EAAOD,EAAO,GAAK,EAAIvR,EACvBqR,EAAU1Q,EAAI6Q,GACdF,EAAUhR,EAAIkR,GACd7N,EAAQyN,EAAU5P,EAClBX,EAAO8C,GAAS,EAAI,GAAK,EACzB8N,EAAW5Q,EAAO8C,EAClB+N,EAAeD,EAAW5R,EAC1B4H,EAAIhG,EAAU4P,EAOlB,GALAJ,EAAInN,IAAIzD,EAAMoH,EAAI5G,EAAOF,EAAI8Q,GAAW/P,EAAU4P,EAAU7J,EAAInH,EAAImR,KACpEV,GAASW,EAAe/N,EAAQ9C,EAAOZ,EAAM0D,EAIzC+N,EAAelQ,GAAW8B,EAAS8N,GAAW9N,EAAQ,CACxD,IAAIqO,EAAMnD,GAAeF,GAAU4C,GAAS5C,GAAUiD,IACtD3C,GAA0B+C,GAC1B,IAAIC,EAAepD,GAAesC,EAAQa,GAC1C/C,GAA0BgD,GAC1B,IAAIC,GAAUH,EAAe/N,GAAS,GAAK,EAAI,GAAK3C,EAAK4Q,EAAa,KAClErO,EAAMsO,GAAUtO,IAAQsO,IAAWF,EAAI,IAAMA,EAAI,OACnDX,GAAWU,EAAe/N,GAAS,EAAI,GAAK,EAEhD,CACF,CAcF,OAAQoN,GAASpR,GAAWoR,EAAQpR,GAAWsR,GAAOrR,GAAuB,EAAVoR,CACrE,CEzC0Bc,CAAgBzB,EAASpC,GACvCxJ,EAAShJ,QACNiV,IAAgBN,EAAKnN,eAAgByN,GAAiB,GAC3DqB,GAAWtN,EAAUgJ,GAAqBC,EAAahG,EAAa0I,IAC3D1C,IACJgD,IAAgBN,EAAKnN,eAAgByN,GAAiB,GAC3DN,EAAKrN,YACL2E,EAAY,KAAM,KAAM,EAAG0I,GAC3BA,EAAKpN,WAEH0N,IAAgBN,EAAKlN,aAAcwN,GAAiB,GACxDjM,EAAW4L,EAAU,IACvB,EACArO,OAAQ,WACNoO,EAAKnN,eACLmN,EAAKrN,YACL2E,EAAY,KAAM,KAAM,EAAG0I,GAC3BA,EAAKpN,UACLoN,EAAKlN,YACP,GAGF,SAASf,EAAMmB,EAAQC,GACjB2M,EAAa5M,EAAQC,IAAM6M,EAAKjO,MAAMmB,EAAQC,EACpD,CAEA,SAASyO,EAAU1O,EAAQC,GACzBqJ,EAAKzK,MAAMmB,EAAQC,EACrB,CAEA,SAASR,IACP6K,EAAKzL,MAAQ6P,EACbpF,EAAK7J,WACP,CAEA,SAASC,IACP4K,EAAKzL,MAAQA,EACbyK,EAAK5J,SACP,CAEA,SAAS2N,EAAUrN,EAAQC,GACzB+M,EAAKzW,KAAK,CAACyJ,EAAQC,IACnBkN,EAAStO,MAAMmB,EAAQC,EACzB,CAEA,SAASqN,IACPH,EAAS1N,YACTuN,EAAO,EACT,CAEA,SAASO,IACPF,EAAUL,EAAK,GAAG,GAAIA,EAAK,GAAG,IAC9BG,EAASzN,UAET,IAEIhG,EAA4B6P,EAC5BjI,EACAzC,EAJA8P,EAAQxB,EAASwB,QACjBC,EAAe3B,EAAWtD,SACvBvN,EAAIwS,EAAazW,OAQxB,GAJA6U,EAAKvD,MACLsD,EAAQxW,KAAKyW,GACbA,EAAO,KAEF5Q,EAGL,GAAY,EAARuS,GAEF,IAAKpF,GADLjI,EAAUsN,EAAa,IACNzW,OAAS,GAAK,EAAG,CAGhC,IAFKiV,IAAgBN,EAAKnN,eAAgByN,GAAiB,GAC3DN,EAAKrN,YACA/F,EAAI,EAAGA,EAAI6P,IAAK7P,EAAGoT,EAAKjO,OAAOA,EAAQyC,EAAQ5H,IAAI,GAAImF,EAAM,IAClEiO,EAAKpN,SACP,OAMEtD,EAAI,GAAa,EAARuS,GAAWC,EAAarY,KAAKqY,EAAanF,MAAMnO,OAAOsT,EAAalF,UAEjFvI,EAAS5K,KAAKqY,EAAa5H,OAAO6H,IACpC,CAEA,OAAOvE,CACT,CACF,CAEA,SAASuE,GAAavN,GACpB,OAAOA,EAAQnJ,OAAS,CAC1B,CAIA,SAASgS,GAAoB1J,EAAGC,GAC9B,QAASD,EAAIA,EAAE7E,GAAG,GAAK,EAAI6E,EAAE,GAAKhE,EAASJ,EAAUI,EAASgE,EAAE,MACvDC,EAAIA,EAAE9E,GAAG,GAAK,EAAI8E,EAAE,GAAKjE,EAASJ,EAAUI,EAASiE,EAAE,GAClE,CC/HA,OAAe4J,IACb,WAAa,OAAO,CAAM,IAS5B,SAA8BxM,GAC5B,IAGI6Q,EAHAzQ,EAAU4Q,IACVjB,EAAOiB,IACPC,EAAQD,IAGZ,MAAO,CACLrP,UAAW,WACT3B,EAAO2B,YACPkP,EAAQ,CACV,EACA9P,MAAO,SAASiP,EAASI,GACvB,IAAIc,EAAQlB,EAAU,EAAIvR,GAAMA,EAC5B8D,EAAQlE,EAAI2R,EAAU5P,GACtB/B,EAAIkE,EAAQ9D,GAAMF,GACpByB,EAAOe,MAAMX,EAAS2P,GAAQA,EAAOK,GAAQ,EAAI,EAAIzR,GAAUA,GAC/DqB,EAAOe,MAAMkQ,EAAOlB,GACpB/P,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAMmQ,EAAOnB,GACpB/P,EAAOe,MAAMiP,EAASD,GACtBc,EAAQ,GACCI,IAAUC,GAAS3O,GAAS9D,IACjCJ,EAAI+B,EAAU6Q,GAAS1S,IAAS6B,GAAW6Q,EAAQ1S,GACnDF,EAAI2R,EAAUkB,GAAS3S,IAASyR,GAAWkB,EAAQ3S,GACvDwR,EAoBR,SAAmC3P,EAAS2P,EAAMC,EAASI,GACzD,IAAI9P,EACA4P,EACAiB,EAAoB5R,EAAIa,EAAU4P,GACtC,OAAO3R,EAAI8S,GAAqB5S,EAC1BS,GAAMO,EAAIwQ,IAASG,EAAUhR,EAAIkR,IAAS7Q,EAAIyQ,GAC1CzQ,EAAI6Q,IAAS9P,EAAUpB,EAAI6Q,IAASxQ,EAAIa,KACvCE,EAAU4P,EAAUiB,KACxBpB,EAAOK,GAAQ,CACxB,CA7BegB,CAA0BhR,EAAS2P,EAAMC,EAASI,GACzDpQ,EAAOe,MAAMkQ,EAAOlB,GACpB/P,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAMmQ,EAAOnB,GACpBc,EAAQ,GAEV7Q,EAAOe,MAAMX,EAAU4P,EAASD,EAAOK,GACvCa,EAAQC,CACV,EACAtP,QAAS,WACP5B,EAAO4B,UACPxB,EAAU2P,EAAOiB,GACnB,EACAH,MAAO,WACL,OAAO,EAAIA,CACb,EAEJ,IAaA,SAAqChC,EAAMwC,EAAIC,EAAWtR,GACxD,IAAImC,EACJ,GAAY,MAAR0M,EACF1M,EAAMmP,EAAY3S,EAClBqB,EAAOe,OAAOtC,EAAI0D,GAClBnC,EAAOe,MAAM,EAAGoB,GAChBnC,EAAOe,MAAMtC,EAAI0D,GACjBnC,EAAOe,MAAMtC,EAAI,GACjBuB,EAAOe,MAAMtC,GAAK0D,GAClBnC,EAAOe,MAAM,GAAIoB,GACjBnC,EAAOe,OAAOtC,GAAK0D,GACnBnC,EAAOe,OAAOtC,EAAI,GAClBuB,EAAOe,OAAOtC,EAAI0D,QACb,GAAI9D,EAAIwQ,EAAK,GAAKwC,EAAG,IAAM9S,EAAS,CACzC,IAAI2D,EAAS2M,EAAK,GAAKwC,EAAG,GAAK5S,GAAMA,EACrC0D,EAAMmP,EAAYpP,EAAS,EAC3BlC,EAAOe,OAAOmB,EAAQC,GACtBnC,EAAOe,MAAM,EAAGoB,GAChBnC,EAAOe,MAAMmB,EAAQC,EACvB,MACEnC,EAAOe,MAAMsQ,EAAG,GAAIA,EAAG,GAE3B,GApFE,EAAE5S,GAAKE,ICDF,SAAS4S,GAAavR,EAAQwR,EAAQjP,EAAO+O,EAAWG,EAAInD,GACjE,GAAK/L,EAAL,CACA,IAAImP,EAAYxS,EAAIsS,GAChBG,EAAYpS,EAAIiS,GAChB7H,EAAO2H,EAAY/O,EACb,MAANkP,GACFA,EAAKD,EAASF,EAAYzS,EAC1ByP,EAAKkD,EAAS7H,EAAO,IAErB8H,EAAKG,GAAaF,EAAWD,GAC7BnD,EAAKsD,GAAaF,EAAWpD,IACzBgD,EAAY,EAAIG,EAAKnD,EAAKmD,EAAKnD,KAAImD,GAAMH,EAAYzS,IAE3D,IAAK,IAAIkC,EAAOwF,EAAIkL,EAAIH,EAAY,EAAI/K,EAAI+H,EAAK/H,EAAI+H,EAAI/H,GAAKoD,EAC5D5I,EAAQkM,GAAU,CAACyE,GAAYC,EAAYzS,EAAIqH,IAAKoL,EAAYpS,EAAIgH,KACpEvG,EAAOe,MAAMA,EAAM,GAAIA,EAAM,GAdb,CAgBpB,CAGA,SAAS6Q,GAAaF,EAAW3Q,IAC/BA,EAAQmM,GAAUnM,IAAc,IAAM2Q,EACtClE,GAA0BzM,GAC1B,IpBJmBjD,EoBIf0T,GpBJe1T,GoBIAiD,EAAM,IpBHd,EAAI,EAAIjD,GAAK,EAAIW,EAAKL,KAAKyT,KAAK/T,GoBI3C,SAAUiD,EAAM,GAAK,GAAKyQ,EAASA,GAAU3S,EAAMN,GAAWM,CAChE,CCzBA,IAAIiT,GAAU,IAAKC,IAAWD,GAKf,SAASE,GAAcxM,EAAIC,EAAIC,EAAIC,GAEhD,SAASsM,EAAQnU,EAAGG,GAClB,OAAOuH,GAAM1H,GAAKA,GAAK4H,GAAMD,GAAMxH,GAAKA,GAAK0H,CAC/C,CAEA,SAASW,EAAYuI,EAAMwC,EAAIC,EAAWtR,GACxC,IAAI2C,EAAI,EAAGuP,EAAK,EAChB,GAAY,MAARrD,IACIlM,EAAIwP,EAAOtD,EAAMyC,OAAiBY,EAAKC,EAAOd,EAAIC,KACnDc,EAAavD,EAAMwC,GAAM,EAAIC,EAAY,EAC9C,GAAGtR,EAAOe,MAAY,IAAN4B,GAAiB,IAANA,EAAU6C,EAAKE,EAAI/C,EAAI,EAAIgD,EAAKF,UACnD9C,GAAKA,EAAI2O,EAAY,GAAK,KAAOY,QAEzClS,EAAOe,MAAMsQ,EAAG,GAAIA,EAAG,GAE3B,CAEA,SAASc,EAAOpU,EAAGuT,GACjB,OAAOjT,EAAIN,EAAE,GAAKyH,GAAMjH,EAAU+S,EAAY,EAAI,EAAI,EAChDjT,EAAIN,EAAE,GAAK2H,GAAMnH,EAAU+S,EAAY,EAAI,EAAI,EAC/CjT,EAAIN,EAAE,GAAK0H,GAAMlH,EAAU+S,EAAY,EAAI,EAAI,EAC/CA,EAAY,EAAI,EAAI,CAC5B,CAEA,SAASjF,EAAoB1J,EAAGC,GAC9B,OAAOwP,EAAazP,EAAE7E,EAAG8E,EAAE9E,EAC7B,CAEA,SAASsU,EAAazP,EAAGC,GACvB,IAAIyP,EAAKF,EAAOxP,EAAG,GACf2P,EAAKH,EAAOvP,EAAG,GACnB,OAAOyP,IAAOC,EAAKD,EAAKC,EACX,IAAPD,EAAWzP,EAAE,GAAKD,EAAE,GACb,IAAP0P,EAAW1P,EAAE,GAAKC,EAAE,GACb,IAAPyP,EAAW1P,EAAE,GAAKC,EAAE,GACpBA,EAAE,GAAKD,EAAE,EACjB,CAEA,OAAO,SAAS3C,GACd,IAEIqD,EACA4L,EACAC,EACAqD,EAAKC,EAAKC,EACVC,EAAIC,EAAIC,EACRC,EACAhC,EARAiC,EAAe9S,EACf+S,EAAe3D,KASf4D,EAAa,CACfjS,MAAOA,EACPY,UAgDF,WACEqR,EAAWjS,MAAQkS,EACfhE,GAASA,EAAQxW,KAAKyW,EAAO,IACjC2D,GAAQ,EACRD,GAAK,EACLF,EAAKC,EAAK3B,GACZ,EArDEpP,QA0DF,WACMyB,IACF4P,EAAUV,EAAKC,GACXC,GAAOG,GAAIG,EAAarH,SAC5BrI,EAAS5K,KAAKsa,EAAalH,WAE7BmH,EAAWjS,MAAQA,EACf6R,GAAIE,EAAalR,SACvB,EAjEEC,aAuBF,WACEiR,EAAeC,EAAc1P,EAAW,GAAI4L,EAAU,GAAI4B,GAAQ,CACpE,EAxBE/O,WA0BF,WACE,IAAIwK,EApBN,WAGE,IAFA,IAAIsD,EAAU,EAELhU,EAAI,EAAG0C,EAAI2Q,EAAQ5U,OAAQuB,EAAI0C,IAAK1C,EAC3C,IAAK,IAAgEsX,EAAIhB,EAAhEhD,EAAOD,EAAQrT,GAAIoC,EAAI,EAAGyN,EAAIyD,EAAK7U,OAAQ0G,EAAQmO,EAAK,GAAYiE,EAAKpS,EAAM,GAAIqS,EAAKrS,EAAM,GAAI/C,EAAIyN,IAAKzN,EAClHkV,EAAKC,EAAIjB,EAAKkB,EAAqBD,GAAjBpS,EAAQmO,EAAKlR,IAAe,GAAIoV,EAAKrS,EAAM,GACzDmR,GAAMvM,EAAUyN,EAAKzN,IAAOwN,EAAKD,IAAOvN,EAAKuM,IAAOkB,EAAKlB,IAAO1M,EAAK0N,MAAOtD,EACrEwD,GAAMzN,IAAOwN,EAAKD,IAAOvN,EAAKuM,IAAOkB,EAAKlB,IAAO1M,EAAK0N,MAAOtD,EAI5E,OAAOA,CACT,CAQoByD,GACdC,EAAczC,GAASvE,EACvB2F,GAAW5O,EAAWsL,GAAMtL,IAAWhJ,QACvCiZ,GAAerB,KACjBjS,EAAO6B,eACHyR,IACFtT,EAAO2B,YACP2E,EAAY,KAAM,KAAM,EAAGtG,GAC3BA,EAAO4B,WAELqQ,GACFtB,GAAWtN,EAAUgJ,EAAqBC,EAAahG,EAAatG,GAEtEA,EAAO8B,cAETgR,EAAe9S,EAAQqD,EAAW4L,EAAUC,EAAO,IACrD,GAxCA,SAASnO,EAAMjD,EAAGG,GACZgU,EAAQnU,EAAGG,IAAI6U,EAAa/R,MAAMjD,EAAGG,EAC3C,CA6DA,SAASgV,EAAUnV,EAAGG,GACpB,IAAImO,EAAI6F,EAAQnU,EAAGG,GAEnB,GADIgR,GAASC,EAAKzW,KAAK,CAACqF,EAAGG,IACvB4U,EACFN,EAAMzU,EAAG0U,EAAMvU,EAAGwU,EAAMrG,EACxByG,GAAQ,EACJzG,IACF0G,EAAanR,YACbmR,EAAa/R,MAAMjD,EAAGG,SAGxB,GAAImO,GAAKwG,EAAIE,EAAa/R,MAAMjD,EAAGG,OAC9B,CACH,IAAI0E,EAAI,CAAC+P,EAAKtU,KAAKmV,IAAIxB,GAAS3T,KAAKoV,IAAI1B,GAASY,IAAMC,EAAKvU,KAAKmV,IAAIxB,GAAS3T,KAAKoV,IAAI1B,GAASa,KAC7F/P,EAAI,CAAC9E,EAAIM,KAAKmV,IAAIxB,GAAS3T,KAAKoV,IAAI1B,GAAShU,IAAKG,EAAIG,KAAKmV,IAAIxB,GAAS3T,KAAKoV,IAAI1B,GAAS7T,MClJzF,SAAS0E,EAAGC,EAAG4C,EAAIC,EAAIC,EAAIC,GACxC,IAQI8N,EARAC,EAAK/Q,EAAE,GACPgR,EAAKhR,EAAE,GAGP8O,EAAK,EACLnD,EAAK,EACL/F,EAJK3F,EAAE,GAIG8Q,EACVvL,EAJKvF,EAAE,GAIG+Q,EAId,GADAF,EAAIjO,EAAKkO,EACJnL,KAAMkL,EAAI,GAAf,CAEA,GADAA,GAAKlL,EACDA,EAAK,EAAG,CACV,GAAIkL,EAAIhC,EAAI,OACRgC,EAAInF,IAAIA,EAAKmF,EACnB,MAAO,GAAIlL,EAAK,EAAG,CACjB,GAAIkL,EAAInF,EAAI,OACRmF,EAAIhC,IAAIA,EAAKgC,EACnB,CAGA,GADAA,EAAI/N,EAAKgO,EACJnL,KAAMkL,EAAI,GAAf,CAEA,GADAA,GAAKlL,EACDA,EAAK,EAAG,CACV,GAAIkL,EAAInF,EAAI,OACRmF,EAAIhC,IAAIA,EAAKgC,EACnB,MAAO,GAAIlL,EAAK,EAAG,CACjB,GAAIkL,EAAIhC,EAAI,OACRgC,EAAInF,IAAIA,EAAKmF,EACnB,CAGA,GADAA,EAAIhO,EAAKkO,EACJxL,KAAMsL,EAAI,GAAf,CAEA,GADAA,GAAKtL,EACDA,EAAK,EAAG,CACV,GAAIsL,EAAIhC,EAAI,OACRgC,EAAInF,IAAIA,EAAKmF,EACnB,MAAO,GAAItL,EAAK,EAAG,CACjB,GAAIsL,EAAInF,EAAI,OACRmF,EAAIhC,IAAIA,EAAKgC,EACnB,CAGA,GADAA,EAAI9N,EAAKgO,EACJxL,KAAMsL,EAAI,GAAf,CAEA,GADAA,GAAKtL,EACDA,EAAK,EAAG,CACV,GAAIsL,EAAInF,EAAI,OACRmF,EAAIhC,IAAIA,EAAKgC,EACnB,MAAO,GAAItL,EAAK,EAAG,CACjB,GAAIsL,EAAIhC,EAAI,OACRgC,EAAInF,IAAIA,EAAKmF,EACnB,CAIA,OAFIhC,EAAK,IAAG9O,EAAE,GAAK+Q,EAAKjC,EAAKlJ,EAAI5F,EAAE,GAAKgR,EAAKlC,EAAKtJ,GAC9CmG,EAAK,IAAG1L,EAAE,GAAK8Q,EAAKpF,EAAK/F,EAAI3F,EAAE,GAAK+Q,EAAKrF,EAAKnG,IAC3C,CAZiB,CAXA,CAXA,CAXA,CA8C1B,CDyFc4G,CAASpM,EAAGC,EAAG4C,EAAIC,EAAIC,EAAIC,GAQpByG,IACT0G,EAAanR,YACbmR,EAAa/R,MAAMjD,EAAGG,GACtB4S,GAAQ,IAVH+B,IACHE,EAAanR,YACbmR,EAAa/R,MAAM4B,EAAE,GAAIA,EAAE,KAE7BmQ,EAAa/R,MAAM6B,EAAE,GAAIA,EAAE,IACtBwJ,GAAG0G,EAAalR,UACrBiP,GAAQ,EAMZ,CAEF6B,EAAK5U,EAAG6U,EAAK1U,EAAG2U,EAAKxG,CACvB,CAEA,OAAO4G,CACT,CACF,CEvKA,gBAAelV,GAAC,OAAIA,CAAC,ECMd,SAAS8V,GAAYC,GAC1B,OAAO,SAAS7T,GACd,IAAIuD,EAAI,IAAIuQ,GACZ,IAAK,IAAI1b,KAAOyb,EAAStQ,EAAEnL,GAAOyb,EAAQzb,GAE1C,OADAmL,EAAEvD,OAASA,EACJuD,CACT,CACF,CAEA,SAASuQ,KAAmB,CAE5BA,GAAgB3a,UAAY,CAC1B4a,YAAaD,GACb/S,MAAO,SAASjD,EAAGG,GAAK1F,KAAKyH,OAAOe,MAAMjD,EAAGG,EAAI,EACjD2C,OAAQ,WAAarI,KAAKyH,OAAOY,QAAU,EAC3Ce,UAAW,WAAapJ,KAAKyH,OAAO2B,WAAa,EACjDC,QAAS,WAAarJ,KAAKyH,OAAO4B,SAAW,EAC7CC,aAAc,WAAatJ,KAAKyH,OAAO6B,cAAgB,EACvDC,WAAY,WAAavJ,KAAKyH,OAAO8B,YAAc,GCtBrD,IAAI0D,GAAKwO,IACLvO,GAAKD,GACLE,IAAMF,GACNG,GAAKD,GAELuO,GAAe,CACjBlT,MAYF,SAAqBjD,EAAGG,GAClBH,EAAI0H,KAAIA,GAAK1H,GACbA,EAAI4H,KAAIA,GAAK5H,GACbG,EAAIwH,KAAIA,GAAKxH,GACbA,EAAI0H,KAAIA,GAAK1H,EACnB,EAhBE0D,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc/B,EACdgC,WAAYhC,EACZ+L,OAAQ,WACN,IAAIqI,EAAS,CAAC,CAAC1O,GAAIC,IAAK,CAACC,GAAIC,KAE7B,OADAD,GAAKC,KAAOF,GAAKD,GAAKwO,KACfE,CACT,GAUF,UCxBA,SAASC,GAAInR,EAAYoR,EAAW3T,GAClC,IAAI+L,EAAOxJ,EAAWqR,YAAcrR,EAAWqR,aAM/C,OALArR,EAAWsR,MAAM,KAAKC,UAAU,CAAC,EAAG,IACxB,MAAR/H,GAAcxJ,EAAWqR,WAAW,MACxCG,EAAU/T,EAAQuC,EAAWhD,OAAOiU,KACpCG,EAAUH,GAAapI,UACX,MAARW,GAAcxJ,EAAWqR,WAAW7H,GACjCxJ,CACT,CAEO,SAASyR,GAAUzR,EAAYsG,EAAQ7I,GAC5C,OAAO0T,GAAInR,GAAY,SAASJ,GAC9B,IAAI8R,EAAIpL,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC7BqL,EAAIrL,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC7BjD,EAAIjI,KAAKoV,IAAIkB,GAAK9R,EAAE,GAAG,GAAKA,EAAE,GAAG,IAAK+R,GAAK/R,EAAE,GAAG,GAAKA,EAAE,GAAG,KAC1D9E,GAAKwL,EAAO,GAAG,IAAMoL,EAAIrO,GAAKzD,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACpD3E,GAAKqL,EAAO,GAAG,IAAMqL,EAAItO,GAAKzD,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACxDI,EAAWsR,MAAM,IAAMjO,GAAGkO,UAAU,CAACzW,EAAGG,GAC1C,GAAGwC,EACL,CClBA,IAAImU,GAAW,GACXC,GAAiB3V,EAAI,GAAKH,GAEf,YAAS+V,EAASC,GAC/B,OAAQA,EAYV,SAAkBD,EAASC,GAEzB,SAASC,EAAexP,EAAIC,EAAIrF,EAAS8S,EAAIC,EAAI8B,EAAIvP,EAAIC,EAAIqK,EAASkC,EAAIkB,EAAI8B,EAAIC,EAAOnV,GACvF,IAAIuI,EAAK7C,EAAKF,EACV2C,EAAKxC,EAAKF,EACV2P,EAAK7M,EAAKA,EAAKJ,EAAKA,EACxB,GAAIiN,EAAK,EAAIL,GAAUI,IAAS,CAC9B,IAAIxS,EAAIuQ,EAAKhB,EACTtP,EAAIuQ,EAAKC,EACTiC,EAAIJ,EAAKC,EACTzJ,EAAI/L,EAAKiD,EAAIA,EAAIC,EAAIA,EAAIyS,EAAIA,GAC7BC,EAAO1V,EAAKyV,GAAK5J,GACjB8J,EAAUlX,EAAIA,EAAIgX,GAAK,GAAK9W,GAAWF,EAAI+B,EAAU4P,GAAWzR,GAAW6B,EAAU4P,GAAW,EAAI/Q,EAAM2D,EAAGD,GAC7G5E,EAAI+W,EAAQS,EAASD,GACrBE,EAAKzX,EAAE,GACP0X,EAAK1X,EAAE,GACP2X,EAAMF,EAAKhQ,EACXmQ,EAAMF,EAAKhQ,EACXmQ,EAAKzN,EAAKuN,EAAMnN,EAAKoN,GACrBC,EAAKA,EAAKR,EAAKL,GACZ1W,GAAKkK,EAAKmN,EAAMvN,EAAKwN,GAAOP,EAAK,IAAO,IACxClC,EAAKhB,EAAKiB,EAAKC,EAAK6B,EAAKC,EAAKL,MACnCG,EAAexP,EAAIC,EAAIrF,EAAS8S,EAAIC,EAAI8B,EAAIO,EAAIC,EAAIF,EAAS5S,GAAK8I,EAAG7I,GAAK6I,EAAG4J,EAAGF,EAAOnV,GACvFA,EAAOe,MAAMyU,EAAIC,GACjBT,EAAeQ,EAAIC,EAAIF,EAAS5S,EAAGC,EAAGyS,EAAG3P,EAAIC,EAAIqK,EAASkC,EAAIkB,EAAI8B,EAAIC,EAAOnV,GAEjF,CACF,CACA,OAAO,SAASA,GACd,IAAI6V,EAAUC,EAAKC,EAAKC,EAAKC,EAAKC,EAC9B9V,EAASoF,EAAIC,EAAIyN,EAAIC,EAAI8B,EAEzBkB,EAAiB,CACnBpV,MAAOA,EACPY,UAAWA,EACXC,QAASA,EACTC,aAAc,WAAa7B,EAAO6B,eAAgBsU,EAAexU,UAAY6N,CAAW,EACxF1N,WAAY,WAAa9B,EAAO8B,aAAcqU,EAAexU,UAAYA,CAAW,GAGtF,SAASZ,EAAMjD,EAAGG,GAChBH,EAAIgX,EAAQhX,EAAGG,GACf+B,EAAOe,MAAMjD,EAAE,GAAIA,EAAE,GACvB,CAEA,SAAS6D,IACP6D,EAAKwL,IACLmF,EAAepV,MAAQkS,EACvBjT,EAAO2B,WACT,CAEA,SAASsR,EAAU/Q,EAAQC,GACzB,IAAIkT,EAAInI,GAAU,CAAChL,EAAQC,IAAOpE,EAAI+W,EAAQ5S,EAAQC,GACtD6S,EAAexP,EAAIC,EAAIrF,EAAS8S,EAAIC,EAAI8B,EAAIzP,EAAKzH,EAAE,GAAI0H,EAAK1H,EAAE,GAAIqC,EAAU8B,EAAQgR,EAAKmC,EAAE,GAAIlC,EAAKkC,EAAE,GAAIJ,EAAKI,EAAE,GAAIT,GAAU5U,GAC/HA,EAAOe,MAAMyE,EAAIC,EACnB,CAEA,SAAS7D,IACPuU,EAAepV,MAAQA,EACvBf,EAAO4B,SACT,CAEA,SAAS4N,IACP7N,IACAwU,EAAepV,MAAQqV,EACvBD,EAAevU,QAAU6N,CAC3B,CAEA,SAAS2G,EAAUlU,EAAQC,GACzB8Q,EAAU4C,EAAW3T,EAAQC,GAAM2T,EAAMtQ,EAAIuQ,EAAMtQ,EAAIuQ,EAAM9C,EAAI+C,EAAM9C,EAAI+C,EAAMjB,EACjFkB,EAAepV,MAAQkS,CACzB,CAEA,SAASxD,IACPuF,EAAexP,EAAIC,EAAIrF,EAAS8S,EAAIC,EAAI8B,EAAIa,EAAKC,EAAKF,EAAUG,EAAKC,EAAKC,EAAKtB,GAAU5U,GACzFmW,EAAevU,QAAUA,EACzBA,GACF,CAEA,OAAOuU,CACT,CACF,CA7FmBE,CAASvB,EAASC,GAGrC,SAAsBD,GACpB,OAAOlB,GAAY,CACjB7S,MAAO,SAASjD,EAAGG,GACjBH,EAAIgX,EAAQhX,EAAGG,GACf1F,KAAKyH,OAAOe,MAAMjD,EAAE,GAAIA,EAAE,GAC5B,GAEJ,CAV+CwY,CAAaxB,EAC5D,CCEA,IAAIyB,GAAmB3C,GAAY,CACjC7S,MAAO,SAASjD,EAAGG,GACjB1F,KAAKyH,OAAOe,MAAMjD,EAAIiB,EAASd,EAAIc,EACrC,IAuBF,SAASyX,GAAqBnQ,EAAGkC,EAAIJ,EAAIsO,EAAIC,EAAIC,GAC/C,IAAKA,EAAO,OAZd,SAAwBtQ,EAAGkC,EAAIJ,EAAIsO,EAAIC,GACrC,SAASE,EAAU9Y,EAAGG,GAEpB,MAAO,CAACsK,EAAKlC,GADbvI,GAAK2Y,GACetO,EAAK9B,GADhBpI,GAAKyY,GAEhB,CAIA,OAHAE,EAAUrR,OAAS,SAASzH,EAAGG,GAC7B,MAAO,EAAEH,EAAIyK,GAAMlC,EAAIoQ,GAAKtO,EAAKlK,GAAKoI,EAAIqQ,EAC5C,EACOE,CACT,CAGqBC,CAAexQ,EAAGkC,EAAIJ,EAAIsO,EAAIC,GACjD,IAAII,EAAW5X,EAAIyX,GACfI,EAAWxX,EAAIoX,GACfhU,EAAImU,EAAWzQ,EACfzD,EAAImU,EAAW1Q,EACf2Q,EAAKF,EAAWzQ,EAChB4Q,EAAKF,EAAW1Q,EAChB6Q,GAAMH,EAAW5O,EAAK2O,EAAWvO,GAAMlC,EACvC8Q,GAAMJ,EAAWxO,EAAKuO,EAAW3O,GAAM9B,EAC3C,SAASuQ,EAAU9Y,EAAGG,GAEpB,MAAO,CAAC0E,GADR7E,GAAK2Y,GACW7T,GADP3E,GAAKyY,GACUnO,EAAIJ,EAAKvF,EAAI9E,EAAI6E,EAAI1E,EAC/C,CAIA,OAHA2Y,EAAUrR,OAAS,SAASzH,EAAGG,GAC7B,MAAO,CAACwY,GAAMO,EAAKlZ,EAAImZ,EAAKhZ,EAAIiZ,GAAKR,GAAMS,EAAKF,EAAKnZ,EAAIkZ,EAAK/Y,GAChE,EACO2Y,CACT,CAEe,SAAS5T,GAAW8R,GACjC,OAGK,SAA2BsC,GAChC,IAAItC,EAI+CuC,EAKpC5R,EAAIC,EAAIC,EAEnB2R,EACAC,EACAC,EACAC,EACAC,EAdArR,EAAI,IACJvI,EAAI,IAAKG,EAAI,IACbiE,EAAS,EAAGC,EAAM,EAClB0I,EAAc,EAAGC,EAAW,EAAGC,EAAa,EAC5C4L,EAAQ,EACRF,EAAK,EACLC,EAAK,EACLiB,EAAQ,KAAMC,EAAUC,GACxBrS,EAAK,KAAkBsS,EAAWC,GAClChD,EAAS,GAOb,SAAS/R,EAAWjC,GAClB,OAAOyW,EAAuBzW,EAAM,GAAKhC,EAASgC,EAAM,GAAKhC,EAC/D,CAEA,SAASwG,EAAOxE,GAEd,OADAA,EAAQyW,EAAuBjS,OAAOxE,EAAM,GAAIA,EAAM,MACtC,CAACA,EAAM,GAAKjC,EAASiC,EAAM,GAAKjC,EAClD,CAsEA,SAASkZ,IACP,IAAIC,EAASzB,GAAqBnQ,EAAG,EAAG,EAAGoQ,EAAIC,EAAIC,GAAOuB,MAAM,KAAMpD,EAAQ5S,EAAQC,IAClFyU,EAAYJ,GAAqBnQ,EAAGvI,EAAIma,EAAO,GAAIha,EAAIga,EAAO,GAAIxB,EAAIC,EAAIC,GAK9E,OAJAU,EAASzM,GAAcC,EAAaC,EAAUC,GAC9CwM,EAAmB9M,GAAQqK,EAAS8B,GACpCY,EAAyB/M,GAAQ4M,EAAQE,GACzCD,EAAkBjB,GAASkB,EAAkBxC,GACtCoD,GACT,CAEA,SAASA,IAEP,OADAV,EAAQC,EAAc,KACf1U,CACT,CAEA,OAnFAA,EAAWhD,OAAS,SAASA,GAC3B,OAAOyX,GAASC,IAAgB1X,EAASyX,EAAQA,EAAQlB,GAxE7D,SAAyBc,GACvB,OAAOzD,GAAY,CACjB7S,MAAO,SAASjD,EAAGG,GACjB,IAAIwV,EAAI4D,EAAOvZ,EAAGG,GAClB,OAAO1F,KAAKyH,OAAOe,MAAM0S,EAAE,GAAIA,EAAE,GACnC,GAEJ,CAiE8E2E,CAAgBf,EAAhBe,CAAwBR,EAAQN,EAAgBQ,EAASJ,EAAc1X,MACnJ,EAEAgD,EAAW4U,QAAU,SAASrO,GAC5B,OAAOC,UAAUnP,QAAUud,EAAUrO,EAAGoO,OAAQre,EAAW6e,KAAWP,CACxE,EAEA5U,EAAW8U,SAAW,SAASvO,GAC7B,OAAOC,UAAUnP,QAAUyd,EAAWvO,EAAG/D,EAAKC,EAAKC,EAAKC,EAAK,KAAMwS,KAAWL,CAChF,EAEA9U,EAAWC,UAAY,SAASsG,GAC9B,OAAOC,UAAUnP,QAAUud,GAAWrO,EC/F3B,SAASiI,GACtB,IAAI6G,EAAKnZ,EAAIsS,GACTjP,EAAQ,EAAIxD,EACZuZ,EAAcD,EAAK,EACnBE,EAAgBla,EAAIga,GAAM9Z,EAM9B,SAAS0T,EAAQ/P,EAAQC,GACvB,OAAOjD,EAAIgD,GAAUhD,EAAIiD,GAAOkW,CAClC,CAiFA,SAASG,EAAU7V,EAAGC,EAAG6V,GACvB,IAKIC,EAAK,CAAC,EAAG,EAAG,GACZC,EAAKvL,GANAF,GAAUvK,GACVuK,GAAUtK,IAMfgW,EAAOzL,GAAawL,EAAIA,GACxBE,EAAOF,EAAG,GACVG,EAAcF,EAAOC,EAAOA,EAGhC,IAAKC,EAAa,OAAQL,GAAO9V,EAEjC,IAAIuS,EAAMmD,EAAKO,EAAOE,EAClBC,GAAMV,EAAKQ,EAAOC,EAClBE,EAAQ5L,GAAesL,EAAIC,GAC3BlS,EAAI6G,GAAeoL,EAAIxD,GAE3B7H,GAAoB5G,EADZ6G,GAAeqL,EAAII,IAI3B,IAAIE,EAAID,EACJtE,EAAIvH,GAAa1G,EAAGwS,GACpBC,EAAK/L,GAAa8L,EAAGA,GACrBE,EAAKzE,EAAIA,EAAIwE,GAAM/L,GAAa1G,EAAGA,GAAK,GAE5C,KAAI0S,EAAK,GAAT,CAEA,IAAI5S,EAAI7G,EAAKyZ,GACTC,EAAI9L,GAAe2L,IAAKvE,EAAInO,GAAK2S,GAIrC,GAHA7L,GAAoB+L,EAAG3S,GACvB2S,EAAInM,GAAUmM,IAETX,EAAK,OAAOW,EAGjB,IAII3W,EAJArC,EAAUuC,EAAE,GACZqN,EAAUpN,EAAE,GACZmN,EAAOpN,EAAE,GACTyN,EAAOxN,EAAE,GAGToN,EAAU5P,IAASqC,EAAIrC,EAASA,EAAU4P,EAASA,EAAUvN,GAEjE,IAAIF,EAAQyN,EAAU5P,EAClBiZ,EAAQhb,EAAIkE,EAAQ9D,GAAMF,EAM9B,IAHK8a,GAASjJ,EAAOL,IAAMtN,EAAIsN,EAAMA,EAAOK,EAAMA,EAAO3N,GAF1C4W,GAAS9W,EAAQhE,EAM1B8a,EACEtJ,EAAOK,EAAO,EAAIgJ,EAAE,IAAM/a,EAAI+a,EAAE,GAAKhZ,GAAW7B,EAAUwR,EAAOK,GACjEL,GAAQqJ,EAAE,IAAMA,EAAE,IAAMhJ,EAC1B7N,EAAQ9D,GAAM2B,GAAWgZ,EAAE,IAAMA,EAAE,IAAMpJ,GAAU,CACvD,IAAIsJ,EAAKhM,GAAe2L,IAAKvE,EAAInO,GAAK2S,GAEtC,OADA7L,GAAoBiM,EAAI7S,GACjB,CAAC2S,EAAGnM,GAAUqM,GACvB,CAjCkB,CAkCpB,CAIA,SAASC,EAAKrX,EAAQC,GACpB,IAAIsR,EAAI6E,EAAc9G,EAAS/S,EAAK+S,EAChC+H,EAAO,EAKX,OAJIrX,GAAUuR,EAAG8F,GAAQ,EAChBrX,EAASuR,IAAG8F,GAAQ,GACzBpX,GAAOsR,EAAG8F,GAAQ,EACbpX,EAAMsR,IAAG8F,GAAQ,GACnBA,CACT,CAEA,OAAO/M,GAAKyF,GAvJZ,SAAkBjS,GAChB,IAAI8P,EACAmF,EACAuE,EACAC,EACA5I,EACJ,MAAO,CACLlP,UAAW,WACT8X,EAAMD,GAAK,EACX3I,EAAQ,CACV,EACA9P,MAAO,SAASmB,EAAQC,GACtB,IACIuX,EADAvJ,EAAS,CAACjO,EAAQC,GAElBiK,EAAI6F,EAAQ/P,EAAQC,GACpBkT,EAAIiD,EACAlM,EAAI,EAAImN,EAAKrX,EAAQC,GACrBiK,EAAImN,EAAKrX,GAAUA,EAAS,EAAIzD,GAAMA,GAAK0D,GAAO,EAO1D,IANK2N,IAAW2J,EAAMD,EAAKpN,IAAIpM,EAAO2B,YAClCyK,IAAMoN,MACRE,EAASlB,EAAU1I,EAAQK,KACZzD,GAAWoD,EAAQ4J,IAAWhN,GAAWyD,EAAQuJ,MAC9DvJ,EAAO,GAAK,GAEZ/D,IAAMoN,EACR3I,EAAQ,EACJzE,GAEFpM,EAAO2B,YACP+X,EAASlB,EAAUrI,EAAQL,GAC3B9P,EAAOe,MAAM2Y,EAAO,GAAIA,EAAO,MAG/BA,EAASlB,EAAU1I,EAAQK,GAC3BnQ,EAAOe,MAAM2Y,EAAO,GAAIA,EAAO,GAAI,GACnC1Z,EAAO4B,WAETkO,EAAS4J,OACJ,GAAInB,GAAiBzI,GAAUwI,EAAclM,EAAG,CACrD,IAAI7F,EAGE8O,EAAIJ,KAAQ1O,EAAIiS,EAAUrI,EAAQL,GAAQ,MAC9Ce,EAAQ,EACJyH,GACFtY,EAAO2B,YACP3B,EAAOe,MAAMwF,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BvG,EAAOe,MAAMwF,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BvG,EAAO4B,YAEP5B,EAAOe,MAAMwF,EAAE,GAAG,GAAIA,EAAE,GAAG,IAC3BvG,EAAO4B,UACP5B,EAAO2B,YACP3B,EAAOe,MAAMwF,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAI,IAGrC,EACI6F,GAAO0D,GAAWpD,GAAWoD,EAAQK,IACvCnQ,EAAOe,MAAMoP,EAAO,GAAIA,EAAO,IAEjCL,EAASK,EAAQqJ,EAAKpN,EAAG6I,EAAKI,CAChC,EACAzT,QAAS,WACH4X,GAAIxZ,EAAO4B,UACfkO,EAAS,IACX,EAGAe,MAAO,WACL,OAAOA,GAAU4I,GAAOD,IAAO,CACjC,EAEJ,IApFA,SAAqB3K,EAAMwC,EAAIC,EAAWtR,GACxCuR,GAAavR,EAAQwR,EAAQjP,EAAO+O,EAAWzC,EAAMwC,EACvD,GAiK4CiH,EAAc,CAAC,GAAI9G,GAAU,EAAE/S,EAAI+S,EAAS/S,GAC1F,CD3E8Ckb,CAAWhC,EAAQpO,EAAIxK,IAAY4Y,EAAQ,KAAME,IAAmBM,KAAWR,EAAQ7Y,CACnI,EAEAkE,EAAWqR,WAAa,SAAS9K,GAC/B,OAAOC,UAAUnP,QAAUyd,EAAgB,MAALvO,GAAa/D,EAAKC,EAAKC,EAAKC,EAAK,KAAMoS,IAAY/F,GAAcxM,GAAM+D,EAAE,GAAG,GAAI9D,GAAM8D,EAAE,GAAG,GAAI7D,GAAM6D,EAAE,GAAG,GAAI5D,GAAM4D,EAAE,GAAG,IAAK4O,KAAiB,MAAN3S,EAAa,KAAO,CAAC,CAACA,EAAIC,GAAK,CAACC,EAAIC,GACrN,EAEA3C,EAAWsR,MAAQ,SAAS/K,GAC1B,OAAOC,UAAUnP,QAAUgM,GAAKkD,EAAGyO,KAAc3R,CACnD,EAEArD,EAAWuR,UAAY,SAAShL,GAC9B,OAAOC,UAAUnP,QAAUyD,GAAKyL,EAAE,GAAItL,GAAKsL,EAAE,GAAIyO,KAAc,CAACla,EAAGG,EACrE,EAEA+E,EAAWiV,OAAS,SAAS1O,GAC3B,OAAOC,UAAUnP,QAAU6H,EAASqH,EAAE,GAAK,IAAMxK,EAASoD,EAAMoH,EAAE,GAAK,IAAMxK,EAASiZ,KAAc,CAAC9V,EAASpD,EAASqD,EAAMrD,EAC/H,EAEAkE,EAAWqU,OAAS,SAAS9N,GAC3B,OAAOC,UAAUnP,QAAUwQ,EAActB,EAAE,GAAK,IAAMxK,EAAS+L,EAAWvB,EAAE,GAAK,IAAMxK,EAASgM,EAAaxB,EAAElP,OAAS,EAAIkP,EAAE,GAAK,IAAMxK,EAAU,EAAGiZ,KAAc,CAACnN,EAAc/L,EAASgM,EAAWhM,EAASiM,EAAajM,EAC/N,EAEAkE,EAAW2M,MAAQ,SAASpG,GAC1B,OAAOC,UAAUnP,QAAUsc,EAAQpN,EAAI,IAAMxK,EAASiZ,KAAcrB,EAAQ7X,CAC9E,EAEAkE,EAAW4W,SAAW,SAASrQ,GAC7B,OAAOC,UAAUnP,QAAUoc,EAAKlN,GAAK,EAAI,EAAGyO,KAAcvB,EAAK,CACjE,EAEAzT,EAAW6W,SAAW,SAAStQ,GAC7B,OAAOC,UAAUnP,QAAUqc,EAAKnN,GAAK,EAAI,EAAGyO,KAActB,EAAK,CACjE,EAEA1T,EAAWE,UAAY,SAASqG,GAC9B,OAAOC,UAAUnP,QAAUid,EAAkBjB,GAASkB,EAAkBxC,EAASxL,EAAIA,GAAI4O,KAAWzY,EAAKqV,EAC3G,EAEA/R,EAAWyR,UAAY,SAASnL,EAAQ7I,GACtC,OAAOgU,GAAUzR,EAAYsG,EAAQ7I,EACvC,EAEAuC,EAAW8W,QAAU,SAASC,EAAMtZ,GAClC,OFzHG,SAAiBuC,EAAY+W,EAAMtZ,GACxC,OAAOgU,GAAUzR,EAAY,CAAC,CAAC,EAAG,GAAI+W,GAAOtZ,EAC/C,CEuHWqZ,CAAQ9W,EAAY+W,EAAMtZ,EACnC,EAEAuC,EAAWgX,SAAW,SAASC,EAAOxZ,GACpC,OFzHG,SAAkBuC,EAAYiX,EAAOxZ,GAC1C,OAAO0T,GAAInR,GAAY,SAASJ,GAC9B,IAAI8R,GAAKuF,EACL5T,EAAIqO,GAAK9R,EAAE,GAAG,GAAKA,EAAE,GAAG,IACxB9E,GAAK4W,EAAIrO,GAAKzD,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACpC3E,GAAKoI,EAAIzD,EAAE,GAAG,GAClBI,EAAWsR,MAAM,IAAMjO,GAAGkO,UAAU,CAACzW,EAAGG,GAC1C,GAAGwC,EACL,CEiHWuZ,CAAShX,EAAYiX,EAAOxZ,EACrC,EAEAuC,EAAWkX,UAAY,SAASC,EAAQ1Z,GACtC,OFnHG,SAAmBuC,EAAYmX,EAAQ1Z,GAC5C,OAAO0T,GAAInR,GAAY,SAASJ,GAC9B,IAAI+R,GAAKwF,EACL9T,EAAIsO,GAAK/R,EAAE,GAAG,GAAKA,EAAE,GAAG,IACxB9E,GAAKuI,EAAIzD,EAAE,GAAG,GACd3E,GAAK0W,EAAItO,GAAKzD,EAAE,GAAG,GAAKA,EAAE,GAAG,KAAO,EACxCI,EAAWsR,MAAM,IAAMjO,GAAGkO,UAAU,CAACzW,EAAGG,GAC1C,GAAGwC,EACL,CE2GWyZ,CAAUlX,EAAYmX,EAAQ1Z,EACvC,EAiBO,WAGL,OAFAqU,EAAUsC,EAAUc,MAAM3f,KAAMiR,WAChCxG,EAAWuC,OAASuP,EAAQvP,QAAUA,EAC/ByS,GACT,CACF,CAtHSoC,EAAkB,WAAa,OAAOtF,CAAS,GAA/CsF,EACT,CEvDO,SAASC,GAAYnY,EAAQC,GAClC,MAAO,CAACD,EAAQ3G,EAAIoE,GAAKhB,EAASwD,GAAO,IAC3C,CAMe,cACb,OAIK,SAA4B2S,GACjC,IAKerP,EAAIC,EAAIC,EALnB8F,EAAIzI,GAAW8R,GACfmD,EAASxM,EAAEwM,OACX3D,EAAQ7I,EAAE6I,MACVC,EAAY9I,EAAE8I,UACdF,EAAa5I,EAAE4I,WACf7O,EAAK,KAkBT,SAAS8U,IACP,IAAIjU,EAAI5H,EAAK6V,IACT/N,EAAIkF,EnBqBG,SAAS4L,GAGtB,SAASkD,EAAQzZ,GAEf,OADAA,EAAcuW,EAAOvW,EAAY,GAAK/B,EAAS+B,EAAY,GAAK/B,IAC7C,IAAMD,EAASgC,EAAY,IAAMhC,EAASgC,CAC/D,CAOA,OAZAuW,EAASzM,GAAcyM,EAAO,GAAKtY,EAASsY,EAAO,GAAKtY,EAASsY,EAAOhd,OAAS,EAAIgd,EAAO,GAAKtY,EAAU,GAO3Gwb,EAAQhV,OAAS,SAASzE,GAExB,OADAA,EAAcuW,EAAO9R,OAAOzE,EAAY,GAAK/B,EAAS+B,EAAY,GAAK/B,IACpD,IAAMD,EAASgC,EAAY,IAAMhC,EAASgC,CAC/D,EAEOyZ,CACT,CmBnCcpP,CAASM,EAAE4L,UAAU9R,OAAO,CAAC,EAAG,KAC1C,OAAO8O,EAAiB,MAAN7O,EACZ,CAAC,CAACe,EAAE,GAAKF,EAAGE,EAAE,GAAKF,GAAI,CAACE,EAAE,GAAKF,EAAGE,EAAE,GAAKF,IAAMyO,IAAYuF,GAC3D,CAAC,CAACjc,KAAKmV,IAAIhN,EAAE,GAAKF,EAAGb,GAAKC,GAAK,CAACrH,KAAKoV,IAAIjN,EAAE,GAAKF,EAAGX,GAAKC,IACxD,CAAC,CAACH,EAAIpH,KAAKmV,IAAIhN,EAAE,GAAKF,EAAGZ,IAAM,CAACC,EAAItH,KAAKoV,IAAIjN,EAAE,GAAKF,EAAGV,KAC/D,CAEA,OAzBA8F,EAAE6I,MAAQ,SAAS/K,GACjB,OAAOC,UAAUnP,QAAUia,EAAM/K,GAAI+Q,KAAYhG,GACnD,EAEA7I,EAAE8I,UAAY,SAAShL,GACrB,OAAOC,UAAUnP,QAAUka,EAAUhL,GAAI+Q,KAAY/F,GACvD,EAEA9I,EAAEwM,OAAS,SAAS1O,GAClB,OAAOC,UAAUnP,QAAU4d,EAAO1O,GAAI+Q,KAAYrC,GACpD,EAEAxM,EAAE4I,WAAa,SAAS9K,GACtB,OAAOC,UAAUnP,QAAgB,MAALkP,EAAY/D,EAAKC,EAAKC,EAAKC,EAAK,MAAQH,GAAM+D,EAAE,GAAG,GAAI9D,GAAM8D,EAAE,GAAG,GAAI7D,GAAM6D,EAAE,GAAG,GAAI5D,GAAM4D,EAAE,GAAG,IAAM+Q,KAAkB,MAAN9U,EAAa,KAAO,CAAC,CAACA,EAAIC,GAAK,CAACC,EAAIC,GACpL,EAWO2U,GACT,CAtCSE,CAAmBH,IACrB/F,MAAM,IAAMzV,EACnB,CAPAwb,GAAY9U,OAAS,SAASzH,EAAGG,GAC/B,MAAO,CAACH,EAAG,EAAIkB,EAAKI,EAAInB,IAAMU,EAChC,E,ICJImX,GACAC,GACAvQ,GACAC,G,WCGSgV,GAAqB,SAAAC,IAAA/iB,EAAAA,EAAAA,GAAA8iB,EAAAC,GAAA,IAAA9iB,GAAAC,EAAAA,EAAAA,GAAA4iB,GAAA,SAAAA,IAAA,OAAA1iB,EAAAA,EAAAA,GAAA,KAAA0iB,GAAA7iB,EAAAsgB,MAAA,KAAA1O,UAAA,CA6HhC,OA7HgCrR,EAAAA,EAAAA,GAAAsiB,EAAA,EAAAriB,IAAA,oBAAAC,MACvB,YACTY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAuhB,EAAAthB,WAAA,0BAAAC,KAAA,MAEA,IAAMuhB,EAAKpiB,KAAK4O,MAAMyT,gBAChBnH,EAAIlb,KAAKsiB,KAAKC,KAAKviB,MAQzBkb,EAAE,YAAYsH,OAAO,CACpB/X,WAAYgY,KACZC,KAAM,aACNC,KAAM,aACNC,WAAW,EACXC,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,aAAc,GACdC,aAAc,EACdC,OAAQ,OACRC,OAAQ,OACRC,gBAAiBC,GAAAA,GAAUA,GAAAA,IAC3BC,YAAaD,GAAAA,GAAUA,GAAAA,IACvBE,cAAe,EACfC,iBAAkB,EAClBC,UAAW,GACXC,oBAAoB,IAIpB,IAAMtB,EAAOpH,EAAE,WAEfoH,EAAKE,OAAO,CACX7X,UAAW,GACXkZ,KAAM,YAGPC,EAAAA,GAAAA,GAASxB,EAAM,SAAUF,EAAI,QAG9BlH,EAAE,oBAAoBsH,OAAO,CAC5BuB,eAAe,IAIhB7I,EAAE,kBAAkBsH,OAAO,CAC1BuB,eAAe,EACfC,WAAW,EACXC,UAAU,EACVC,WAAW,IAGZhJ,EAAE,iBAAiBsH,OAAO,CACzBuB,eAAe,IAIf,IAAMzB,EAAOpH,EAAE,cAEfoH,EAAKE,OAAO,CACX7X,UAAW,GACXwZ,YAAY,EACZN,KAAM,SACNO,YAAa,EACbjY,SAAU,WACVkY,YAAa,GACbC,cAAe,KAGhBR,EAAAA,GAAAA,GAASxB,EAAM,OAAQF,EAAI,kBAC3B0B,EAAAA,GAAAA,GAASxB,EAAM,SAAUF,EAAI,cAG9BlH,EAAE,SAAU,CAAC,gBAAgBsH,OAAO,CACnC+B,UAAW,EACXC,aAAc,IAGftJ,EAAE,WAAY,CAAC,MAAO,SAAU,OAAQ,SAASsH,OAAO,CACvDjd,EAAGkf,EAAAA,GACH/e,EAAG+e,EAAAA,GACHC,KAAM,SAAC3Z,GACNA,EAAQ4Z,QAAQ,EAAG,GACnB5Z,EAAQQ,OAAO,EAAG,GAClBR,EAAQ4Z,OAAO,GAAI,GACnB5Z,EAAQQ,OAAO,EAAG,EACnB,IAGD2P,EAAE,WAAY,CAAC,MAAO,SAAU,QAAS,SAASsH,OAAO,CACxDjd,EAAGkf,EAAAA,GACH/e,EAAG+e,EAAAA,GACHC,KAAM,SAAC3Z,GACNA,EAAQ4Z,QAAQ,EAAG,GACnB5Z,EAAQQ,OAAO,EAAG,EACnB,IAUD2P,EAAE,mBAAmBsH,OAAO,CAC3BpR,KAAM,KAIP8J,EAAE,eAAesH,OAAO,CACvBjd,EAAGqf,EAAAA,GACHC,QAASD,EAAAA,GACTlf,EAAGkf,EAAAA,GACHE,QAASF,EAAAA,GACTG,aAAc,GACdC,cAAe,IAGjB,KAAC9C,CAAA,CA7HgC,CAAQ+C,GAAAA,G,sBDRtCC,GAAU,IAAI/f,EACdggB,GAAc,IAAIhgB,EAMlBigB,GAAa,CACf5c,MAAOjB,EACP6B,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc,WACZ8b,GAAWhc,UAAYic,GACvBD,GAAW/b,QAAUic,EACvB,EACA/b,WAAY,WACV6b,GAAWhc,UAAYgc,GAAW/b,QAAU+b,GAAW5c,MAAQjB,EAC/D2d,GAAQ/a,IAAIrE,EAAIqf,KAChBA,GAAc,IAAIhgB,CACpB,EACAmO,OAAQ,WACN,IAAIiS,EAAOL,GAAU,EAErB,OADAA,GAAU,IAAI/f,EACPogB,CACT,GAGF,SAASF,KACPD,GAAW5c,MAAQgd,EACrB,CAEA,SAASA,GAAejgB,EAAGG,GACzB0f,GAAW5c,MAAQid,GACnBlI,GAAMtQ,GAAK1H,EAAGiY,GAAMtQ,GAAKxH,CAC3B,CAEA,SAAS+f,GAAUlgB,EAAGG,GACpByf,GAAYhb,IAAI+C,GAAK3H,EAAI0H,GAAKvH,GAC9BuH,GAAK1H,EAAG2H,GAAKxH,CACf,CAEA,SAAS4f,KACPG,GAAUlI,GAAKC,GACjB,CAEA,IEpCID,GACAC,GACAvQ,GACAC,GFiCJ,ME7CIiD,GAAK,EACLE,GAAK,EACLqV,GAAK,EACLxV,GAAK,EACLE,GAAK,EACLuV,GAAK,EACLC,GAAK,EACLC,GAAK,EACLC,GAAK,EAMLC,GAAiB,CACnBvd,MAAOwd,GACP5c,UAAW6c,GACX5c,QAAS6c,GACT5c,aAAc,WACZyc,GAAe3c,UAAY+c,GAC3BJ,GAAe1c,QAAU+c,EAC3B,EACA7c,WAAY,WACVwc,GAAevd,MAAQwd,GACvBD,GAAe3c,UAAY6c,GAC3BF,GAAe1c,QAAU6c,EAC3B,EACA5S,OAAQ,WACN,IAAI+S,EAAWP,GAAK,CAACF,GAAKE,GAAID,GAAKC,IAC7BH,GAAK,CAACzV,GAAKyV,GAAIvV,GAAKuV,IACpBD,GAAK,CAACvV,GAAKuV,GAAIrV,GAAKqV,IACpB,CAACjN,IAAKA,KAIZ,OAHAtI,GAAKE,GAAKqV,GACVxV,GAAKE,GAAKuV,GACVC,GAAKC,GAAKC,GAAK,EACRO,CACT,GAGF,SAASL,GAAczgB,EAAGG,GACxByK,IAAM5K,EACN8K,IAAM3K,IACJggB,EACJ,CAEA,SAASO,KACPF,GAAevd,MAAQ8d,EACzB,CAEA,SAASA,GAAuB/gB,EAAGG,GACjCqgB,GAAevd,MAAQ+d,GACvBP,GAAc/Y,GAAK1H,EAAG2H,GAAKxH,EAC7B,CAEA,SAAS6gB,GAAkBhhB,EAAGG,GAC5B,IAAIsK,EAAKzK,EAAI0H,GAAI2C,EAAKlK,EAAIwH,GAAIhD,EAAI/C,EAAK6I,EAAKA,EAAKJ,EAAKA,GACtDM,IAAMhG,GAAK+C,GAAK1H,GAAK,EACrB6K,IAAMlG,GAAKgD,GAAKxH,GAAK,EACrBigB,IAAMzb,EACN8b,GAAc/Y,GAAK1H,EAAG2H,GAAKxH,EAC7B,CAEA,SAASwgB,KACPH,GAAevd,MAAQwd,EACzB,CAEA,SAASG,KACPJ,GAAevd,MAAQge,EACzB,CAEA,SAASJ,KACPK,GAAkBlJ,GAAKC,GACzB,CAEA,SAASgJ,GAAuBjhB,EAAGG,GACjCqgB,GAAevd,MAAQie,GACvBT,GAAczI,GAAMtQ,GAAK1H,EAAGiY,GAAMtQ,GAAKxH,EACzC,CAEA,SAAS+gB,GAAkBlhB,EAAGG,GAC5B,IAAIsK,EAAKzK,EAAI0H,GACT2C,EAAKlK,EAAIwH,GACThD,EAAI/C,EAAK6I,EAAKA,EAAKJ,EAAKA,GAE5BM,IAAMhG,GAAK+C,GAAK1H,GAAK,EACrB6K,IAAMlG,GAAKgD,GAAKxH,GAAK,EACrBigB,IAAMzb,EAGN0b,KADA1b,EAAIgD,GAAK3H,EAAI0H,GAAKvH,IACPuH,GAAK1H,GAChBsgB,IAAM3b,GAAKgD,GAAKxH,GAChBogB,IAAU,EAAJ5b,EACN8b,GAAc/Y,GAAK1H,EAAG2H,GAAKxH,EAC7B,CAEA,UChGe,SAASghB,GAAY/a,GAClC3L,KAAKyV,SAAW9J,CAClB,CAEA+a,GAAY9lB,UAAY,CACtB+lB,QAAS,IACTC,YAAa,SAAS5V,GACpB,OAAOhR,KAAK2mB,QAAU3V,EAAGhR,IAC3B,EACAsJ,aAAc,WACZtJ,KAAK6mB,MAAQ,CACf,EACAtd,WAAY,WACVvJ,KAAK6mB,MAAQpO,GACf,EACArP,UAAW,WACTpJ,KAAK8mB,OAAS,CAChB,EACAzd,QAAS,WACY,IAAfrJ,KAAK6mB,OAAa7mB,KAAKyV,SAASsR,YACpC/mB,KAAK8mB,OAASrO,GAChB,EACAjQ,MAAO,SAASjD,EAAGG,GACjB,OAAQ1F,KAAK8mB,QACX,KAAK,EACH9mB,KAAKyV,SAASkP,OAAOpf,EAAGG,GACxB1F,KAAK8mB,OAAS,EACd,MAEF,KAAK,EACH9mB,KAAKyV,SAASlK,OAAOhG,EAAGG,GACxB,MAEF,QACE1F,KAAKyV,SAASkP,OAAOpf,EAAIvF,KAAK2mB,QAASjhB,GACvC1F,KAAKyV,SAASuC,IAAIzS,EAAGG,EAAG1F,KAAK2mB,QAAS,EAAGrgB,GAI/C,EACAgN,OAAQ/L,GCvCV,IACIyf,GACAzJ,GACAC,GACAvQ,GACAC,GALAtF,GAAY,IAAIzC,EAOhBqE,GAAe,CACjBhB,MAAOjB,EACP6B,UAAW,WACTI,GAAahB,MAAQiB,EACvB,EACAJ,QAAS,WACH2d,IAAYnd,GAAY0T,GAAKC,IACjChU,GAAahB,MAAQjB,CACvB,EACA+B,aAAc,WACZ0d,IAAa,CACf,EACAzd,WAAY,WACVyd,GAAa,IACf,EACA1T,OAAQ,WACN,IAAIxR,GAAU8F,GAEd,OADAA,GAAY,IAAIzC,EACTrD,CACT,GAGF,SAAS2H,GAAiBlE,EAAGG,GAC3B8D,GAAahB,MAAQqB,GACrB0T,GAAMtQ,GAAK1H,EAAGiY,GAAMtQ,GAAKxH,CAC3B,CAEA,SAASmE,GAAYtE,EAAGG,GACtBuH,IAAM1H,EAAG2H,IAAMxH,EACfkC,GAAUuC,IAAIhD,EAAK8F,GAAKA,GAAKC,GAAKA,KAClCD,GAAK1H,EAAG2H,GAAKxH,CACf,CAEA,I,YC3CIuhB,GAAaC,GAAaC,GAAaC,GD2C3C,M,WCzCqBC,GAAU,WAC7B,SAAAA,EAAYC,IAAQ9nB,EAAAA,EAAAA,GAAA,KAAA6nB,GAClBrnB,KAAKunB,QAAoB,MAAVD,EAAiBE,GAgEpC,SAAqBF,GACnB,IAAMzZ,EAAIhI,KAAKkB,MAAMugB,GACrB,KAAMzZ,GAAK,GAAI,MAAM,IAAI4Z,WAAW,mBAADxiB,OAAoBqiB,IACvD,GAAIzZ,EAAI,GAAI,OAAO2Z,GACnB,GAAI3Z,IAAMoZ,GAAa,CACrB,IAAMnZ,EAACjI,KAAAoB,IAAG,GAAM4G,GAChBoZ,GAAcpZ,EACdqZ,GAAc,SAAgBQ,GAC5B,IAAIrkB,EAAI,EACRrD,KAAKgR,GAAK0W,EAAQ,GAClB,IAAK,IAAMjiB,EAAIiiB,EAAQ5lB,OAAQuB,EAAIoC,IAAKpC,EACtCrD,KAAKgR,GAAKnL,KAAKuM,MAAMnB,UAAU5N,GAAKyK,GAAKA,EAAI4Z,EAAQrkB,EAEzD,CACF,CACA,OAAO6jB,EACT,CAhF6CS,CAAYL,GACrDtnB,KAAK2mB,QAAU,IACf3mB,KAAKgR,EAAI,EACX,CAkDC,OAlDApR,EAAAA,EAAAA,GAAAynB,EAAA,EAAAxnB,IAAA,cAAAC,MACD,SAAYkR,GAEV,OADAhR,KAAK2mB,SAAW3V,EACThR,IACT,GAAC,CAAAH,IAAA,eAAAC,MACD,WACEE,KAAK6mB,MAAQ,CACf,GAAC,CAAAhnB,IAAA,aAAAC,MACD,WACEE,KAAK6mB,MAAQpO,GACf,GAAC,CAAA5Y,IAAA,YAAAC,MACD,WACEE,KAAK8mB,OAAS,CAChB,GAAC,CAAAjnB,IAAA,UAAAC,MACD,WACqB,IAAfE,KAAK6mB,QAAa7mB,KAAKgR,GAAK,KAChChR,KAAK8mB,OAASrO,GAChB,GAAC,CAAA5Y,IAAA,QAAAC,MACD,SAAMyF,EAAGG,GACP,OAAQ1F,KAAK8mB,QACX,KAAK,EACH9mB,KAAKunB,QAAOK,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,eAAItiB,EAAKG,GACrB1F,KAAK8mB,OAAS,EACd,MAEF,KAAK,EACH9mB,KAAKunB,QAAOO,KAAAA,IAAAD,EAAAA,GAAAA,GAAA,eAAItiB,EAAKG,GACrB,MAEF,QAEE,GADA1F,KAAKunB,QAAOQ,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,eAAItiB,EAAKG,GACjB1F,KAAK2mB,UAAYQ,IAAennB,KAAKunB,UAAYL,GAAa,CAChE,IAAMhM,EAAIlb,KAAK2mB,QACT3b,EAAIhL,KAAKgR,EACfhR,KAAKgR,EAAI,GACThR,KAAKunB,QAAOS,KAAAA,IAAAH,EAAAA,GAAAA,GAAA,sDAAM3M,EAAKA,EAAKA,GAAc,EAAIA,EAAKA,EAAKA,EAAa,EAAIA,GACzEiM,GAAcjM,EACdgM,GAAclnB,KAAKunB,QACnBH,GAAcpnB,KAAKgR,EACnBhR,KAAKgR,EAAIhG,CACX,CACAhL,KAAKgR,GAAKoW,GAIhB,GAAC,CAAAvnB,IAAA,SAAAC,MACD,WACE,IAAMwT,EAAStT,KAAKgR,EAEpB,OADAhR,KAAKgR,EAAI,GACFsC,EAAOxR,OAASwR,EAAS,IAClC,KAAC+T,CAAA,CAvD4B,GA0D/B,SAASG,GAAOE,GACd,IAAIrkB,EAAI,EACRrD,KAAKgR,GAAK0W,EAAQ,GAClB,IAAK,IAAMjiB,EAAIiiB,EAAQ5lB,OAAQuB,EAAIoC,IAAKpC,EACtCrD,KAAKgR,GAAKC,UAAU5N,GAAKqkB,EAAQrkB,EAErC,C,IC9DI4kB,GAAIC,GACJ/X,GAAIE,GAAIqV,GACRxV,GAAIE,GAAIuV,GACRC,GAAIC,GAAIC,GACRxI,GAAU6K,GACVlb,GAAIC,GAAIkb,G,iCAERrC,GAAiB,CACnB1d,OAAQd,EACRiB,MAAOwd,GACP5c,UAAW6c,GACX5c,QAAS6c,GACT5c,aAAc,WACZyc,GAAe3c,UAAY+c,GAC3BJ,GAAe1c,QAAU+c,EAC3B,EACA7c,WAAY,WACVwc,GAAe3c,UAAY6c,GAC3BF,GAAe1c,QAAU6c,EAC3B,GAIF,SAASF,GAAcrc,EAAQC,GAC7BD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAE1B6hB,GAAuBte,EAASpD,EAAIgD,GAASI,EAAS/C,EAAI2C,GAAS3C,EAAI4C,GACzE,CAEA,SAASye,GAAuB9iB,EAAGG,EAAGwE,KAClC+d,GACF9X,KAAO5K,EAAI4K,IAAM8X,GACjB5X,KAAO3K,EAAI2K,IAAM4X,GACjBvC,KAAOxb,EAAIwb,IAAMuC,EACnB,CAEA,SAAShC,KACPF,GAAevd,MAAQ8f,EACzB,CAEA,SAASA,GAAuB3e,EAAQC,GACtCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAE1ByG,GAAKlD,EAASpD,EAAIgD,GAClBuD,GAAKnD,EAAS/C,EAAI2C,GAClBye,GAAKphB,EAAI4C,GACTmc,GAAevd,MAAQ+f,GACvBF,GAAuBpb,GAAIC,GAAIkb,GACjC,CAEA,SAASG,GAAkB5e,EAAQC,GACjCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAEtBjB,EAAIwE,EAASpD,EAAIgD,GACjBjE,EAAIqE,EAAS/C,EAAI2C,GACjBO,EAAIlD,EAAI4C,GACRuS,EAAIzV,EAAMS,GAAMgV,EAAIjP,GAAKhD,EAAIke,GAAK1iB,GAAKyW,GAAKA,EAAIiM,GAAK7iB,EAAI0H,GAAK/C,GAAKiS,GAAKA,EAAIlP,GAAKvH,EAAIwH,GAAK3H,GAAK4W,GAAIlP,GAAK1H,EAAI2H,GAAKxH,EAAI0iB,GAAKle,GAC9Hge,IAAM/L,EACNjM,IAAMiM,GAAKlP,IAAMA,GAAK1H,IACtB6K,IAAM+L,GAAKjP,IAAMA,GAAKxH,IACtBigB,IAAMxJ,GAAKiM,IAAMA,GAAKle,IACtBme,GAAuBpb,GAAIC,GAAIkb,GACjC,CAEA,SAASlC,KACPH,GAAevd,MAAQwd,EACzB,CAIA,SAASG,KACPJ,GAAevd,MAAQggB,EACzB,CAEA,SAASpC,KACPqC,GAAkBnL,GAAU6K,IAC5BpC,GAAevd,MAAQwd,EACzB,CAEA,SAASwC,GAAuB7e,EAAQC,GACtC0T,GAAW3T,EAAQwe,GAAQve,EAC3BD,GAAUnD,EAASoD,GAAOpD,EAC1Buf,GAAevd,MAAQigB,GACvB,IAAI1e,EAASpD,EAAIiD,GACjBqD,GAAKlD,EAASpD,EAAIgD,GAClBuD,GAAKnD,EAAS/C,EAAI2C,GAClBye,GAAKphB,EAAI4C,GACTye,GAAuBpb,GAAIC,GAAIkb,GACjC,CAEA,SAASK,GAAkB9e,EAAQC,GACjCD,GAAUnD,EACV,IAAIuD,EAASpD,EADMiD,GAAOpD,GAEtBjB,EAAIwE,EAASpD,EAAIgD,GACjBjE,EAAIqE,EAAS/C,EAAI2C,GACjBO,EAAIlD,EAAI4C,GACR8e,EAAKxb,GAAKhD,EAAIke,GAAK1iB,EACnBijB,EAAKP,GAAK7iB,EAAI0H,GAAK/C,EACnB0e,EAAK3b,GAAKvH,EAAIwH,GAAK3H,EACnB2N,EAAIpM,EAAM4hB,EAAIC,EAAIC,GAClBzM,EAAI9U,EAAK6L,GACTW,EAAIX,IAAMiJ,EAAIjJ,EAClB0S,GAAGzb,IAAI0J,EAAI6U,GACX7C,GAAG1b,IAAI0J,EAAI8U,GACX7C,GAAG3b,IAAI0J,EAAI+U,GACXV,IAAM/L,EACNjM,IAAMiM,GAAKlP,IAAMA,GAAK1H,IACtB6K,IAAM+L,GAAKjP,IAAMA,GAAKxH,IACtBigB,IAAMxJ,GAAKiM,IAAMA,GAAKle,IACtBme,GAAuBpb,GAAIC,GAAIkb,GACjC,CC9GO,IAKH9K,GACA6K,GACAtgB,GACAE,GACAD,GCRAD,GAAS2P,GAAMC,GAASI,GACxBmF,GACAM,GAAU6K,GACVhd,GACA0d,GACAC,GACAjZ,GDPOsV,GAAc,IAAIhgB,EAIzB+f,GAAU,IAAI/f,EAOPigB,GAAa,CACtB5c,MAAOjB,EACP6B,UAAW7B,EACX8B,QAAS9B,EACT+B,aAAc,WACZ6b,GAAc,IAAIhgB,EAClBigB,GAAWhc,UAAYic,GACvBD,GAAW/b,QAAUic,EACvB,EACA/b,WAAY,WACV,IAAIwf,GAAY5D,GAChBD,GAAQ/a,IAAI4e,EAAW,EAAIziB,EAAMyiB,EAAWA,GAC5C/oB,KAAKoJ,UAAYpJ,KAAKqJ,QAAUrJ,KAAKwI,MAAQjB,CAC/C,EACAc,OAAQ,WACN6c,GAAQ/a,IAAI7D,EACd,GAGF,SAAS+e,KACPD,GAAW5c,MAAQgd,EACrB,CAEA,SAASF,KACPG,GAAUnI,GAAU6K,GACtB,CAEA,SAAS3C,GAAe7b,EAAQC,GAC9Bwb,GAAW5c,MAAQid,GACnBnI,GAAW3T,EAAQwe,GAAQve,EAE3B/B,GADA8B,GAAUnD,EACQuB,GAAUpB,EAAIiD,GADbA,GAAOpD,GACkB,EAAIH,GAAYyB,GAAUd,EAAI4C,EAC5E,CAEA,SAAS6b,GAAU9b,EAAQC,GAOzB,IAAIof,GANJrf,GAAUnD,GAMaqB,GACnBohB,EAAWD,GAAW,EAAI,GAAK,EAC/BE,EAAWD,EAAWD,EACtBjf,EAASpD,EARbiD,GADmBA,GAAOpD,GACd,EAAIH,GASZyD,EAAS9C,EAAI4C,GACbkE,EAAIhG,GAAUgC,EACd4W,EAAI3Y,GAAUgC,EAAS+D,EAAInH,EAAIuiB,GAC/BrV,EAAI/F,EAAImb,EAAWjiB,EAAIkiB,GAC3B/D,GAAYhb,IAAIzD,EAAMmN,EAAG6M,IAGzB7Y,GAAU8B,EAAQ5B,GAAUgC,EAAQjC,GAAUgC,CAChD,CAEe,YAAS5B,GAGtB,OAFAgd,GAAU,IAAI/f,EACdsC,EAAOS,EAAQkd,IACE,EAAVF,EACT,CC7DA,IAAIxJ,GAAe,CACjBlT,MAAO2gB,GACP/f,UAAWggB,GACX/f,QAASggB,GACT/f,aAAc,WACZoS,GAAalT,MAAQ8gB,GACrB5N,GAAatS,UAAYmgB,GACzB7N,GAAarS,QAAUmgB,GACvBX,GAAW,IAAI1jB,EACfigB,GAAW9b,cACb,EACAC,WAAY,WACV6b,GAAW7b,aACXmS,GAAalT,MAAQ2gB,GACrBzN,GAAatS,UAAYggB,GACzB1N,GAAarS,QAAUggB,GACnBlE,GAAc,GAAGtd,KAAY4P,GAAU,KAAMD,KAASK,GAAO,KACxDgR,GAAW7iB,EAAS6R,GAAO,GAC3BgR,IAAY7iB,IAASwR,IAAQ,IACtC3H,GAAM,GAAKhI,GAASgI,GAAM,GAAK4H,EACjC,EACApP,OAAQ,WACNR,KAAY4P,GAAU,KAAMD,KAASK,GAAO,GAC9C,GAGF,SAASsR,GAAYxf,EAAQC,GAC3Bkf,GAAO5oB,KAAK2P,GAAQ,CAAChI,GAAU8B,EAAQ8N,GAAU9N,IAC7CC,EAAM4N,KAAMA,GAAO5N,GACnBA,EAAMiO,KAAMA,GAAOjO,EACzB,CAEA,SAAS8Q,GAAU/Q,EAAQC,GACzB,IAAIpE,EAAImP,GAAU,CAAChL,EAASnD,EAASoD,EAAMpD,IAC3C,GAAI2E,GAAI,CACN,IAAIgM,EAAStC,GAAe1J,GAAI3F,GAE5BikB,EAAa5U,GADA,CAACsC,EAAO,IAAKA,EAAO,GAAI,GACGA,GAC5ClC,GAA0BwU,GAC1BA,EAAa/U,GAAU+U,GACvB,IAGIC,EAHA1f,EAAQL,EAASqT,GACjB9V,EAAO8C,EAAQ,EAAI,GAAK,EACxB2f,EAAUF,EAAW,GAAKljB,EAAUW,EAEpC6Q,EAAejS,EAAIkE,GAAS,IAC5B+N,GAAgB7Q,EAAO8V,GAAU2M,GAAWA,EAAUziB,EAAOyC,IAC/D+f,EAAOD,EAAW,GAAKljB,GACZsR,KAAMA,GAAO6R,GACwB3R,GAAgB7Q,EAAO8V,IAA9D2M,GAAWA,EAAU,KAAO,IAAM,MAAiDA,EAAUziB,EAAOyC,IAC7G+f,GAAQD,EAAW,GAAKljB,GACbiR,KAAMA,GAAOkS,IAEpB9f,EAAM4N,KAAMA,GAAO5N,GACnBA,EAAMiO,KAAMA,GAAOjO,IAErBmO,EACEpO,EAASqT,GACP5F,GAAMvP,GAAS8B,GAAUyN,GAAMvP,GAAS4P,MAAUA,GAAU9N,GAE5DyN,GAAMzN,EAAQ8N,IAAWL,GAAMvP,GAAS4P,MAAU5P,GAAU8B,GAG9D8N,IAAW5P,IACT8B,EAAS9B,KAASA,GAAU8B,GAC5BA,EAAS8N,KAASA,GAAU9N,IAE5BA,EAASqT,GACP5F,GAAMvP,GAAS8B,GAAUyN,GAAMvP,GAAS4P,MAAUA,GAAU9N,GAE5DyN,GAAMzN,EAAQ8N,IAAWL,GAAMvP,GAAS4P,MAAU5P,GAAU8B,EAIxE,MACEmf,GAAO5oB,KAAK2P,GAAQ,CAAChI,GAAU8B,EAAQ8N,GAAU9N,IAE/CC,EAAM4N,KAAMA,GAAO5N,GACnBA,EAAMiO,KAAMA,GAAOjO,GACvBuB,GAAK3F,EAAGwX,GAAUrT,CACpB,CAEA,SAASyf,KACP1N,GAAalT,MAAQkS,EACvB,CAEA,SAAS2O,KACPxZ,GAAM,GAAKhI,GAASgI,GAAM,GAAK4H,GAC/BiE,GAAalT,MAAQ2gB,GACrBhe,GAAK,IACP,CAEA,SAASme,GAAgB3f,EAAQC,GAC/B,GAAIuB,GAAI,CACN,IAAInB,EAAQL,EAASqT,GACrB6L,GAAS1e,IAAIrE,EAAIkE,GAAS,IAAMA,GAASA,EAAQ,EAAI,KAAO,KAAOA,EACrE,MACEsT,GAAW3T,EAAQwe,GAAQve,EAE7Bwb,GAAW5c,MAAMmB,EAAQC,GACzB8Q,GAAU/Q,EAAQC,EACpB,CAEA,SAAS2f,KACPnE,GAAWhc,WACb,CAEA,SAASogB,KACPF,GAAgBhM,GAAU6K,IAC1B/C,GAAW/b,UACPvD,EAAI+iB,IAAY7iB,IAAS6B,KAAY4P,GAAU,MACnD5H,GAAM,GAAKhI,GAASgI,GAAM,GAAK4H,GAC/BtM,GAAK,IACP,CAKA,SAASiM,GAAMvP,EAAS4P,GACtB,OAAQA,GAAW5P,GAAW,EAAI4P,EAAU,IAAMA,CACpD,CAEA,SAASmS,GAAaxf,EAAGC,GACvB,OAAOD,EAAE,GAAKC,EAAE,EAClB,CAEA,SAASwf,GAAcha,EAAOtK,GAC5B,OAAOsK,EAAM,IAAMA,EAAM,GAAKA,EAAM,IAAMtK,GAAKA,GAAKsK,EAAM,GAAKtK,EAAIsK,EAAM,IAAMA,EAAM,GAAKtK,CAC5F,CC1HM,SAAUukB,GAAehnB,GAC9B,IAAMujB,EHiGQ,SAASne,GACtB+f,GAAKC,GACL/X,GAAKE,GAAKqV,GACVxV,GAAKE,GAAKuV,GAAK,EACfC,GAAK,IAAIzgB,EACT0gB,GAAK,IAAI1gB,EACT2gB,GAAK,IAAI3gB,EACTsC,EAAOS,EAAQ6d,IAEf,IAAIxgB,GAAKqgB,GACLlgB,GAAKmgB,GACL3b,GAAK4b,GACL5S,EAAIpM,EAAMvB,EAAGG,EAAGwE,GAGpB,OAAIgJ,EAAIjN,IACNV,EAAI2K,GAAIxK,EAAI0K,GAAIlG,EAAIyb,GAEhBuC,GAAKliB,IAAST,EAAI4K,GAAIzK,EAAI2K,GAAInG,EAAIwb,KACtCxS,EAAIpM,EAAMvB,EAAGG,EAAGwE,IAERjE,GAAiB,CAACwS,IAAKA,KAG1B,CAAC/R,EAAMhB,EAAGH,GAAKgB,EAASc,EAAK6C,EAAIgJ,GAAK3M,EAC/C,CG1HkBwjB,CAAYjnB,GAC7B,MAAO,CAAEuI,UAAWgb,EAAS,GAAI/a,SAAU+a,EAAS,GACrD,CAYM,SAAU2D,GAAalnB,GAC5B,IAAM6Y,ED4GQ,SAASvY,GACtB,IAAIC,EAAG0C,EAAGqE,EAAGC,EAAG4f,EAAQC,EAAUlgB,EAOlC,GALA6N,GAAOJ,KAAY5P,GAAU2P,GAAOiE,KACpCqN,GAAS,GACTrhB,EAAOrE,EAASsY,IAGZ3V,EAAI+iB,GAAOhnB,OAAQ,CAIrB,IAHAgnB,GAAO1U,KAAKwV,IAGPvmB,EAAI,EAAkB4mB,EAAS,CAAxB7f,EAAI0e,GAAO,IAAkBzlB,EAAI0C,IAAK1C,EAE5CwmB,GAAczf,GADlBC,EAAIye,GAAOzlB,IACY,KAAOwmB,GAAczf,EAAGC,EAAE,KAC3C+M,GAAMhN,EAAE,GAAIC,EAAE,IAAM+M,GAAMhN,EAAE,GAAIA,EAAE,MAAKA,EAAE,GAAKC,EAAE,IAChD+M,GAAM/M,EAAE,GAAID,EAAE,IAAMgN,GAAMhN,EAAE,GAAIA,EAAE,MAAKA,EAAE,GAAKC,EAAE,KAEpD4f,EAAO/pB,KAAKkK,EAAIC,GAMpB,IAAK6f,GAAW,IAAkC7mB,EAAI,EAAG+G,EAAI6f,EAAlClkB,EAAIkkB,EAAOnoB,OAAS,GAAyBuB,GAAK0C,EAAGqE,EAAIC,IAAKhH,EACvFgH,EAAI4f,EAAO5mB,IACN2G,EAAQoN,GAAMhN,EAAE,GAAIC,EAAE,KAAO6f,IAAUA,EAAWlgB,EAAOnC,GAAUwC,EAAE,GAAIoN,GAAUrN,EAAE,GAE9F,CAIA,OAFA0e,GAASjZ,GAAQ,KAEVhI,KAAY4T,KAAYjE,KAASiE,IAClC,CAAC,CAAChD,IAAKA,KAAM,CAACA,IAAKA,MACnB,CAAC,CAAC5Q,GAAS2P,IAAO,CAACC,GAASI,IACpC,CC/IgBhG,CAAU/O,GAEzB,GAAI6Y,EAAQ,CACX,IAAM9J,EAAY,CAAEC,KAAM6J,EAAO,GAAG,GAAI3J,MAAO2J,EAAO,GAAG,GAAI1J,IAAK0J,EAAO,GAAG,GAAI5J,OAAQ4J,EAAO,GAAG,IAKlG,OAJI9J,EAAUG,MAAQH,EAAUC,OAC/BD,EAAUG,MAAQ,IAClBH,EAAUC,MAAQ,KAEZD,C,CAER,MAAO,CAAEC,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,EAC7C,C,eC8MaoY,GAAS,SAAAC,IAAAhrB,EAAAA,EAAAA,GAAA+qB,EAAAC,GAAA,IAAA/qB,GAAAC,EAAAA,EAAAA,GAAA6qB,GAAtB,SAAAA,IAAA,IAAA5qB,EAgDgC,OAhDhCC,EAAAA,EAAAA,GAAA,KAAA2qB,G,0BASC1qB,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,mB,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,mB,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,S,gDAA0B,IAC1BE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,S,gDAA0B,IAE1BE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,e,gDAAqD,CAAC,IACtDE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,gDAAmC,IACnCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,uB,gDAAwC,IAExCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,oB,iDAAsC,IACtCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,sB,gDAA2D,CAAEsD,KAAM,qBAAsBoG,WAAY,MAErGxJ,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,mB,gDAAkD,OAElDE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,O,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Q,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Q,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Q,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Q,yDAEAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,c,gDAAuB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,MAEpCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,gB,gDAAoC,CAAE8L,UAAW,EAAGC,SAAU,KAC9D7L,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,c,gDAAqF,CAAEuS,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,KAC1HtS,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,gDAAyF,CAAEuS,KAAM,EAAGE,MAAO,EAAGC,IAAK,EAAGF,OAAQ,KAE9HtS,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,mB,iDAAqC,IAErCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Y,yDAEAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,O,yDACAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,O,yDAEAE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,c,iDAAgC,IAEhCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Y,gDAA6B,IAC7BE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,Y,gDAA6B,IAAEA,CA84BhC,CADE,OACDK,EAAAA,EAAAA,GAAAuqB,EAAA,EAAAtqB,IAAA,eAAAC,MA54BU,WACT,IAAM2K,EAAazK,KAAKc,IAAI,cACtBupB,ECvSO,SAAS5f,EAAYkB,GAClC,IAEI2e,EACAC,EAHAjD,EAAS,EACTV,EAAc,IAIlB,SAASyD,EAAKniB,GAKZ,OAJIA,IACyB,oBAAhB0e,GAA4B2D,EAAc3D,aAAaA,EAAYjH,MAAM3f,KAAMiR,YAC1FxJ,EAAOS,EAAQoiB,EAAiBC,KAE3BA,EAAcjX,QACvB,CAqDA,OAnDA+W,EAAK9E,KAAO,SAASrd,GAEnB,OADAT,EAAOS,EAAQoiB,EAAiBE,KACzBA,GAASlX,QAClB,EAEA+W,EAAKI,QAAU,SAASviB,GAEtB,OADAT,EAAOS,EAAQoiB,EAAiBI,KACzBA,GAAYpX,QACrB,EAEA+W,EAAK1O,OAAS,SAASzT,GAErB,OADAT,EAAOS,EAAQoiB,EAAiBK,KACzBA,GAAWrX,QACpB,EAEA+W,EAAKhE,SAAW,SAASne,GAEvB,OADAT,EAAOS,EAAQoiB,EAAiBM,KACzBA,GAAatX,QACtB,EAEA+W,EAAK5f,WAAa,SAASuG,GACzB,OAAKC,UAAUnP,QACfwoB,EAAwB,MAALtZ,GAAavG,EAAa,KAAM+U,KAAa/U,EAAauG,GAAGvJ,OACzE4iB,GAFuB5f,CAGhC,EAEA4f,EAAK1e,QAAU,SAASqF,GACtB,OAAKC,UAAUnP,QACfyoB,EAAqB,MAALvZ,GAAarF,EAAU,KAAM,IAAI0b,GAAWC,IAAW,IAAIZ,GAAY/a,EAAUqF,GACtE,oBAAhB4V,GAA4B2D,EAAc3D,YAAYA,GAC1DyD,GAHuB1e,CAIhC,EAEA0e,EAAKzD,YAAc,SAAS5V,GAC1B,OAAKC,UAAUnP,QACf8kB,EAA2B,oBAAN5V,EAAmBA,GAAKuZ,EAAc3D,aAAa5V,IAAKA,GACtEqZ,GAFuBzD,CAGhC,EAEAyD,EAAK/C,OAAS,SAAStW,GACrB,IAAKC,UAAUnP,OAAQ,OAAOwlB,EAC9B,GAAS,MAALtW,EAAWsW,EAAS,SACnB,CACH,IAAMzZ,EAAIhI,KAAKkB,MAAMiK,GACrB,KAAMnD,GAAK,GAAI,MAAM,IAAI4Z,WAAW,mBAADxiB,OAAoB+L,IACvDsW,EAASzZ,CACX,CAEA,OADgB,OAAZlC,IAAkB4e,EAAgB,IAAIlD,GAAWC,IAC9C+C,CACT,EAEOA,EAAK5f,WAAWA,GAAY6c,OAAOA,GAAQ3b,QAAQA,EAC5D,CDqOef,GACbyf,EAAK5f,WAAWA,GAChBzK,KAAK6qB,cAAc,UAAWR,EAC/B,GAEA,CAAAxqB,IAAA,WAAAC,MAOO,WACN,OAAOE,KAAKgN,OAAOhN,KAAK8qB,gBAAgBC,SAAS,CAAExlB,EAAGvF,KAAK0hB,QAAU,EAAGhc,EAAG1F,KAAK4hB,SAAW,IAC5F,GAEA,CAAA/hB,IAAA,cAAAC,MAGO,WACN,OAAOE,KAAKgrB,YACb,GAEA,CAAAnrB,IAAA,YAAAC,MAGO,WACN,OAAOE,KAAKirB,UACb,GAAC,CAAAprB,IAAA,kBAAAC,MAES,WAAe,IAAAC,EAAA,KAElBsjB,EAASrjB,KAAKc,IAAI,UAClBsiB,EAASpjB,KAAKc,IAAI,UAClBoqB,EAAiBlrB,KAAKkrB,eAEd,QAAV7H,GAA8B,QAAVD,GACnBpjB,KAAKmrB,UACRnrB,KAAKmrB,SAASzb,UAGf1P,KAAKmrB,SAAWD,EAAejnB,OAAO7D,GAAG,SAAS,SAACgrB,GAClD,IAAM5H,EAAczjB,EAAKe,IAAI,eACvB4iB,EAAmB3jB,EAAKe,IAAI,mBAAoB,GAChD2iB,EAAgB1jB,EAAKe,IAAI,gBAAiB,GAE1CuqB,EAAaD,EAAME,cAIzB,GAAIC,GAAAA,GAAoBF,EAAYtrB,GAApC,CACCsrB,EAAWG,iBAMZ,IAAMhjB,EAAQ0iB,EAAexf,SAAS+f,QAAQL,EAAM5iB,OAErC,QAAV4a,EACJrjB,EAAK2rB,iBAAiBL,EAAWM,OAAQnjB,GAEvB,WAAV4a,EACRrjB,EAAK6rB,oBAAoBP,EAAWM,OAAS,EAAIjI,EAAkBD,EAAeD,GAEhE,WAAVJ,GACRrjB,EAAK8rB,oBAAoBR,EAAWM,OAAS,EAAIjI,EAAkBD,EAAeD,GAGpE,QAAVH,EACJtjB,EAAK2rB,iBAAiBL,EAAWS,OAAQtjB,GAEvB,WAAV6a,EACRtjB,EAAK6rB,oBAAoBP,EAAWS,OAAS,EAAIpI,EAAkBD,EAAeD,GAEhE,WAAVH,GACRtjB,EAAK8rB,oBAAoBR,EAAWS,OAAS,EAAIpI,EAAkBD,EAAeD,E,CAGpF,IAEAxjB,KAAK+rB,WAAW7rB,KAAKF,KAAKmrB,WAGtBnrB,KAAKmrB,UACRnrB,KAAKmrB,SAASzb,SAGjB,GAAC,CAAA7P,IAAA,mBAAAC,MAEM,WAAgB,IAAAoB,EAAA,MACtBR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwpB,EAAAvpB,WAAA,yBAAAC,KAAA,MAEA,IAAM4J,EAAazK,KAAKc,IAAI,cACtBqb,EAAInc,KAAKgsB,aACT5P,EAAIpc,KAAKisB,cAETC,EAAqBlsB,KAAKmsB,mBAAmBljB,WAEnD,GAAIjJ,KAAKqB,QAAQ,cAAe,CAC/BrB,KAAKosB,eACLpsB,KAAKkP,sBACLlP,KAAKqsB,UAEL5hB,EAAWsR,MAAM/b,KAAKyE,WAAW,YAAczE,KAAKc,IAAI,YAAa,IACjE2J,EAAWqU,QACdrU,EAAWqU,OAAO,CAAC9e,KAAKc,IAAI,YAAa,GAAId,KAAKc,IAAI,YAAa,GAAId,KAAKc,IAAI,YAAa,KAG9F,IAAI4U,EAAO1V,KAAKO,cAAckK,WAC9B,GAAIiL,GAAQA,GAAQjL,EAAY,CAC/B,IAAI6hB,EAAKnQ,EAAI,EACToQ,EAAKnQ,EAAI,EACb,GAAI1G,EAAK1I,OAAQ,CAChB,IAAIwf,EAAiB9W,EAAK1I,OAAO,CAACsf,EAAIC,IAEtC,GAAIC,EAAgB,CAEnB,IAAIC,EAAKhiB,EAAW+hB,GACpB,GAAIC,EAAI,CACP,IAAIzQ,EAAYvR,EAAWuR,YAEvB0Q,EAAKJ,GAAOG,EAAG,GAAKzQ,EAAU,IAC9B2Q,EAAKJ,GAAOE,EAAG,GAAKzQ,EAAU,IAElCvR,EAAWuR,UAAU,CAAC0Q,EAAIC,IAE1B3sB,KAAKyP,OAAO,aAAcid,GAC1B1sB,KAAKyP,OAAO,aAAckd,E,KAqB/B,IAdI3sB,KAAKqB,QAAQ,WAAarB,KAAKqB,QAAQ,YAC1CrB,KAAK4sB,kBAEF5sB,KAAK6sB,mBACR7sB,KAAKmsB,mBAAmBljB,WAAa,GAErCjJ,KAAK0E,OAAOooB,MAAK,SAACpoB,GACjBjD,EAAAA,GAAeP,EAAKirB,mBAAmBljB,WAAYvE,EAAOC,YAC3D,IAGA3E,KAAKqsB,WAG2B,GAA7BH,EAAmBpqB,SAAgBqa,GAAKnc,KAAK+sB,KAAO3Q,GAAKpc,KAAKgtB,KAAOhtB,KAAK6sB,mBACzE1Q,EAAI,GAAKC,EAAI,EAAG,CACnB,IAAIkQ,EAAKnQ,EAAI,EACToQ,EAAKnQ,EAAI,EAEb3R,EAAW8W,QAAQ,CAACpF,EAAGC,GAAIpc,KAAKmsB,oBAChC,IAAMc,EAAWxiB,EAAWsR,QAK5B,GAHA/b,KAAK6qB,cAAc,WAAYoC,GAC/BxiB,EAAWsR,MAAMkR,EAAWjtB,KAAKc,IAAI,YAAa,IAE9Cd,KAAKwB,gBAAiB,CACzB,IAAIirB,EAAKhiB,EAAWzK,KAAKwB,iBACzB,GAAIirB,EAAI,CACP,IAAIzQ,EAAYvR,EAAWuR,YAEvB0Q,EAAKJ,GAAOG,EAAG,GAAKzQ,EAAU,IAC9B2Q,EAAKJ,GAAOE,EAAG,GAAKzQ,EAAU,IAElCvR,EAAWuR,UAAU,CAAC0Q,EAAIC,IAE1B3sB,KAAKyP,OAAO,aAAcid,GAC1B1sB,KAAKyP,OAAO,aAAckd,GAE1B3sB,KAAKktB,SAAWlR,EAAU,GAC1Bhc,KAAKmtB,SAAWnR,EAAU,E,EAI5Bhc,KAAKkP,sBAEL,IAAMtE,EAAU5K,KAAKyE,WAAW,WAChCzE,KAAKotB,WAAaxiB,EAAQ+Q,OAAO3b,KAAKmsB,mB,CAOxC,GAHAnsB,KAAK+sB,IAAM5Q,EACXnc,KAAKgtB,IAAM5Q,EAEPpc,KAAKqB,QAAQ,eAAgB,CAChC,IAAMf,EAAWN,KAAKO,cAAc8sB,YAC9BA,EAAcrtB,KAAKc,IAAI,eACzBusB,IAAgB/sB,IACnBN,KAAKstB,iBAAiB,eAClBhtB,GACHA,EAASoP,UAEN2d,IACHA,EAAYhe,WAAW,QAASrP,MAChCA,KAAKsE,SAASpE,KAAKmtB,IAGpBrtB,KAAKyP,OAAO,cAAe4d,G,CAIzBrtB,KAAKqB,QAAQ,eAChBoJ,EAAWsR,MAAM/b,KAAKyE,WAAW,YAAczE,KAAKc,IAAI,YAAa,IACrEd,KAAKkP,sBAELlP,KAAK0E,OAAOooB,MAAK,SAACpoB,GACbA,EAAO6oB,OAAuB,mBAC7B7oB,EAAO5D,IAAI,cACdW,EAAAA,GAAYiD,EAAOxC,WAAW,SAACP,GAC9B,IAAM6rB,EAAU7rB,EAAS6rB,QACrBA,GACH/rB,EAAAA,GAAY+rB,GAAS,SAACC,GACrB,IAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAO9pB,IAAI,QAAS1C,EAAKJ,IAAI,aAE/B,GAEF,GAGH,MAGGd,KAAKqB,QAAQ,eAAiBrB,KAAKqB,QAAQ,iBAC9CoJ,EAAWuR,UAAU,CAAChc,KAAKc,IAAI,aAAcd,KAAK0hB,QAAU,GAAI1hB,KAAKc,IAAI,aAAcd,KAAK4hB,SAAW,KACvG5hB,KAAKkP,uBAGFzE,EAAWqU,SACV9e,KAAKqB,QAAQ,cAAgBrB,KAAKqB,QAAQ,cAAgBrB,KAAKqB,QAAQ,gBAC1EoJ,EAAWqU,OAAO,CAAC9e,KAAKc,IAAI,YAAa,GAAId,KAAKc,IAAI,YAAa,GAAId,KAAKc,IAAI,YAAa,KAC7Fd,KAAKkP,wBAIHlP,KAAKqB,QAAQ,cAAgBrB,KAAKc,IAAI,SAAWd,KAAKc,IAAI,UAC7Dd,KAAK2tB,aAEP,GAAC,CAAA9tB,IAAA,UAAAC,MAGS,WACT,IAAM2K,EAAazK,KAAKc,IAAI,cAExBqb,EAAInc,KAAKgsB,aACT5P,EAAIpc,KAAKisB,cAEb,GAAI9P,EAAI,GAAKC,EAAI,EAAG,CACnB3R,EAAW8W,QAAQ,CAACpF,EAAGC,GAAIpc,KAAKmsB,oBAChCnsB,KAAK6qB,cAAc,WAAYpgB,EAAWsR,SAE1C,IAAMC,EAAYvR,EAAWuR,YAE7Bhc,KAAKyP,OAAO,aAAcuM,EAAU,IACpChc,KAAKyP,OAAO,aAAcuM,EAAU,IAEpChc,KAAKktB,SAAWlR,EAAU,GAC1Bhc,KAAKmtB,SAAWnR,EAAU,GAE1B,IAAMpR,EAAU5K,KAAKyE,WAAW,WAChCzE,KAAKotB,WAAaxiB,EAAQ+Q,OAAO3b,KAAKmsB,oBAEtCnsB,KAAKgrB,aAAe4C,GAAyB5tB,KAAKmsB,oBAElD,IAAMxQ,EAASiS,GAAuB5tB,KAAKmsB,oBAG3C,GAFAnsB,KAAKirB,WAAatP,EAEd3b,KAAKmsB,mBAAmBljB,WAAWnH,OAAS,EAAG,CAElD6Z,EAAO7J,KAAO+b,GAAAA,GAAY7tB,KAAKirB,WAAWnZ,KAAM,GAChD6J,EAAO3J,MAAQ6b,GAAAA,GAAY7tB,KAAKirB,WAAWjZ,MAAO,GAClD2J,EAAO1J,IAAM4b,GAAAA,GAAY7tB,KAAKirB,WAAWhZ,IAAK,GAC9C0J,EAAO5J,OAAS8b,GAAAA,GAAY7tB,KAAKirB,WAAWlZ,OAAQ,GAEpD,IAAM+b,EAAgB9tB,KAAK+tB,eAEvBD,IAAkBvC,GAAAA,GAAkB5P,EAAQmS,KAC/C9tB,KAAKguB,iBAAkB,EACvBhuB,KAAK+tB,eAAiBpS,E,CAIxB3b,KAAKiuB,YAAa,C,CAEpB,GAEA,CAAApuB,IAAA,eAAAC,MAIO,WACN,IAAIouB,EAAeluB,KAAKc,IAAI,gBAC5B,IAAKotB,EAAc,CAClB,IACMvS,EADU3b,KAAKyE,WAAW,WACTkX,OAAO3b,KAAKmsB,oBAE7Bra,EAAO6J,EAAO,GAAG,GACjB1J,EAAM0J,EAAO,GAAG,GAEhB3J,EAAQ2J,EAAO,GAAG,GAClB5J,EAAS4J,EAAO,GAAG,GAEzBuS,EAAeluB,KAAKgN,OAAO,CAAEzH,EAAGuM,GAAQE,EAAQF,GAAQ,EAAGpM,EAAGuM,GAAOF,EAASE,GAAO,G,CAEtF,OAAOic,CACR,GAEA,CAAAruB,IAAA,SAAAC,MAMO,SAAOquB,GACbnuB,KAAKouB,eAAepuB,KAAKkuB,eAAgBluB,KAAKc,IAAI,gBAAiB,IAAI,EAAMqtB,EAAUnuB,KAAKc,IAAI,iBAAkBd,KAAKc,IAAI,iBAC5H,GAAC,CAAAjB,IAAA,kBAAAC,MAEM,WACN,IAAM2K,EAAazK,KAAKc,IAAI,cAC5B,GAAI2J,EAAWuC,OAAQ,CACtB,IAAImP,EAAInc,KAAKgsB,aACT5P,EAAIpc,KAAKisB,cACT9P,EAAI,GAAKC,EAAI,IAChBpc,KAAKwB,gBAAkBiJ,EAAWuC,OAAO,CAAChN,KAAKgsB,aAAe,EAAGhsB,KAAKisB,cAAgB,I,EAGxFvrB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwpB,EAAAvpB,WAAA,wBAAAC,KAAA,KACD,GAAC,CAAAhB,IAAA,gBAAAC,MAEM,WAEN,IADAY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwpB,EAAAvpB,WAAA,sBAAAC,KAAA,MACIb,KAAKguB,gBAAiB,CACzBhuB,KAAKguB,iBAAkB,EACvB,IAAMnrB,EAAO,mBACT7C,KAAKiE,OAAOC,UAAUrB,IACzB7C,KAAKiE,OAAOE,SAAStB,EAAM,CAAEA,KAAMA,EAAMuB,OAAQpE,M,CAGpD,GAAC,CAAAH,IAAA,cAAAC,MAES,WACJE,KAAKkrB,eAAexf,SAAS2iB,cACjCruB,KAAKkrB,eAAexf,SAAS2iB,eAAeruB,KAAKc,IAAI,cAAgBd,KAAKc,IAAI,SAAWd,KAAKc,IAAI,SAEpG,GAGA,CAAAjB,IAAA,sBAAAC,MAGO,WACNE,KAAK6sB,kBAAmB,EACxB7sB,KAAK4L,WACN,GAEA,CAAA/L,IAAA,sBAAAC,MAGO,WACNE,KAAK0E,OAAOooB,MAAK,SAACpoB,GACjBA,EAAOwK,qBACR,GACD,GAAC,CAAArP,IAAA,YAAAC,MAES,WAAS,IAAA6C,EAAA,KAClB3C,KAAKsuB,eAAepuB,KAAKgiB,GAAqBxT,IAAI1O,KAAK4O,QACvD5O,KAAKuuB,UAAUC,UAAYjD,GAAAA,GAAiBvrB,KAAKuuB,UAAUC,UAAW,CAAC,QAEvExuB,KAAKsE,SAASpE,KAAKF,KAAKwE,mBAExB9D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwpB,EAAAvpB,WAAA,kBAAAC,KAAA,MAEAb,KAAKosB,eAELpsB,KAAKkrB,eAAe5mB,SAASpE,KAAKF,KAAK8qB,iBAET,MAA1B9qB,KAAKc,IAAI,eACZd,KAAK4D,IAAI,aAAc5D,KAAK0hB,QAAU,GAET,MAA1B1hB,KAAKc,IAAI,eACZd,KAAK4D,IAAI,aAAc5D,KAAK4hB,SAAW,GAKxC5hB,KAAKkrB,eAAetnB,IAAI,eAAe,GACvC5D,KAAKkrB,eAAetnB,IAAI,uBAAuB,GAC/C5D,KAAKkrB,eAAetnB,IAAI,aAAc6qB,GAAAA,EAAU/f,IAAI1O,KAAK4O,MAAO,CAC/D4f,UAAW,CAAC,MAAO,cACnBE,KAAMC,GAAAA,GAAMC,QAAQ,GACpBxK,YAAa,KAGdpkB,KAAK+rB,WAAW7rB,KAAKF,KAAKkrB,eAAejnB,OAAO7D,GAAG,eAAe,SAACgrB,GAClEzoB,EAAKksB,iBAAiBzD,EACvB,KAEAprB,KAAK+rB,WAAW7rB,KAAKF,KAAKkrB,eAAejnB,OAAO7D,GAAG,mBAAmB,SAACgrB,GACtEzoB,EAAKmsB,eAAe1D,EACrB,KAEAprB,KAAK+rB,WAAW7rB,KAAKF,KAAKkrB,eAAejnB,OAAO7D,GAAG,qBAAqB,SAACgrB,GACxEzoB,EAAKosB,iBAAiB3D,EACvB,KAGA,IADA,IAAI4D,GAAU,EACL3rB,EAAI,EAAGA,EAAI4rB,GAAAA,GAASC,SAASptB,OAAQuB,IACzC4rB,GAAAA,GAASC,SAAS7rB,GAAG8rB,MAAM,iBAC9BH,GAAU,GAGPA,GACJhvB,KAAK4O,MAAMwgB,gBAGZpvB,KAAK2tB,aAEN,GAAC,CAAA9tB,IAAA,mBAAAC,MAES,SAAiBsrB,GAE1BprB,KAAKqvB,eAAiBrvB,KAAKc,IAAI,YAAa,GAE5C,IAAIwuB,EAAQvrB,EAAAA,GAAa/D,KAAKkrB,eAAeqE,aAAaztB,OAC1D,GAAa,GAATwtB,EAAY,CAEf,IAAME,EAAYxvB,KAAKkrB,eAAeqE,YAAY,GAE9CC,GAAcA,EAAUjqB,GAAK6lB,EAAM5iB,MAAMjD,GAAKiqB,EAAU9pB,GAAK0lB,EAAM5iB,MAAM9C,IAC5E4pB,EAAQ,E,CAIV,GAAIA,EAAQ,EAAG,CACdtvB,KAAKyvB,gBAAkBzvB,KAAKc,IAAI,cAChCd,KAAK0vB,gBAAkB1vB,KAAKc,IAAI,cAChCd,KAAK2vB,eAAiB3vB,KAAKc,IAAI,aAC/Bd,KAAK4vB,eAAiB5vB,KAAKc,IAAI,aAC/Bd,KAAK6vB,eAAiB7vB,KAAKc,IAAI,aAE/B,IAAMgvB,EAAS9vB,KAAKkrB,eAAe6E,kBACnC,GAAID,EAAQ,CACX,IAAIE,EAAYhwB,KAAKiwB,YAAYH,GAC7BE,IACHhwB,KAAKkrB,eAAeqE,YAAYO,GAAUE,E,OAIxC,GAAa,GAATV,EAAY,CACpB,IAAIY,EAAKlwB,KAAKkrB,eAAepqB,IAAI,cAKjC,GAJIovB,GACHA,EAAGjsB,OAAOksB,WAAW,SAGlBnwB,KAAKc,IAAI,SAAWd,KAAKc,IAAI,QAAS,CAErCd,KAAKowB,KACRpwB,KAAKowB,IAAIla,OAENlW,KAAKqwB,MACRrwB,KAAKqwB,KAAKna,OAEPlW,KAAKswB,MACRtwB,KAAKswB,KAAKpa,OAEPlW,KAAKuwB,MACRvwB,KAAKuwB,KAAKra,OAEPlW,KAAKwwB,MACRxwB,KAAKwwB,KAAKta,OAGX,IAAMsZ,EAAYxvB,KAAKkrB,eAAexf,SAAS+f,QAAQL,EAAM5iB,OAC7DxI,KAAKyvB,gBAAkBzvB,KAAKc,IAAI,cAChCd,KAAK0vB,gBAAkB1vB,KAAKc,IAAI,cAChCd,KAAK2vB,eAAiB3vB,KAAKc,IAAI,aAC/Bd,KAAK4vB,eAAiB5vB,KAAKc,IAAI,aAC/Bd,KAAK6vB,eAAiB7vB,KAAKc,IAAI,aAE/B,IAAI2J,EAAazK,KAAKc,IAAI,cAE1B,GAAI2J,EAAWuC,OAAQ,CACtB,IAAIyjB,EAAKhmB,EAAWuC,OAAO,CAACwiB,EAAUjqB,EAAGiqB,EAAU9pB,IAC/CgrB,EAAKjmB,EAAWuC,OAAO,CAACwiB,EAAUjqB,EAAI,EAAGiqB,EAAU9pB,EAAI,IACvD+qB,GAAMC,IACT1wB,KAAK2wB,MAAQ9qB,KAAKC,IAAI4qB,EAAG,GAAKD,EAAG,IACjCzwB,KAAK4wB,MAAQ/qB,KAAKC,IAAI4qB,EAAG,GAAKD,EAAG,I,GAKtC,GAEA,CAAA5wB,IAAA,SAAAC,MAOO,SAAO0I,GACb,IAAIiC,EAAazK,KAAKc,IAAI,cAE1B,GAAI2J,EAAWuC,OAAQ,CACtB,IAAM6jB,EAAKpmB,EAAWuC,OAAO,CAACxE,EAAMjD,EAAGiD,EAAM9C,IAC7C,GAAImrB,EACH,MAAO,CAAExlB,UAAWwlB,EAAG,GAAIvlB,SAAUulB,EAAG,G,CAI1C,MAAO,CAAExlB,UAAW,EAAGC,SAAU,EAClC,GAEA,CAAAzL,IAAA,UAAAC,MASO,SAAQ0I,EAAkBua,EAAoBC,GACpD,IACIyJ,EADAhiB,EAAazK,KAAKc,IAAI,cAQ1B,GALK2J,EAAWqU,SACfiE,OAAYhiB,EACZiiB,OAAYjiB,GAGI,MAAbgiB,GAAkC,MAAbC,EAAmB,CAC1B,MAAbD,IACHA,EAAY,GAEI,MAAbC,IACHA,EAAY,GAEb,IAAIpQ,EAAWnI,EAAWqU,SAC1BrU,EAAWqU,OAAO,CAACiE,EAAWC,EAAW,IACzCyJ,EAAKhiB,EAAW,CAACjC,EAAM6C,UAAW7C,EAAM8C,WACxCb,EAAWqU,OAAOlM,E,MAGlB6Z,EAAKhiB,EAAW,CAACjC,EAAM6C,UAAW7C,EAAM8C,WAGzC,OAAImhB,EACI,CAAElnB,EAAGknB,EAAG,GAAI/mB,EAAG+mB,EAAG,IAGnB,CAAElnB,EAAG,EAAGG,EAAG,EACnB,GAAC,CAAA7F,IAAA,iBAAAC,MAES,SAAegxB,GACxB9wB,KAAKkrB,eAAeqE,YAAc,CAAC,CACpC,GAAC,CAAA1vB,IAAA,eAAAC,MAES,WAAY,IAAAixB,EAAA,KACf7F,EAAiBlrB,KAAKkrB,eACxB7nB,EAAI,EACJ2tB,EAA4B,GAC5BC,EAA4B,GAWhC,GATAltB,EAAAA,GAAamnB,EAAeqE,aAAa,SAACzhB,EAAGtF,GAC5CwoB,EAAW3tB,GAAKmF,EAChB,IAAIwnB,EAAYe,EAAKd,YAAYniB,GAC7BkiB,IACHiB,EAAW5tB,GAAK2sB,GAEjB3sB,GACD,IAEI2tB,EAAWlvB,OAAS,GAAKmvB,EAAWnvB,OAAS,EAAG,CACnD,IAAMiJ,EAAUmgB,EAAexf,SAE3BwlB,EAAaF,EAAW,GACxBG,EAAaH,EAAW,GAExBI,EAAaH,EAAW,GACxBI,EAAaJ,EAAW,GAE5B,GAAIC,GAAcC,GAAcC,GAAcC,EAAY,CAEzDH,EAAanmB,EAAQ0gB,QAAQyF,GAC7BC,EAAapmB,EAAQ0gB,QAAQ0F,GAE7BC,EAAarmB,EAAQ0gB,QAAQ2F,GAC7BC,EAAatmB,EAAQ0gB,QAAQ4F,GAE7B,IAAIC,EAAkBzrB,KAAKiB,MAAMqqB,EAAW5rB,EAAI2rB,EAAW3rB,EAAG4rB,EAAWzrB,EAAIwrB,EAAWxrB,GAGpF6rB,EAFkB1rB,KAAKiB,MAAMuqB,EAAW9rB,EAAI6rB,EAAW7rB,EAAG8rB,EAAW3rB,EAAI0rB,EAAW1rB,GAE1D4rB,EAAkBtxB,KAAKqvB,eACrDkC,EAAQ1D,GAAAA,GAAiB0D,EAAOvxB,KAAKc,IAAI,eAAgB,GAAId,KAAKc,IAAI,eAAgB,KAEtF,IAAI0wB,EAAa,CAAEjsB,EAAG6rB,EAAW7rB,GAAK8rB,EAAW9rB,EAAI6rB,EAAW7rB,GAAK,EAAGG,EAAG0rB,EAAW1rB,GAAK2rB,EAAW3rB,EAAI0rB,EAAW1rB,GAAK,GACtH+rB,EAAa,CAAElsB,EAAG2rB,EAAW3rB,GAAK4rB,EAAW5rB,EAAI2rB,EAAW3rB,GAAK,EAAGG,EAAGwrB,EAAWxrB,GAAKyrB,EAAWzrB,EAAIwrB,EAAWxrB,GAAK,GAEtHgsB,EAAK1xB,KAAKyvB,iBAAmB,EAC7BkC,EAAK3xB,KAAK0vB,iBAAmB,EAE7B5M,EAAY9iB,KAAKqvB,eAEjB3C,EAAK8E,EAAWjsB,IAAOmsB,EAAKD,EAAWlsB,GAAKud,EAAYyO,EACxD5E,EAAK6E,EAAW9rB,IAAOisB,EAAKF,EAAW/rB,GAAKod,EAAYyO,EAE5DvxB,KAAK4D,IAAI,YAAa2tB,GACtBvxB,KAAK4D,IAAI,aAAc8oB,GACvB1sB,KAAK4D,IAAI,aAAc+oB,E,EAG1B,GAAC,CAAA9sB,IAAA,mBAAAC,MAES,SAAiBsrB,GAC1B,IAAMF,EAAiBlrB,KAAKkrB,eACxBsE,EAAYtE,EAAe0G,gBACzBC,EAAc3G,EAAe6E,kBAG7B+B,EAFgB1G,EAAME,cAEIwG,UAEhC,GAAI9xB,KAAKc,IAAI,cACRgxB,IACH9xB,KAAKiwB,YAAY6B,GAAa1G,EAAM5iB,MAEhCzE,EAAAA,GAAamnB,EAAeqE,aAAaztB,OAAS,GACrD9B,KAAK+xB,oBAMR,KAAIF,IAAeC,GAAaA,GAAaD,IAIxCrC,EAAW,CACd,IAAM9M,EAAO1iB,KAAKc,IAAI,QAChB6hB,EAAO3iB,KAAKc,IAAI,QACtB,GAAY,QAAR4hB,GAA0B,QAARC,EAAgB,CACrC,IAAM5X,EAAUmgB,EAAexf,SAC3BsmB,EAAQjnB,EAAQ0gB,QAAQL,EAAM5iB,OAClCgnB,EAAYzkB,EAAQ0gB,QAAQ+D,GAE5B,IAAIjqB,EAAIvF,KAAKyvB,gBACT/pB,EAAI1F,KAAK0vB,gBAEb,GAAI7pB,KAAKiB,MAAM0oB,EAAUjqB,EAAIysB,EAAMzsB,EAAGiqB,EAAU9pB,EAAIssB,EAAMtsB,GAAK,EAAG,CACjE,IAAIwqB,EAAKhF,EAAepqB,IAAI,cAK5B,GAJIovB,GACHA,EAAGjsB,OAAOguB,YAAY,SAGnBlmB,EAAAA,GAAexG,IAAMwG,EAAAA,GAAerG,GAAI,CAC3C,IAAI+E,EAAazK,KAAKc,IAAI,cACpBgiB,EAAY9iB,KAAKc,IAAI,YAAa,GAElC6iB,EAAY3jB,KAAKc,IAAI,YAAa,IAClC6a,EAAS3b,KAAKotB,WAEdjR,EAAInc,KAAK0hB,QACTtF,EAAIpc,KAAK4hB,SAETsQ,EAAKvW,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9B4Q,EAAK5Q,EAAO,GAAG,GAAKA,EAAO,GAAG,GAEpC,GAAY,cAAR+G,EAAsB,CACzBnd,GAAKysB,EAAMzsB,EAAIiqB,EAAUjqB,EAEzB,IAAMmjB,EAAKvM,EAAI,GAAKA,EAAI,EAAInc,KAAKktB,UAAYpK,EAC7Cvd,EAAIM,KAAKoV,IAAI1V,EAAGmjB,EAAKwJ,EAAKvO,EAAYb,GACtCvd,EAAIM,KAAKmV,IAAIzV,EAAGmjB,EAAKwJ,EAAKvO,EAAYb,E,CAGvC,GAAY,cAARH,EAAsB,CACzBjd,GAAKssB,EAAMtsB,EAAI8pB,EAAU9pB,EACzB,IAAMijB,EAAKvM,EAAI,GAAKA,EAAI,EAAIpc,KAAKmtB,UAAYrK,EAC7Cpd,EAAIG,KAAKoV,IAAIvV,EAAGijB,EAAK4D,EAAK5I,EAAYb,GACtCpd,EAAIG,KAAKmV,IAAItV,EAAGijB,EAAK4D,EAAK5I,EAAYb,E,CAMvC,GAHA9iB,KAAK4D,IAAI,aAAc2B,GACvBvF,KAAK4D,IAAI,aAAc8B,GAEnB+E,EAAWuC,OAAQ,CACtB,IAAImlB,EAAe1nB,EAAWuC,OAAO,CAACwiB,EAAUjqB,EAAGiqB,EAAU9pB,IACzDmH,UAAYslB,IACH,WAARzP,GACH1iB,KAAK4D,IAAI,YAAa5D,KAAK2vB,gBAAmBH,EAAUjqB,EAAIysB,EAAMzsB,GAAKvF,KAAK2wB,OAEjE,WAARhO,GACH3iB,KAAK4D,IAAI,YAAa5D,KAAK4vB,gBAAmBJ,EAAU9pB,EAAIssB,EAAMtsB,GAAK1F,KAAK4wB,O,KASrF,GAAC,CAAA/wB,IAAA,sBAAAC,MAES,SAAoBkK,EAAemkB,EAAkBiE,GAC9DpyB,KAAKwwB,KAAOxwB,KAAKqyB,QAAQ,CAAExyB,IAAK,YAAaiZ,GAAI9Y,KAAKc,IAAI,YAAa,GAAKkJ,EAAOmkB,SAAUA,EAAUiE,OAAQA,GAChH,GAAC,CAAAvyB,IAAA,sBAAAC,MAES,SAAoBkK,EAAemkB,EAAkBiE,GAC9DpyB,KAAKuwB,KAAOvwB,KAAKqyB,QAAQ,CAAExyB,IAAK,YAAaiZ,GAAI9Y,KAAKc,IAAI,YAAa,GAAKkJ,EAAOmkB,SAAUA,EAAUiE,OAAQA,GAChH,GAAC,CAAAvyB,IAAA,mBAAAC,MAES,SAAiBkK,EAAexB,GACzC,IAAI4I,EAAOpR,KAAKc,IAAI,WAAY,GAC5BgiB,EAAY9iB,KAAKc,IAAI,YAAa,GAClCwxB,EAAexP,EACf9Y,EAAQ,EACXsoB,EAAexP,EAAY1R,EAEnBpH,EAAQ,IAChBsoB,EAAexP,EAAY1R,GAGxBkhB,GAAgBxP,GACnB9iB,KAAKuyB,YAAY/pB,EAAO8pB,EAE1B,GAEA,CAAAzyB,IAAA,kBAAAC,MAQO,SAAgB+R,EAAyEsc,EAAmBpL,EAAoBC,GAClInR,EAAUG,MAAQH,EAAUC,OAC/BD,EAAUG,MAAQ,IAClBH,EAAUC,MAAQ,KAGnB,IACM0gB,EADUxyB,KAAKyE,WAAW,WACNkX,OAAO3b,KAAKmsB,oBAElChhB,EAAKnL,KAAKoL,QAAQ,CAAEC,UAAWwG,EAAUC,KAAMxG,SAAUuG,EAAUI,KAAO8Q,EAAWC,GACrFjW,EAAK/M,KAAKoL,QAAQ,CAAEC,UAAWwG,EAAUG,MAAO1G,SAAUuG,EAAUE,QAAUgR,EAAWC,GAEzF7X,EAAGzF,EAAI8sB,EAAU,GAAG,KACvBrnB,EAAGzF,EAAI8sB,EAAU,GAAG,IAGjBzlB,EAAGrH,EAAI8sB,EAAU,GAAG,KACvBzlB,EAAGrH,EAAI8sB,EAAU,GAAG,IAGrB,IAAIC,EAAKzyB,KAAKc,IAAI,YAAa,GAE3B6a,EAAiBxQ,EAAG5F,EAApBoW,EAA8B5O,EAAGxH,EAAjCoW,EAAyCxQ,EAAGzF,EAA5CiW,EAAuD5O,EAAGrH,EAE1DolB,EAAkB9qB,KAAK8qB,gBAEvBhI,EAAY,GAAKjd,KAAKoV,IAAI6P,EAAgBkB,cAAgBrQ,EAAeA,GAAe8W,EAAI3H,EAAgBmB,eAAiBtQ,EAAgBA,GAAc8W,GAC3JltB,EAAIoW,GAAeA,EAAeA,GAAe,EACjDjW,EAAIiW,GAAcA,EAAgBA,GAAc,EAEhD1P,EAAWjM,KAAKgN,OAAO,CAAEzH,EAAAA,EAAGG,EAAAA,IAMhC,OAJiB,MAAbqd,GAAkC,MAAbC,GACxBhjB,KAAK8e,OAAOiE,EAAWC,GAGjBhjB,KAAKouB,eAAeniB,EAAU6W,GAAW,EAAMqL,EACvD,GAEA,CAAAtuB,IAAA,cAAAC,MAQO,SAAY0I,EAAe+oB,EAAe7R,EAAkByO,GAC9DoD,IACHA,EAAQ1D,GAAAA,GAAiB0D,EAAOvxB,KAAKc,IAAI,eAAgB,GAAId,KAAKc,IAAI,eAAgB,MAGlFiL,EAAAA,GAAeoiB,KACnBA,EAAWnuB,KAAKc,IAAI,oBAAqB,IAE1C,IAAMsxB,EAASpyB,KAAKc,IAAI,mBAClBgiB,EAAY9iB,KAAKc,IAAI,YAAa,GAEpCd,KAAKc,IAAI,uBAAyBywB,GAASvxB,KAAKc,IAAI,gBAAiB,KACxE0H,EAAQxI,KAAKoL,QAAQpL,KAAKkuB,gBAC1BxO,GAAS,GAGV,IAAIna,EAAIiD,EAAMjD,EACVG,EAAI8C,EAAM9C,EAEVgsB,EAAK1xB,KAAKc,IAAI,aAAc,GAC5B6wB,EAAK3xB,KAAKc,IAAI,aAAc,GAE5B4nB,EAAKnjB,EACLojB,EAAKjjB,EAELga,IACHgJ,EAAK1oB,KAAK0hB,QAAU,EACpBiH,EAAK3oB,KAAK4hB,SAAW,GAGtB,IAAI8K,EAAKhE,GAAOnjB,EAAImsB,GAAM5O,EAAYyO,EAClC5E,EAAKhE,GAAOjjB,EAAIisB,GAAM7O,EAAYyO,EAWtC,OARAvxB,KAAKqwB,KAAOrwB,KAAKqyB,QAAQ,CAAExyB,IAAK,aAAciZ,GAAI4T,EAAIyB,SAAUA,EAAUiE,OAAQA,IAClFpyB,KAAKswB,KAAOtwB,KAAKqyB,QAAQ,CAAExyB,IAAK,aAAciZ,GAAI6T,EAAIwB,SAAUA,EAAUiE,OAAQA,IAClFpyB,KAAKowB,IAAMpwB,KAAKqyB,QAAQ,CAAExyB,IAAK,YAAaiZ,GAAIyY,EAAOpD,SAAUA,EAAUiE,OAAQA,IAE/EtP,GAAayO,GAChBvxB,KAAK4O,MAAM8jB,YAAY1yB,KAAK2yB,GAAG,2BAA4B3yB,KAAK4O,MAAMgkB,OAAQ7mB,EAAAA,GAAqBwlB,KAG7FvxB,KAAKowB,GACb,GAEA,CAAAvwB,IAAA,iBAAAC,MAWO,SAAemM,EAAqBslB,EAAe7R,EAAkByO,EAAmBpL,EAAoBC,GAElH,IAAIyJ,EAAKzsB,KAAKoL,QAAQa,EAAU8W,EAAWC,GAM3C,GAJiB,MAAbD,GAAkC,MAAbC,GACxBhjB,KAAK8e,OAAOiE,EAAWC,EAAWmL,GAG/B1B,EACH,OAAOzsB,KAAKuyB,YAAY9F,EAAI8E,EAAO7R,EAAQyO,EAE7C,GAAC,CAAAtuB,IAAA,SAAAC,MAEM,SAAOijB,EAAoBC,EAAoBmL,GAErD,GADmBnuB,KAAKc,IAAI,cACZge,OAEX,CACC/S,EAAAA,GAAeoiB,KACnBA,EAAWnuB,KAAKc,IAAI,oBAAqB,IAG1C,IAAMsxB,EAASpyB,KAAKc,IAAI,mBACP,MAAbiiB,GACH/iB,KAAKqyB,QAAQ,CAAExyB,IAAK,YAAaiZ,GAAIiK,EAAWoL,SAAUA,EAAUiE,OAAQA,IAE5D,MAAbpP,GACHhjB,KAAKqyB,QAAQ,CAAExyB,IAAK,YAAaiZ,GAAIkK,EAAWmL,SAAUA,EAAUiE,OAAQA,G,MAG/E,GAEA,CAAAvyB,IAAA,SAAAC,MAGO,WACN,OAAOE,KAAKuyB,YAAY,CAAEhtB,EAAGvF,KAAK0hB,QAAU,EAAGhc,EAAG1F,KAAK4hB,SAAW,GAAK5hB,KAAKc,IAAI,YAAa,GAAKd,KAAKc,IAAI,WAAY,GACxH,GAEA,CAAAjB,IAAA,UAAAC,MAGO,WACN,OAAOE,KAAKuyB,YAAY,CAAEhtB,EAAGvF,KAAK0hB,QAAU,EAAGhc,EAAG1F,KAAK4hB,SAAW,GAAK5hB,KAAKc,IAAI,YAAa,GAAKd,KAAKc,IAAI,WAAY,GACxH,GAAC,CAAAjB,IAAA,cAAAC,MAEM,YACNY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwpB,EAAAvpB,WAAA,oBAAAC,KAAA,MACAb,KAAK6sB,kBAAmB,EACxB7sB,KAAKiuB,YAAa,CACnB,GAEA,CAAApuB,IAAA,UAAAC,MAGO,SAAQ6B,GACd,IAAMiJ,EAAU5K,KAAKyE,WAAW,WAC1B3B,EAAWnB,EAASb,IAAI,YAC9B,OAAIgC,EACI8H,EAAQ2a,KAAKziB,GAEd,CACR,KAACqnB,CAAA,CA77BoB,CAAQ0I,GAAAA,GAC7BpzB,OAAAC,eAAAyqB,GAAA,a,gDAAkC,aAClC1qB,OAAAC,eAAAyqB,GAAA,c,gDAA0C0I,GAAAA,EAAY7tB,WAAWC,OAAO,CAACklB,GAASjlB,cE1G5E,IAAM4tB,GAAe,SAAAvkB,IAAAnP,EAAAA,EAAAA,GAAA0zB,EAAAvkB,GAAA,IAAAlP,GAAAC,EAAAA,EAAAA,GAAAwzB,GAA5B,SAAAA,IAAA,IAAAvzB,EAWsC,OAXtCC,EAAAA,EAAAA,GAAA,KAAAszB,G,0BASCrzB,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,U,gDAAwD,CAAC,QAAS,gBAElEE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,kB,yDAAqCA,CAoWtC,CADE,OACDK,EAAAA,EAAAA,GAAAkzB,EAAA,EAAAjzB,IAAA,YAAAC,MAlWU,WACTE,KAAKC,OAAOC,KAAK,YAAa,SAAU,YAAa,WAAY,UACjEQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,kBAAAC,KAAA,KACD,GAEA,CAAAhB,IAAA,sBAAAC,MAGO,WACNE,KAAK4L,WACN,GAEA,CAAA/L,IAAA,kBAAAC,MAKO,SAAgB6B,IACtBjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,wBAAAC,KAAA,MAEIc,GACH3B,KAAK+yB,iBAAiBpxB,EAExB,GAAC,CAAA9B,IAAA,kBAAAC,MAES,SAAgB6B,IACzBjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,wBAAAC,KAAA,KAAsBc,GACtB,IAAImB,EAAWnB,EAASb,IAAI,YAC5B,GAAKgC,GAKJ,GAAqB,SAAjBA,EAASD,KAAiB,CAC7B,IAAM0F,EAAczF,EAASyF,YACzBA,IACH5G,EAASiC,IAAI,YAAa2E,EAAY,IACtC5G,EAASiC,IAAI,WAAY2E,EAAY,I,MAGlC,GAAqB,cAAjBzF,EAASD,KAAsB,CACvC,IAAM0F,EAAczF,EAASyF,YACzBA,GAAeA,EAAY,KAC9B5G,EAASiC,IAAI,YAAa2E,EAAY,GAAG,IACzC5G,EAASiC,IAAI,WAAY2E,EAAY,GAAG,I,OAf1CzF,EAAW,CAAED,KAAM,QAAS0F,YAAa,CAAC5G,EAASb,IAAI,YAAa,GAAIa,EAASb,IAAI,WAAY,KACjGa,EAASiC,IAAI,WAAYd,GAmB1B9C,KAAKwC,aAAaM,EAAU9C,KAC7B,GAAC,CAAAH,IAAA,eAAAC,MAES,SAAa6B,GAA6C,IAAA5B,EAAA,KACnE4B,EAAS6rB,QAAU,GAEnBxtB,KAAKwtB,QAAQV,MAAK,SAACkG,GAClB,IAAMlwB,EAAWnB,EAASb,IAAI,YAE9B,GAAIgC,EACH,GAAqB,SAAjBA,EAASD,KACZ9C,EAAKkzB,iBAAiBlzB,EAAKmzB,YAAYvxB,EAAUqxB,SAE7C,GAAIlwB,EAASD,KAAO,aAAc,CACtC,IAAIQ,EAAI,EACR5B,EAAAA,GAAYqB,EAASyF,aAAa,WACjCxI,EAAKkzB,iBAAiBlzB,EAAKmzB,YAAYvxB,EAAUqxB,EAAgB3vB,IACjEA,GACD,G,CAGH,GACD,GAAC,CAAAxD,IAAA,mBAAAC,MAES,SAAiB2tB,GAC1B,GAAIA,EAAQ,CACX,IAAMC,EAASD,EAAO3sB,IAAI,UACpBQ,EAAQtB,KAAKsB,MACnB,GAAIosB,GAAUpsB,EAAO,CACpB,IAAMK,EAAW+rB,EAAO/rB,SACpBA,IACCA,EAASb,IAAI,SACZ4sB,EAAOyF,QAAU7xB,EAAMkD,kBAC1BlD,EAAMkD,iBAAiBF,SAASC,UAAUmpB,GAIvCA,EAAOyF,QAAUnzB,KAAKwE,kBACzBxE,KAAKwE,iBAAiBF,SAASC,UAAUmpB,G,EAM/C,GAAC,CAAA7tB,IAAA,kBAAAC,MAEM,SAAgB2tB,GAAc,IAAAvsB,EAAA,KAC9BwsB,EAASD,EAAO3sB,IAAI,UAC1B,GAAI4sB,EAAQ,CACX,IAAM/rB,EAAW+rB,EAAO/rB,SACxB,GAAIA,GAAYA,EAASb,IAAI,SAC5B,OAGD,IAKImS,EALE3H,EAAW3J,EAASb,IAAI,YACxBuK,EAAY1J,EAASb,IAAI,aACzBsyB,EAAezxB,EAASb,IAAI,gBAC5BuyB,EAAQ1xB,EAASb,IAAI,SACrBQ,EAAQtB,KAAKsB,MAEnB,GAAI8xB,EACHngB,EAAOmgB,EAAatyB,IAAI,eAEpB,CACJ,IAAMwyB,EAAS3xB,EAASb,IAAI,UAExBwyB,GAAUhyB,GACbA,EAAMoD,OAAOooB,MAAK,SAACpoB,GAClB,GAAIA,EAAO6oB,OAAsB,iBAAkB,CAClD,IAAIgG,EAAS7uB,EAAO9C,gBAAgB0xB,GAChCC,IACH5xB,EAASiC,IAAI,eAAgB2vB,GAC7BtgB,EAAOsgB,EAAOzyB,IAAI,W,CAGrB,G,CAIEd,KAAKwzB,gBACRxzB,KAAKwzB,eAAe9jB,UAGjBuD,IACHjT,KAAKwzB,eAAiBvgB,EAAKhP,OAAO7D,GAAG,eAAe,WACnDc,EAAK6xB,iBAAiBpxB,EACvB,KAGD,IACI+U,EADE+c,EAAkB9xB,EAASb,IAAI,mBAErC,GAAI2yB,EACH/c,EAAU+c,EAAgB3yB,IAAI,kBAE1B,CACJ,IAAM4yB,EAAY/xB,EAASb,IAAI,aAE3B4yB,GAAapyB,GAChBA,EAAMoD,OAAOooB,MAAK,SAACpoB,GAClB,GAAIA,EAAO6oB,OAAyB,oBAAqB,CACxD,IAAIoG,EAAYjvB,EAAO9C,gBAAgB8xB,GACnCC,IACHhyB,EAASiC,IAAI,kBAAmB+vB,GAChCjd,EAAUid,EAAU7yB,IAAI,c,CAG3B,G,CAIF,IACIyH,EAEA6O,EAHEwc,EAAiBjyB,EAASb,IAAI,kBAKpC,GAAI4V,EAAS,CACZ,IAAIzK,EAAWyK,EAAQmd,iBACvBtrB,EAAc,CAAC0D,EAASZ,UAAWY,EAASX,UAC5C3J,EAAS8N,OAAO,YAAaxD,EAASZ,WACtC1J,EAAS8N,OAAO,WAAYxD,EAASX,S,MAEjC,GAAI2H,GAAQlH,EAAAA,GAAe6nB,GAAiB,CAChD,IAAI3nB,EAAWgH,EAAK/G,mBAAmB0nB,GAGvC,GAFArrB,EAAc,CAAC0D,EAASZ,UAAWY,EAASX,UAExC3J,EAASb,IAAI,aAAc2sB,EAAO3sB,IAAI,gBAAkBQ,EAAO,CAClE,IAAMwyB,EAAY7gB,EAAK/G,mBAAmB0nB,EAAiB,MACrDG,EAAY9gB,EAAK/G,mBAAmB0nB,EAAiB,MAErDrc,EAASjW,EAAM8J,QAAQ0oB,GACvBlc,EAAStW,EAAM8J,QAAQ2oB,GAG7B3c,EAAQyW,GAAAA,GAAetW,EAAQK,E,CAGhCjW,EAAS8N,OAAO,YAAaxD,EAASZ,WACtC1J,EAAS8N,OAAO,WAAYxD,EAASX,S,MAEjC,GAAIS,EAAAA,GAAeV,IAAcU,EAAAA,GAAeT,GACpD/C,EAAc,CAAC8C,EAAWC,OAEtB,CACJ,IAAMxI,EAAWnB,EAASb,IAAI,YAC9B,GAAIgC,EACH,GAAqB,SAAjBA,EAASD,KACZ7C,KAAKg0B,oBAAoBvG,EAAQ3qB,EAAUA,EAASyF,YAAiC6O,QAEjF,GAAqB,cAAjBtU,EAASD,KAAsB,CACvC,IAAIoxB,EAAQxG,EAAOyG,QAAU,EAC7B3rB,EAAczF,EAASyF,YAAY0rB,E,GAKjCZ,GAAS9qB,GACbvI,KAAKg0B,oBAAoBvG,EAAQ,CAAE5qB,KAAM,QAAS0F,YAAaA,GAAeA,EAAa6O,E,CAG9F,GAAC,CAAAvX,IAAA,sBAAAC,MAES,SAAoB2tB,EAAgB3qB,EAA4ByF,EAA+B6O,GACxG,IAAMsW,EAASD,EAAO3sB,IAAI,UACpBQ,EAAQtB,KAAKsB,MACnB,GAAIA,EAAO,CACV,IAAMmJ,EAAanJ,EAAMR,IAAI,cACvB8J,EAAUtJ,EAAMmD,WAAW,WAC3B9C,EAA8C+rB,EAAO/rB,SAErD8qB,EAAKhiB,EAAWlC,GAElBkkB,GACHiB,EAAOlL,OAAO,CAAEjd,EAAGknB,EAAG,GAAI/mB,EAAG+mB,EAAG,KAGjC,IAAI/S,GAAU,EACV9O,EAAQ9H,GACP9C,KAAKc,IAAI,eACZ4Y,GAAU,GAIP1Z,KAAKc,IAAI,cACZ4Y,GAAU,GAGZgU,EAAOre,WAAW,UAAWqK,GAEzB/X,GAAqB,MAATyV,GAAiBzV,EAASb,IAAI,aAAc2sB,EAAO3sB,IAAI,gBACtE4sB,EAAO9pB,IAAI,WAAYwT,EAAQzV,EAASb,IAAI,kBAAmB2sB,EAAO3sB,IAAI,kBAAmB,I,CAGhG,GAEA,CAAAjB,IAAA,iBAAAC,MAQO,SAAe6B,EAA6CmhB,EAAmBhE,GACrF,IAAMxd,EAAQtB,KAAKsB,MACnB,GAAIA,EAAO,CACV,IAAM+J,EAAY1J,EAASb,IAAI,YAAa,GACtCwK,EAAW3J,EAASb,IAAI,WAAY,GAC1C,OAAIge,EACIxd,EAAM8sB,eAAe,CAAE/iB,UAAWA,EAAWC,SAAUA,GAAYwX,GAAW,OAAM/hB,GAAYsK,GAAYC,GAE7GhK,EAAM8sB,eAAe,CAAE/iB,UAAWA,EAAWC,SAAUA,GAAYwX,GAAW,E,CAEvF,GAGA,CAAAjjB,IAAA,kBAAAC,MAGO,SAAgB6B,GACtB,IAAML,EAAQtB,KAAKsB,MACfA,GACHA,EAAMoD,OAAOooB,MAAK,SAACpoB,GACdA,EAAO6oB,OAAsB,kBAChC9rB,EAAAA,GAAYiD,EAAOxC,WAAW,SAACiyB,GAC9B,IAAM7kB,EAAkB6kB,EAAGrzB,IAAI,mBAC3BwO,GACH7N,EAAAA,GAAY6N,GAAiB,SAAC9G,GACzBA,GAAS7G,IACZF,EAAAA,GAAc6N,EAAiB9G,GAC/B9D,EAAO6K,gBAAgB4kB,GAEzB,GAEF,GAEF,KAGDzzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,wBAAAC,KAAA,KAAsBc,EACvB,GAEA,CAAA9B,IAAA,mBAAAC,MAGU,SAAiB6B,IAC1BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,yBAAAC,KAAA,KAAuBc,GACvB,IAAM6rB,EAAU7rB,EAAS6rB,QACrBA,GACH/rB,EAAAA,GAAY+rB,GAAS,SAACC,GACrB,IAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOre,WAAW,WAAW,EAE/B,GAEF,GAGA,CAAAxP,IAAA,qBAAAC,MAGU,SAAmB6B,IAC5BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,2BAAAC,KAAA,KAAyBc,GACzB,IAAM6rB,EAAU7rB,EAAS6rB,QACrBA,GACH/rB,EAAAA,GAAY+rB,GAAS,SAACC,GACrB,IAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOre,WAAW,WAAW,EAE/B,GAEF,GAEA,CAAAxP,IAAA,sBAAAC,MAGU,SAAoB6B,IAC7BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,4BAAAC,KAAA,KAA0Bc,GAC1B,IAAM6rB,EAAU7rB,EAAS6rB,QACrBA,GACH/rB,EAAAA,GAAY+rB,GAAS,SAACC,GACrB,IAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOre,WAAW,WAAW,EAE/B,GAEF,GAEA,CAAAxP,IAAA,wBAAAC,MAGU,SAAsB6B,IAC/BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmyB,EAAAlyB,WAAA,8BAAAC,KAAA,KAA4Bc,GAC5B,IAAM6rB,EAAU7rB,EAAS6rB,QACrBA,GACH/rB,EAAAA,GAAY+rB,GAAS,SAACC,GACrB,IAAMC,EAASD,EAAO3sB,IAAI,UACtB4sB,GACHA,EAAOre,WAAW,WAAW,EAE/B,GAEF,KAACyjB,CAAA,CA9W0B,CAAQ5zB,GAEnCO,OAAAC,eAAAozB,GAAA,a,gDAAkC,mBAClCrzB,OAAAC,eAAAozB,GAAA,c,gDAA0C5zB,EAAU8F,WAAWC,OAAO,CAAC6tB,GAAe5tB,c,0BC1H1EkvB,GAAW,SAAA7pB,IAAAnL,EAAAA,EAAAA,GAAAg1B,EAAA7pB,GAAA,IAAAlL,GAAAC,EAAAA,EAAAA,GAAA80B,GAAxB,SAAAA,IAAA,IAAA70B,EAY6C,OAZ7CC,EAAAA,EAAAA,GAAA,KAAA40B,G,0BAOC30B,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,oB,iDAAsC,IAKtCE,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,U,yDAA4CA,CAkH7C,CADE,OACDK,EAAAA,EAAAA,GAAAw0B,EAAA,EAAAv0B,IAAA,iBAAAC,MAhHO,WAAc,IAAAC,EAAA,KAGpB,IAFAW,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAyzB,EAAAxzB,WAAA,uBAAAC,KAAA,MAEIb,KAAKwK,kBAAoBxK,KAAKqB,QAAQ,aAAerB,KAAKqB,QAAQ,aAAc,CACnF,IAAMyB,EAAW9C,KAAKc,IAAI,YAE1B,GAAIgC,EAAU,CACb,IAAM4B,EAAS1E,KAAK0E,OACpB,GAAIA,EAAQ,CACX,IAAM+F,EAAa/F,EAAO+F,aACtBA,GACHA,EAAWE,UAAU3K,KAAKc,IAAI,YAAa,KAG5C,IAAM8J,EAAUlG,EAAOkG,UAEnBA,IACH5K,KAAK6K,QAAS,EAEd7K,KAAK4D,IAAI,QAAQ,SAAC8H,GACjBd,EAAQe,QAAQ5L,EAAK2L,UACrBd,EAAQ9H,GACR8H,EAAQe,QAAQ,KACjB,IAEI3L,KAAKq0B,WACRr0B,KAAKs0B,c,GAMX,GAEA,CAAAz0B,IAAA,sBAAAC,MAGO,WACNE,KAAK4L,YACL5L,KAAKwK,kBAAmB,CACzB,GAAC,CAAA3K,IAAA,cAAAC,MAEM,YACNY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAyzB,EAAAxzB,WAAA,oBAAAC,KAAA,MACAb,KAAKwK,kBAAmB,CACzB,GAEA,CAAA3K,IAAA,cAAAC,MAKO,WACN,IAAMgD,EAAW9C,KAAKc,IAAI,YAC1B,OAAIgC,EACI8qB,GAAyB9qB,GAGzB,CAAEwI,SAAU,EAAGD,UAAW,EAEnC,GAEA,CAAAxL,IAAA,iBAAAC,MAKO,WAEN,IAAIy0B,EAAc,EACdhsB,EAA4B,GAC1BzF,EAAW9C,KAAKc,IAAI,YAE1B,GAAIgC,EAAU,CACb,GAAqB,WAAjBA,EAASD,KACZ0F,EAAczF,EAASyF,iBAEnB,GAAqB,gBAAjBzF,EAASD,KACjB,IAAK,IAAIQ,EAAI,EAAGA,EAAIP,EAASyF,YAAYzG,OAAQuB,IAAK,CACrD,IAAImM,EAAS1M,EAASyF,YAAYlF,GAC9BkiB,EAAOiP,GAAQ,CAAE3xB,KAAM,UAAW0F,YAAaiH,IAC/C+V,EAAOgP,IACVhsB,EAAciH,EACd+kB,EAAchP,E,CAKjB,IAAI7F,EAAS+U,KAAWlsB,GACxB,MAAO,CAAE8C,UAAWqU,EAAO,GAAIpU,SAAUoU,EAAO,G,CAGjD,MAAO,CAAErU,UAAW,EAAGC,SAAU,EAClC,GAAC,CAAAzL,IAAA,mBAAAC,MAGM,WACN,IAAM4E,EAAS1E,KAAK0E,OAEpB,GAAIA,EAAQ,CACX,IAAM+F,EAAa/F,EAAO+F,aAC1B,GAAIA,EAAY,CACf,IAAMwB,EAAWjM,KAAK6zB,iBAChBpH,EAAKhiB,EAAW,CAACwB,EAASZ,UAAWY,EAASX,WAEpD,GAAImhB,EACH,MAAO,CAAElnB,EAAGknB,EAAG,GAAI/mB,EAAG+mB,EAAG,G,EAI5B,MAAO,CAAElnB,EAAG,EAAGG,EAAG,EACnB,KAAC0uB,CAAA,CA7HsB,CAAQ/lB,EAAAA,GAK/B5O,OAAAC,eAAA00B,GAAA,a,gDAAkC,eAClC30B,OAAAC,eAAA00B,GAAA,c,gDAA0C/lB,EAAAA,EAASrJ,WAAWC,OAAO,CAACmvB,GAAWlvB,cCa3E,IAAMwvB,GAAiB,SAAAnmB,IAAAnP,EAAAA,EAAAA,GAAAs1B,EAAAnmB,GAAA,IAAAlP,GAAAC,EAAAA,EAAAA,GAAAo1B,GAA9B,SAAAA,IAAA,IAAAn1B,EA+BqF,OA/BrFC,EAAAA,EAAAA,GAAA,KAAAk1B,G,0BAmBCj1B,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,e,gDAAwD,IAAIiP,GAAAA,EAC3DC,GAAAA,GAASC,IAAI,CAAC,IACd,kBAAM0lB,GAAWzlB,KAAKpP,EAAKqP,MAAO,CAAC,EAAG,CAACrP,EAAKo1B,YAAY7lB,UAAU,MAUnErP,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,U,gDAAwD,CAAC,UAAW,kBAAgBA,CA6JrF,CADE,OAzLDK,EAAAA,EAAAA,GAAA80B,EAAA,EAAA70B,IAAA,iBAAAC,MAGO,SAAe6B,GACrB,IAAMizB,EAAa50B,KAAKsE,SAASpE,KAAKF,KAAK20B,YAAY3lB,QAGvD,OAFA4lB,EAAW3lB,aAAatN,GACxB3B,KAAK20B,YAAYz0B,KAAK00B,GACfA,CACR,GAuBA,CAAA/0B,IAAA,sBAAAC,MAGO,WACN2B,EAAAA,GAAYzB,KAAKkC,WAAW,SAACP,GAC5B,IAAIizB,EAAajzB,EAASb,IAAI,cAC1B8zB,GACHA,EAAW1lB,qBAEb,GACD,GAAC,CAAArP,IAAA,mBAAAC,MAEM,YACNY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,yBAAAC,KAAA,MAEIb,KAAKqB,QAAQ,SAChBrB,KAAK20B,YAAY7lB,SAASlL,IAAI,OAAQ5D,KAAKc,IAAI,SAE5Cd,KAAKqB,QAAQ,WAChBrB,KAAK20B,YAAY7lB,SAASlL,IAAI,SAAU5D,KAAKc,IAAI,UAEnD,GAAC,CAAAjB,IAAA,kBAAAC,MAES,SAAgB6B,IACzBjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,wBAAAC,KAAA,KAAsBc,GAEtB,IAAIizB,EAAajzB,EAASb,IAAI,cACzB8zB,IACJA,EAAa50B,KAAK60B,eAAelzB,IAGlCA,EAASiC,IAAI,aAAcgxB,GAC3B,IAAI9xB,EAAWnB,EAASb,IAAI,YAE5B,GAAIgC,EAAU,CACb,GAAI9C,KAAKc,IAAI,kBAEZ,GADoBgC,EAASyF,YAE5B,IAAK,IAAIhD,EAAI,EAAGA,EAAIzC,EAASyF,YAAYzG,OAAQyD,IAChD,GAAqB,gBAAjBzC,EAASD,KACZ,IAAK,IAAI6C,EAAI,EAAGA,EAAI5C,EAASyF,YAAYhD,GAAGzD,OAAQ4D,IACnD5C,EAASyF,YAAYhD,GAAGG,GAAGoL,eAI5BhO,EAASyF,YAAYhD,GAAGuL,UAK5B8jB,EAAWhxB,IAAI,WAAYd,E,CAG5B8xB,EAAWlwB,OAAS1E,KAEpBA,KAAKwC,aAAab,EAASb,IAAI,YAAad,KAC7C,GAEA,CAAAH,IAAA,kBAAAC,MAGO,SAAgB6B,IACtBjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,wBAAAC,KAAA,KAAsBc,GACtB,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,IACH50B,KAAK20B,YAAY9vB,YAAY+vB,GAC7BA,EAAWllB,WAEZ1P,KAAKuC,gBAAgBZ,EAASb,IAAI,YACnC,GAEA,CAAAjB,IAAA,mBAAAC,MAGU,SAAiB6B,IAC1BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,yBAAAC,KAAA,KAAuBc,GACvB,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,GACHA,EAAWvlB,WAAW,WAAW,EAEnC,GAEA,CAAAxP,IAAA,qBAAAC,MAGU,SAAmB6B,IAC5BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,2BAAAC,KAAA,KAAyBc,GACzB,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,GACHA,EAAWvlB,WAAW,WAAW,EAEnC,GAEA,CAAAxP,IAAA,sBAAAC,MAGU,SAAoB6B,IAC7BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,4BAAAC,KAAA,KAA0Bc,GAC1B,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,GACHA,EAAWvlB,WAAW,WAAW,EAEnC,GAEA,CAAAxP,IAAA,wBAAAC,MAGU,SAAsB6B,IAC/BjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,8BAAAC,KAAA,KAA4Bc,GAC5B,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,GACHA,EAAWvlB,WAAW,WAAW,EAEnC,GAEA,CAAAxP,IAAA,kBAAAC,MAKO,SAAgB6B,GAEtB,IADAjB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+zB,EAAA9zB,WAAA,wBAAAC,KAAA,MACIc,EAAU,CACb,IAAMizB,EAAajzB,EAASb,IAAI,cAC5B8zB,GACHA,EAAWhxB,IAAI,WAAYjC,EAASb,IAAI,Y,CAG3C,GAEA,CAAAjB,IAAA,iBAAAC,MAOO,SAAe6B,EAA+Cmd,GACpE,IAAMpI,EAAU/U,EAASb,IAAI,cAC7B,GAAI4V,EAAS,CACZ,IAAM5T,EAAW4T,EAAQ5V,IAAI,YACvBQ,EAAQtB,KAAKsB,MAEnB,GAAIwB,GAAYxB,EAAO,CAEtB,GAAIwd,EAAQ,CACX,IAAMuH,EAAWuH,GAAyB9qB,GAE1C,OADAxB,EAAMwd,QAAQuH,EAAShb,WAAYgb,EAAS/a,UACrChK,EAAMwzB,gBAAgBlH,GAAuB9qB,QAAW/B,GAAYslB,EAAShb,WAAYgb,EAAS/a,S,CAG1G,OAAOhK,EAAMwzB,gBAAgBlH,GAAuB9qB,G,EAGvD,KAAC4xB,CAAA,CA3L4B,CAAQx1B,GAwBrCO,OAAAC,eAAAg1B,GAAA,a,gDAAkC,qBAClCj1B,OAAAC,eAAAg1B,GAAA,c,gDAA0Cx1B,EAAU8F,WAAWC,OAAO,CAACyvB,GAAiBxvB,c,qCC/C5E6vB,GAAY,SAAAC,IAAA51B,EAAAA,EAAAA,GAAA21B,EAAAC,GAAA,IAAA31B,GAAAC,EAAAA,EAAAA,GAAAy1B,GAAzB,SAAAA,IAAA,IAAAx1B,EAsBgD,OAtBhDC,EAAAA,EAAAA,GAAA,KAAAu1B,G,0BAOCt1B,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,c,gDAAqCA,EAAK+E,SAASpE,KAAK+0B,GAAAA,EAAOvmB,IAAInP,EAAKqP,MAAO,CAAE8S,MAAO,GAAIE,OAAQ,GAAI4M,UAAW,CAAC,aAOpH/uB,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,e,gDAAsCA,EAAK+E,SAASpE,KAAK+0B,GAAAA,EAAOvmB,IAAInP,EAAKqP,MAAO,CAAE8S,MAAO,GAAIE,OAAQ,GAAI4M,UAAW,CAAC,cAQrH/uB,OAAAC,gBAAAC,EAAAA,EAAAA,GAAAJ,GAAA,a,yDAA+CA,CA0ChD,CADE,OACDK,EAAAA,EAAAA,GAAAm1B,EAAA,EAAAl1B,IAAA,YAAAC,MAxCU,YACTY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAo0B,EAAAn0B,WAAA,kBAAAC,KAAA,MAEAb,KAAK4D,IAAI,WAAY,YAErB5D,KAAK4D,IAAI,SAAU5D,KAAK4O,MAAMsmB,gBAC9Bl1B,KAAK4D,IAAI,YAAa,CAAC,gBAEvB5D,KAAKm1B,WAAW3S,OAAO,CACtB4S,KAAM/mB,EAAAA,EAASK,IAAI1O,KAAK4O,MAAO,CAAE4f,UAAW,CAAC,UAC7C6G,YAAQt0B,IAGTf,KAAKs1B,YAAY9S,OAAO,CACvB4S,KAAM/mB,EAAAA,EAASK,IAAI1O,KAAK4O,MAAO,CAAE4f,UAAW,CAAC,UAC7C6G,YAAQt0B,GAEV,GAAC,CAAAlB,IAAA,mBAAAC,MAEM,WAGN,IAFAY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAo0B,EAAAn0B,WAAA,yBAAAC,KAAA,MAEIb,KAAKu1B,eAAe,SAAU,CACjC,IAAMj0B,EAAQtB,KAAKyE,WAAW,SACxBnE,EAAWN,KAAKw1B,qBAAqBl0B,MACvCA,IACHtB,KAAKy1B,UAAY,IAAIC,GAAAA,GAAc,CAClC11B,KAAKm1B,WAAWlxB,OAAO7D,GAAG,SAAS,WAClCkB,EAAMq0B,QACP,IACA31B,KAAKs1B,YAAYrxB,OAAO7D,GAAG,SAAS,WACnCkB,EAAMs0B,SACP,OAGEt1B,GAAYN,KAAKy1B,WACpBz1B,KAAKy1B,UAAU/lB,S,CAGlB,KAACqlB,CAAA,CA/DuB,CAAQc,GAAAA,GAmBhCp2B,OAAAC,eAAAq1B,GAAA,a,gDAAkC,gBAClCt1B,OAAAC,eAAAq1B,GAAA,c,gDAA0Cc,GAAAA,EAAU7wB,WAAWC,OAAO,CAAC8vB,GAAY7vB,a,uBC5CpF,IAAI4wB,EAAQC,EAAQ,MAOpB,SAASC,EAAUtf,EAAS/L,EAAWsrB,GAInC,IAAIC,EAAMC,EAAMC,EAAMC,EAHtB1rB,EAAYA,GAAa,EAIzB,IAAK,IAAItH,EAAI,EAAGA,EAAIqT,EAAQ,GAAG5U,OAAQuB,IAAK,CACxC,IAAImC,EAAIkR,EAAQ,GAAGrT,KACdA,GAAKmC,EAAE,GAAK0wB,KAAMA,EAAO1wB,EAAE,MAC3BnC,GAAKmC,EAAE,GAAK2wB,KAAMA,EAAO3wB,EAAE,MAC3BnC,GAAKmC,EAAE,GAAK4wB,KAAMA,EAAO5wB,EAAE,MAC3BnC,GAAKmC,EAAE,GAAK6wB,KAAMA,EAAO7wB,EAAE,GACpC,CAEA,IAAIkc,EAAQ0U,EAAOF,EACftU,EAASyU,EAAOF,EAChBG,EAAWzwB,KAAKoV,IAAIyG,EAAOE,GAC3BxF,EAAIka,EAAW,EAEnB,GAAiB,IAAbA,EAAgB,CAChB,IAAIC,EAAkC,CAACL,EAAMC,GAE7C,OADAI,EAAgCpoB,SAAW,EACpCooB,CACX,CAMA,IAHA,IAAIC,EAAY,IAAIV,OAAM/0B,EAAW01B,GAG5BlxB,EAAI2wB,EAAM3wB,EAAI6wB,EAAM7wB,GAAK+wB,EAC9B,IAAK,IAAI5wB,EAAIywB,EAAMzwB,EAAI2wB,EAAM3wB,GAAK4wB,EAC9BE,EAAUt2B,KAAK,IAAIw2B,EAAKnxB,EAAI6W,EAAG1W,EAAI0W,EAAGA,EAAG1F,IAKjD,IAAIigB,EA2ER,SAAyBjgB,GAMrB,IALA,IAAI6O,EAAO,EACPhgB,EAAI,EACJG,EAAI,EACJ8N,EAASkD,EAAQ,GAEZrT,EAAI,EAAGW,EAAMwP,EAAO1R,OAAQ2D,EAAIzB,EAAM,EAAGX,EAAIW,EAAKyB,EAAIpC,IAAK,CAChE,IAAI+G,EAAIoJ,EAAOnQ,GACXgH,EAAImJ,EAAO/N,GACXuQ,EAAI5L,EAAE,GAAKC,EAAE,GAAKA,EAAE,GAAKD,EAAE,GAC/B7E,IAAM6E,EAAE,GAAKC,EAAE,IAAM2L,EACrBtQ,IAAM0E,EAAE,GAAKC,EAAE,IAAM2L,EACrBuP,GAAY,EAAJvP,CACZ,CACA,OAAa,IAATuP,EAAmB,IAAImR,EAAKljB,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAI,EAAGkD,GACxD,IAAIggB,EAAKnxB,EAAIggB,EAAM7f,EAAI6f,EAAM,EAAG7O,EAC3C,CA3FmBkgB,CAAgBlgB,GAG3BmgB,EAAW,IAAIH,EAAKR,EAAOxU,EAAQ,EAAGyU,EAAOvU,EAAS,EAAG,EAAGlL,GAC5DmgB,EAAShpB,EAAI8oB,EAAS9oB,IAAG8oB,EAAWE,GAIxC,IAFA,IAAIC,EAAYN,EAAU10B,OAEnB00B,EAAU10B,QAAQ,CAErB,IAAIi1B,EAAOP,EAAUpjB,MAGjB2jB,EAAKlpB,EAAI8oB,EAAS9oB,IAClB8oB,EAAWI,EACPd,GAAOlzB,QAAQC,IAAI,gCAAiC6C,KAAKuM,MAAM,IAAM2kB,EAAKlpB,GAAK,IAAKipB,IAIxFC,EAAK/b,IAAM2b,EAAS9oB,GAAKlD,IAG7ByR,EAAI2a,EAAK3a,EAAI,EACboa,EAAUt2B,KAAK,IAAIw2B,EAAKK,EAAKxxB,EAAI6W,EAAG2a,EAAKrxB,EAAI0W,EAAGA,EAAG1F,IACnD8f,EAAUt2B,KAAK,IAAIw2B,EAAKK,EAAKxxB,EAAI6W,EAAG2a,EAAKrxB,EAAI0W,EAAGA,EAAG1F,IACnD8f,EAAUt2B,KAAK,IAAIw2B,EAAKK,EAAKxxB,EAAI6W,EAAG2a,EAAKrxB,EAAI0W,EAAGA,EAAG1F,IACnD8f,EAAUt2B,KAAK,IAAIw2B,EAAKK,EAAKxxB,EAAI6W,EAAG2a,EAAKrxB,EAAI0W,EAAGA,EAAG1F,IACnDogB,GAAa,EACjB,CAEIb,IACAlzB,QAAQC,IAAI,eAAiB8zB,GAC7B/zB,QAAQC,IAAI,kBAAoB2zB,EAAS9oB,IAG7C,IAAImpB,EAAwB,CAACL,EAASpxB,EAAGoxB,EAASjxB,GAElD,OADAsxB,EAAsB7oB,SAAWwoB,EAAS9oB,EACnCmpB,CACX,CAEA,SAASP,EAAWrsB,EAAGC,GACnB,OAAOA,EAAE2Q,IAAM5Q,EAAE4Q,GACrB,CAEA,SAAS0b,EAAKnxB,EAAGG,EAAG0W,EAAG1F,GACnB1W,KAAKuF,EAAIA,EACTvF,KAAK0F,EAAIA,EACT1F,KAAKoc,EAAIA,EACTpc,KAAK6N,EAKT,SAA4BtI,EAAGG,EAAGgR,GAI9B,IAHA,IAAIugB,GAAS,EACTC,EAAYzb,IAEP3N,EAAI,EAAGA,EAAI4I,EAAQ5U,OAAQgM,IAGhC,IAFA,IAAI6I,EAAOD,EAAQ5I,GAEVzK,EAAI,EAAGW,EAAM2S,EAAK7U,OAAQ2D,EAAIzB,EAAM,EAAGX,EAAIW,EAAKyB,EAAIpC,IAAK,CAC9D,IAAI+G,EAAIuM,EAAKtT,GACTgH,EAAIsM,EAAKlR,GAER2E,EAAE,GAAK1E,IAAM2E,EAAE,GAAK3E,GACpBH,GAAK8E,EAAE,GAAKD,EAAE,KAAO1E,EAAI0E,EAAE,KAAOC,EAAE,GAAKD,EAAE,IAAMA,EAAE,KAAK6sB,GAAUA,GAEvEC,EAAYrxB,KAAKoV,IAAIic,EAAWC,EAAa5xB,EAAGG,EAAG0E,EAAGC,GAC1D,CAGJ,OAAqB,IAAd6sB,EAAkB,GAAKD,EAAS,GAAK,GAAKpxB,KAAKsB,KAAK+vB,EAC/D,CAxBaE,CAAmB7xB,EAAGG,EAAGgR,GAClC1W,KAAKgb,IAAMhb,KAAK6N,EAAI7N,KAAKoc,EAAIvW,KAAKwxB,KACtC,CA4CA,SAASF,EAAaG,EAAIC,EAAIntB,EAAGC,GAE7B,IAAI9E,EAAI6E,EAAE,GACN1E,EAAI0E,EAAE,GACN4F,EAAK3F,EAAE,GAAK9E,EACZqK,EAAKvF,EAAE,GAAK3E,EAEhB,GAAW,IAAPsK,GAAmB,IAAPJ,EAAU,CAEtB,IAAI5B,IAAMspB,EAAK/xB,GAAKyK,GAAMunB,EAAK7xB,GAAKkK,IAAOI,EAAKA,EAAKJ,EAAKA,GAEtD5B,EAAI,GACJzI,EAAI8E,EAAE,GACN3E,EAAI2E,EAAE,IAEC2D,EAAI,IACXzI,GAAKyK,EAAKhC,EACVtI,GAAKkK,EAAK5B,EAElB,CAKA,OAHAgC,EAAKsnB,EAAK/xB,GAGEyK,GAFZJ,EAAK2nB,EAAK7xB,GAEYkK,CAC1B,CA/JIkmB,EAAM0B,UAAS1B,EAAQA,EAAM0B,SAEjCC,EAAOC,QAAU1B,EACjByB,EAAOC,QAAPD,QAAyBzB,C,4FCNJ2B,EAAS,WAC1B,SAAAA,IAAiD,IAArCn3B,EAAIyQ,UAAAnP,OAAA,QAAAf,IAAAkQ,UAAA,GAAAA,UAAA,GAAG,GAAI2mB,EAAO3mB,UAAAnP,OAAA,QAAAf,IAAAkQ,UAAA,GAAAA,UAAA,GAAG4mB,EAK7B,IAL2Cr4B,EAAAA,EAAAA,GAAA,KAAAm4B,GAC3C33B,KAAKQ,KAAOA,EACZR,KAAK8B,OAAS9B,KAAKQ,KAAKsB,OACxB9B,KAAK43B,QAAUA,EAEX53B,KAAK8B,OAAS,EACd,IAAK,IAAIuB,GAAKrD,KAAK8B,QAAU,GAAK,EAAGuB,GAAK,EAAGA,IAAKrD,KAAK83B,MAAMz0B,EAErE,CA+DC,OA/DAzD,EAAAA,EAAAA,GAAA+3B,EAAA,EAAA93B,IAAA,OAAAC,MAED,SAAKi4B,GACD/3B,KAAKQ,KAAKN,KAAK63B,GACf/3B,KAAK8B,SACL9B,KAAKg4B,IAAIh4B,KAAK8B,OAAS,EAC3B,GAAC,CAAAjC,IAAA,MAAAC,MAED,WACI,GAAoB,IAAhBE,KAAK8B,OAAT,CAEA,IAAMmQ,EAAMjS,KAAKQ,KAAK,GAChBuR,EAAS/R,KAAKQ,KAAK4S,MAQzB,OAPApT,KAAK8B,SAED9B,KAAK8B,OAAS,IACd9B,KAAKQ,KAAK,GAAKuR,EACf/R,KAAK83B,MAAM,IAGR7lB,CAXgC,CAY3C,GAAC,CAAApS,IAAA,OAAAC,MAED,WACI,OAAOE,KAAKQ,KAAK,EACrB,GAAC,CAAAX,IAAA,MAAAC,MAED,SAAIm4B,GAIA,IAHA,IAAOz3B,EAAiBR,KAAjBQ,KAAMo3B,EAAW53B,KAAX43B,QACPG,EAAOv3B,EAAKy3B,GAEXA,EAAM,GAAG,CACZ,IAAM9E,EAAU8E,EAAM,GAAM,EACtB1jB,EAAU/T,EAAK2yB,GACrB,GAAIyE,EAAQG,EAAMxjB,IAAY,EAAG,MACjC/T,EAAKy3B,GAAO1jB,EACZ0jB,EAAM9E,CACV,CAEA3yB,EAAKy3B,GAAOF,CAChB,GAAC,CAAAl4B,IAAA,QAAAC,MAED,SAAMm4B,GAKF,IAJA,IAAOz3B,EAAiBR,KAAjBQ,KAAMo3B,EAAW53B,KAAX43B,QACPM,EAAal4B,KAAK8B,QAAU,EAC5Bi2B,EAAOv3B,EAAKy3B,GAEXA,EAAMC,GAAY,CACrB,IAAIpmB,EAAoB,GAAZmmB,GAAO,GACfE,EAAO33B,EAAKsR,GACVE,EAAQF,EAAO,EAMrB,GAJIE,EAAQhS,KAAK8B,QAAU81B,EAAQp3B,EAAKwR,GAAQmmB,GAAQ,IACpDrmB,EAAOE,EACPmmB,EAAO33B,EAAKwR,IAEZ4lB,EAAQO,EAAMJ,IAAS,EAAG,MAE9Bv3B,EAAKy3B,GAAOE,EACZF,EAAMnmB,CACV,CAEAtR,EAAKy3B,GAAOF,CAChB,KAACJ,CAAA,CAxEyB,GA2E9B,SAASE,EAAeztB,EAAGC,GACvB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CACpC,C","sources":["../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/path/area.js","../node_modules/src/.internal/charts/map/MapChartDefaultTheme.ts","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/charts/map/MapChart.ts","../node_modules/d3-geo/src/path/index.js","../node_modules/src/.internal/charts/map/MapPointSeries.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js"],"sourcesContent":["import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * All map series will determine the actual bounds shown in the [[MapChart]].\n\t *\n\t * If we need a series to be ignored while calculating the bounds, we can set\n\t * this to `false`.\n\t *\n\t * Especially useful for background series.\n\t *\n\t * @default true\n\t * @since 5.2.36\n\t */\n\taffectsBounds?: boolean;\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _excluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\tprotected _notIncluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _handleDirties() {\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\tif (previous && previous != geoJSON) {\n\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\tthis._geoJSONparsed = false;\n\t\t}\n\n\t\tif (!this._geoJSONparsed) {\n\t\t\tthis._parseGeoJSON();\n\t\t\tthis._geoJSONparsed = true;\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._handleDirties();\n\t\t}\n\n\t\tif (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\n\n\t\t\tthis._handleDirties();\n\n\t\t\tconst chart = this.chart;\n\n\t\t\tconst exclude = this.get(\"exclude\");\n\n\t\t\tif (exclude) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(exclude, (id) => {\n\t\t\t\t\tconst dataItem = this.getDataItemById(id);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tthis._excludeDataItem(dataItem)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!exclude || exclude.length == 0) {\n\t\t\t\t$array.each(this._excluded, (dataItem) => {\n\t\t\t\t\tthis._unexcludeDataItem(dataItem)\n\t\t\t\t})\n\t\t\t\tthis._excluded = [];\n\t\t\t}\n\n\t\t\tconst include = this.get(\"include\");\n\t\t\tif (include) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst id = dataItem.get(\"id\");\n\t\t\t\t\tif (id && include.indexOf(id) == -1) {\n\t\t\t\t\t\tthis._notIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!include) {\n\t\t\t\t$array.each(this._notIncluded, (dataItem) => {\n\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t\tthis._notIncluded = [];\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._excluded, dataItem);\n\t}\n\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._notIncluded, dataItem);\n\t}\n\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tconst idField = this.get(\"idField\", \"id\");\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature[idField];\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\t//if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t\t//}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tdataObject[idField] = id;\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any, series: MapSeries) {\n\t\tif (geometry && series.get(\"affectsBounds\", true)) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tthis._geoJSONparsed = false;\n\t\tthis._markDirtyKey(\"exclude\");\n\t}\t\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate, IGraphicsEvents } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n}\n\nexport interface IMapLineEvents extends IGraphicsEvents {\n\n\t/**\n\t * Invoked when line is redrawn\n\t */\n\tlinechanged: {};\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\tdeclare public _events: IMapLineEvents;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = \"linechanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tconst geoPoint = this.positionToGeoPoint(tooltipX.value)\n\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\tif (series) {\n\t\t\t\tconst chart = series.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst point = chart.convert(geoPoint);\n\t\t\t\t\tx = point.x;\n\t\t\t\t\ty = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { x, y };\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\tclipExtent?: boolean;\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\n\t\tif (this.isDirty(\"clipExtent\")) {\n\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.events.on(\"geoboundschanged\", () => {\n\t\t\t\t\t\tthis._generate();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis._generate();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst geoBounds = chart.geoBounds();\n\t\t\t\t\tif (geoBounds) {\n\t\t\t\t\t\tgraticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst step = this.get(\"step\", 10);\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50, p100 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4,\r\n\t\t\tcenterMapOnZoomOut: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPolygonSeries\").setAll({\r\n\t\t\taffectsBounds: true\r\n\t\t})\r\n\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\taffectsBounds: false,\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true,\r\n\t\t\tautoScale: false\r\n\t\t})\r\n\r\n\t\tr(\"MapLineSeries\").setAll({\r\n\t\t\taffectsBounds: false\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"zoomcontrol\"]).setAll({\r\n\t\t\tmarginTop: 1,\r\n\t\t\tmarginBottom: 1\r\n\t\t})\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t\tdisplay.moveTo(0, -4);\r\n\t\t\t\tdisplay.lineTo(0, 4);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ZoomControl\").setAll({\r\n\t\t\tx: p100,\r\n\t\t\tcenterX: p100,\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingBottom: 10\r\n\t\t})\r\n\r\n\t}\r\n}\r\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds, geoArea } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * Returns geo centroid of a geometry\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * Returns geo area of a geometry\n */\nexport function getGeoArea(geometry: GeoJSON.GeometryObject): number {\n\treturn geoArea(geometry);\n}\n\n/**\n * Returns bounds of a geometry\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { MapPointSeries } from \"./MapPointSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IMapPolygonSeriesDataItem } from \"./MapPolygonSeries\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * current x position of a map\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * current y position of a map\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when horizontal mouse wheel (only some mouses do have such a wheel)\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial/home rotationX.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationX?: number;\n\n\t/**\n\t * Initial/home rotationY.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationY?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n\t/**\n\t * Setting `true` means that the map will automatically center itself (or go\n\t * to `homeGeoPoint` if set) when fully zoomed out.\n\t *\n\t * `false` would mean that zoom out will be centered around the mouse\n\t * cursor (when zooming using wheel), or current map position.\n\t * \n\t * @default true\n\t * @since 5.2.1\n\t */\n\tcenterMapOnZoomOut?: boolean;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is\n\t * initialized.\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tpublic _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted: boolean = false;\n\n\tprotected _centerX: number = 0;\n\tprotected _centerY: number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns a geoPoint of the current zoom position.\n\t * \n\t * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\n\t *\n\t * @since 5.2.19\n\t */\n\tpublic geoPoint() {\n\t\treturn this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t// some page element is over the chart.\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tconst previousGeometries = this._geometryColection.geometries;\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\n\t\t\t\t\t\tthis._centerX = translate[0];\n\t\t\t\t\t\tthis._centerY = translate[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\n\t\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (series.isType<MapPointSeries>(\"MapPointSeries\")) {\n\t\t\t\t\tif (series.get(\"autoScale\")) {\n\t\t\t\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\t\t\t\tconst bullets = dataItem.bullets;\n\t\t\t\t\t\t\tif (bullets) {\n\t\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\t\t\tsprite.set(\"scale\", this.get(\"zoomLevel\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns geographical coordinates for calculated or manual center of the\n\t * map.\n\t */\n\tpublic homeGeoPoint(): IGeoPoint {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\t\treturn homeGeoPoint;\n\t}\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tthis.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.chartContainer._display.cancelTouch) {\n\t\t\tthis.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\n\t\tthis._setUpTouch();\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tlet count = $object.keys(this.chartContainer._downPoints).length;\n\t\tif (count == 1) {\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n\t\t\tconst downPoint = this.chartContainer._downPoints[1];\n\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @param  rotationX  X rotation of a map if different from current\n\t * @param  rotationY  Y rotation of a map if different from current\n\t * \n\t * @return Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint, rotationX?: number, rotationY?: number): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\t\tlet xy;\n\n\t\tif (!projection.rotate) {\n\t\t\trotationX = undefined;\n\t\t\trotationY = undefined;\n\t\t}\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tif (rotationX == null) {\n\t\t\t\trotationX = 0;\n\t\t\t}\n\t\t\tif (rotationY == null) {\n\t\t\t\trotationY = 0;\n\t\t\t}\n\t\t\tlet rotation = projection.rotate();\n\t\t\tprojection.rotate([rotationX, rotationY, 0]);\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t\tprojection.rotate(rotation);\n\t\t}\n\t\telse {\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\t\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY);\n\t\t}\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tif (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\n\t\t\tpoint = this.convert(this.homeGeoPoint());\n\t\t\tcenter = true;\n\t\t}\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t * \n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\n\t\tlet xy = this.convert(geoPoint, rotationX, rotationY);\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY, duration);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\tpublic rotate(rotationX?: number, rotationY?: number, duration?: number) {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (!projection.rotate) {\n\t\t}\n\t\telse {\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t\t}\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tif (rotationX != null) {\n\t\t\t\tthis.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\n\t\t\t}\n\t\t\tif (rotationY != null) {\n\t\t\t\tthis.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n\n\t/**\n\t * Returns area of a mapPolygon in square pixels.\n\t */\n\tpublic getArea(dataItem: DataItem<IMapPolygonSeriesDataItem>): number {\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (geometry) {\n\t\t\treturn geoPath.area(geometry);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * If set to `true`, the point will be drawn according to its `x` and `y`\n\t * coordinates, not its latitude and longitude.\n\t * \n\t * Fixed points will not move together with map, and can not be used to\n\t * connect points on a `MapLineSeries`.\n\t * \n\t * @default false\n\t * @since 5.2.34\n\t */\n\tfixed?: boolean;\n\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _lineChangedDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lineChangedDp) {\n\t\t\t\tthis._lineChangedDp.dispose();\n\t\t\t}\n\n\t\t\tif (line) {\n\t\t\t\tthis._lineChangedDp = line.events.on(\"linechanged\", () => {\n\t\t\t\t\tthis._positionBullets(dataItem);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tsprite.setAll({ x: xy[0], y: xy[1] });\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number, rotate?: boolean): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\t\t\tif (rotate) {\n\t\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\n\t\t\t}\n\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\treturn { longitude: center[0], latitude: center[1] };\n\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true`, the order of coordinates in GeoJSON will be flipped.\n\t *\n\t * Some GeoJSON software produces those in reverse order, so if your custom\n\t * map appears garbled, try this setting.\n\t * \n\t * @default false\n\t * @since 5.2.42\n\t */\n\treverseGeodata?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tlet geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (this.get(\"reverseGeodata\")) {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tfor (let x = 0; x < geometry.coordinates.length; x++) {\n\t\t\t\t\t\tif (geometry.type == \"MultiPolygon\") {\n\t\t\t\t\t\t\tfor (let y = 0; y < geometry.coordinates[x].length; y++) {\n\t\t\t\t\t\t\t\tgeometry.coordinates[x][y].reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgeometry.coordinates[x].reverse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>, rotate?: boolean): Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (geometry && chart) {\n\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst centroid = $mapUtils.getGeoCentroid(geometry);\n\t\t\t\t\tchart.rotate(-centroid.longitude, -centroid.latitude);\n\t\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry),);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { MapChart } from \"./MapChart\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\n\nexport interface IZoomControlSettings extends IContainerSettings {\n\n}\n\nexport interface IZoomControlPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends Container {\n\n\t/**\n\t * A [[Button]] for zoom in.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }));\n\n\t/**\n\t * A [[Button]] for zoom out.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }));\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomControl.className]);\n\n\tprotected _disposer: MultiDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"position\", \"absolute\");\n\n\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\tthis.set(\"themeTags\", [\"zoomcontrol\"]);\n\n\t\tthis.plusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t\tthis.minusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tconst chart = this.getPrivate(\"chart\");\n\t\t\tconst previous = this._prevPrivateSettings.chart;\n\t\t\tif (chart) {\n\t\t\t\tthis._disposer = new MultiDisposer([\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomIn()\n\t\t\t\t\t}),\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomOut()\n\t\t\t\t\t})])\n\t\t\t}\n\n\t\t\tif (previous && this._disposer) {\n\t\t\t\tthis._disposer.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n"],"names":["MapSeries","_Series","_inherits","_super","_createSuper","_this","_classCallCheck","Object","defineProperty","_assertThisInitialized","_createClass","key","value","_this2","this","fields","push","_setRawDefault","on","geoJSON","previous","_prevSettings","data","clear","_get","_getPrototypeOf","prototype","call","get","undefined","_geoJSONparsed","_parseGeoJSON","_this3","_valuesDirty","_handleDirties","isDirty","chart","exclude","_centerLocation","$array","id","dataItem","getDataItemById","_excludeDataItem","length","_excluded","_unexcludeDataItem","include","dataItems","indexOf","_notIncludeDataItem","_unNotIncludeDataItem","_notIncluded","_removeGeometry","_addGeometry","includes","excludes","_this4","features","type","geometry","console","log","geodataNames","idField","_loop","feature","i","dataObject","properties","name","_types","dataContext","geometryType","set","processDataItem","madeFromGeoData","$object","len","events","isEnabled","dispatch","target","_chart","children","moveValue","bulletsContainer","getPrivate","series","_geometries","markDirtyGeometries","removeValue","_markDirtyKey","Series","classNames","concat","className","Adder","_partials","Float64Array","_n","x","p","j","y","hi","lo","Math","abs","n","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","ceil","exp","hypot","floor","sin","pow","sign","sqrt","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","lengthSum","lambda0","sinPhi0","cosPhi0","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","z","add","a","b","MapLine","_Graphics","_projectionDirty","projection","clipAngle","precision","geoPath","_clear","segments","display","s","segment","gp0","p0","convert","longitude","latitude","lineTo","gp","pn","_display","context","markDirty","tooltipX","tooltipY","$type","Percent","geoPoint","positionToGeoPoint","position","pointA","pointB","lineType","totalDistance","geoLength","currentDistance","positionA","positionB","geoDistance","location","positionAB","p1","invert","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","k","interpolate","t","B","A","distance","geoInterpolate","Graphics","MapLineSeries","_MapSeries","ListTemplate","Template","new","_new","_root","mapLines","template","mapLine","make","_setDataItem","markDirtyProjection","makeMapLine","_handlePointsToConnect","setPrivate","pointsToConnect","markDirtyValues","coords","setRaw","dispose","graticuleX","dy","range","map","graticuleY","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","arguments","extentMajor","extentMinor","step","stepMajor","stepMinor","GraticuleSeries","_MapLineSeries","makeDataItem","_dataItem","_generate","geoGraticule","geoBounds","left","bottom","right","top","compose","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","m","rejoin","pop","shift","result","Intersection","points","other","entry","o","e","v","compareIntersection","startInside","subject","clip","forEach","pointEqual","sort","link","start","current","isSubject","array","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","flatten","arrays","_iterator","_step","_regeneratorRuntime","wrap","_context","prev","next","_createForOfIteratorHelper","done","delegateYield","t1","f","finish","stop","_marked","merge","Array","from","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","cosRadius","sinRadius","circleRadius","acos","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","r","ax","ay","transformer","methods","TransformStream","constructor","Infinity","boundsStream","bounds","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","w","h","maxDepth","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","center","apply","reset","transformRotate","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","reflectX","reflectY","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","MapChartDefaultTheme","_Theme","ic","interfaceColors","rule","bind","setAll","geoMercator","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","$ease","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","centerMapOnZoomOut","role","setColor","affectsBounds","clipFront","clipBack","autoScale","isMeasured","fillOpacity","strokeWidth","strokeOpacity","marginTop","marginBottom","p50","draw","moveTo","p100","centerX","centerY","paddingRight","paddingBottom","Theme","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_radius","pointRadius","_line","_point","closePath","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","deltaSum","ranges","areaRing","dLambda","sdLambda","adLambda","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","getGeoCentroid","geoCentroid","getGeoBounds","merged","deltaMax","MapChart","_SerialChart","path","projectionStream","contextStream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","setPrivateRaw","seriesContainer","toGlobal","_geoCentroid","_geoBounds","chartContainer","_wheelDp","event","wheelEvent","originalEvent","$utils","preventDefault","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","innerWidth","innerHeight","previousGeometries","_geometryColection","_makeGeoPath","_fitMap","hw","hh","centerLocation","xy","xx","yy","_handleSetWheel","_dirtyGeometries","each","_pw","_ph","newScale","_centerX","_centerY","_mapBounds","zoomControl","_disposeProperty","isType","bullets","bullet","sprite","_setUpTouch","$mapUtils","$math","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","homeGeoPoint","duration","zoomToGeoPoint","cancelTouch","_defaultThemes","_settings","themeTags","Rectangle","fill","Color","fromHex","_handleChartDown","_handleChartUp","_handleChartMove","license","registry","licenses","match","_showBranding","_downZoomLevel","count","_downPoints","downPoint","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","_txa","_tya","_rxa","_rya","l0","l1","_pLon","_pLat","ll","_event","_this5","downPoints","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","_handlePinch","local","disableType","ww","downLocation","easing","animate","newZoomLevel","zoomToPoint","mapBounds","zl","readerAlert","_t","locale","SerialChart","MapPointSeries","_positionBullets","bulletFunction","_setBulletParent","_makeBullet","parent","lineDataItem","fixed","lineId","lineDI","_lineChangedDp","polygonDataItem","polygonId","polygonDI","positionOnLine","visualCentroid","geoPoint0","geoPoint1","_positionBulletReal","index","_index","di","MapPolygon","isHover","showTooltip","biggestArea","geoArea","$polylabel","MapPolygonSeries","mapPolygons","mapPolygon","makeMapPolygon","zoomToGeoBounds","ZoomControl","_Container","Button","verticalLayout","plusButton","icon","layout","minusButton","isPrivateDirty","_prevPrivateSettings","_disposer","MultiDisposer","zoomIn","zoomOut","Container","Queue","require","polylabel","debug","minX","minY","maxX","maxY","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","inside","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports","TinyQueue","compare","defaultCompare","_down","item","_up","pos","halfLength","best"],"sourceRoot":""}