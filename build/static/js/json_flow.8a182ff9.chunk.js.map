{"version":3,"file":"static/js/json_flow.8a182ff9.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/MonotoneXTension.ts","../node_modules/src/.internal/core/render/MonotoneYTension.ts","../node_modules/src/.internal/core/render/gradients/Gradient.ts","../node_modules/src/.internal/core/render/gradients/LinearGradient.ts","../node_modules/src/.internal/charts/flow/FlowDefaultTheme.ts","../node_modules/src/.internal/charts/flow/Flow.ts","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-zoom/src/transform.js","../node_modules/src/.internal/charts/flow/FlowNode.ts","../node_modules/src/.internal/charts/flow/FlowNodes.ts","../node_modules/src/.internal/charts/flow/ChordNodes.ts","../node_modules/src/.internal/charts/flow/FlowLink.ts","../node_modules/src/.internal/charts/flow/ChordLink.ts","../node_modules/src/.internal/charts/flow/Chord.ts","../node_modules/src/.internal/charts/flow/ChordLinkDirected.ts","../node_modules/src/.internal/charts/flow/ChordDirected.ts","../node_modules/src/.internal/charts/flow/ChordNonRibbon.ts","../node_modules/src/.internal/charts/flow/SankeyNodes.ts","../node_modules/src/.internal/charts/flow/SankeyLink.ts","../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","../node_modules/d3-sankey/node_modules/d3-array/src/max.js","../node_modules/d3-sankey/node_modules/d3-array/src/min.js","../node_modules/d3-sankey/src/align.js","../node_modules/d3-sankey/src/constant.js","../node_modules/d3-sankey/src/sankey.js","../node_modules/src/.internal/charts/flow/Sankey.ts"],"sourcesContent":["/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}","import type { IBounds } from \"../../util/IBounds\"\nimport type { IGradient, IGradientStop } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../util/Entity\"\n\n\nexport interface IGradientSettings extends IEntitySettings {\n\n\t/**\n\t * A list of color steps for the gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n\t */\n\tstops?: Array<IGradientStop>;\n\n\t/**\n\t * Gradient target.\n\t */\n\ttarget?: Sprite;\n\n}\n\nexport interface IGradientPrivate extends IEntityPrivate {\n}\n\n/**\n * Base class for gradients.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport abstract class Gradient extends Entity {\n\n\tdeclare public _settings: IGradientSettings;\n\tdeclare public _privateSettings: IGradientPrivate;\n\n\tpublic static className: string = \"Gradient\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Gradient.className]);\n\n\tprotected _afterNew() {\n\t\t// Applying themes because gradient will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(_target: Sprite): IGradient {\n\t\treturn {\n\t\t\taddColorStop: (_offset: number, _color: string) => { }\n\t\t};\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\t//if (this.isDirty(\"target\") && this.get(\"target\")) {\n\t\t//\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n\n\t\t//\t});\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getBounds(target: Sprite): IBounds {\n\t\tconst gradientTarget = this.get(\"target\");\n\t\tif (gradientTarget) {\n\t\t\tlet bounds = gradientTarget.globalBounds();\n\n\t\t\tconst p0 = target.toLocal({ x: bounds.left, y: bounds.top });\n\t\t\tconst p1 = target.toLocal({ x: bounds.right, y: bounds.top });\n\t\t\tconst p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\n\t\t\tconst p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\n\n\t\t\treturn {\n\t\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t\t}\n\t\t}\n\t\treturn target._display.getLocalBounds();\n\t}\n\n}\n","import type { IGradient } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Gradient, IGradientSettings, IGradientPrivate } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\n\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\n\n\nexport interface ILinearGradientSettings extends IGradientSettings {\n\n\t/**\n\t * Gradient rotation, in degrees.\n\t *\n\t * @default 90\n\t */\n\trotation?: number;\n\n}\n\nexport interface ILinearGradientPrivate extends IGradientPrivate {\n}\n\n/**\n * Linear gradient.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport class LinearGradient extends Gradient {\n\n\tdeclare public _settings: ILinearGradientSettings;\n\tdeclare public _privateSettings: ILinearGradientPrivate;\n\n\tpublic static className: string = \"LinearGradient\";\n\tpublic static classNames: Array<string> = Gradient.classNames.concat([LinearGradient.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(target: Sprite): IGradient {\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet bounds = this.getBounds(target);\n\n\t\tlet l = bounds.left || 0;\n\t\tlet r = bounds.right || 0;\n\t\tlet t = bounds.top || 0;\n\t\tlet b = bounds.bottom || 0;\n\n\t\tlet cos = $math.cos(rotation);\n\t\tlet sin = $math.sin(rotation);\n\n\t\tlet w = cos * (r - l);\n\t\tlet h = sin * (b - t);\n\n\t\tlet longer = Math.max(w, h);\n\n\t\tconst gradient = this._root._renderer.createLinearGradient(\n\t\t\tl,\n\t\t\tt,\n\t\t\tl + longer * cos,\n\t\t\tt + longer * sin\n\t\t);\n\n\t\tconst stops = this.get(\"stops\")!;\n\t\tif (stops) {\n\t\t\tlet i = 0;\n\t\t\t$array.each(stops, (stop) => {\n\n\t\t\t\tlet offset = stop.offset;\n\n\t\t\t\tif (!$type.isNumber(offset)) {\n\t\t\t\t\toffset = i / (stops.length - 1);\n\t\t\t\t}\n\n\t\t\t\tlet opacity = stop.opacity;\n\n\t\t\t\tif (!$type.isNumber(opacity)) {\n\t\t\t\t\topacity = 1;\n\t\t\t\t}\n\n\t\t\t\tlet color = stop.color;\n\n\t\t\t\tif (color) {\n\n\t\t\t\t\tconst lighten = stop.lighten;\n\t\t\t\t\tif (lighten) {\n\t\t\t\t\t\tcolor = Color.lighten(color, lighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst brighten = stop.brighten;\n\t\t\t\t\tif (brighten) {\n\t\t\t\t\t\tcolor = Color.brighten(color, brighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t})\n\t\t}\n\t\treturn gradient;\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { IFlowNodesDataItem } from \"../../charts/flow/FlowNodes\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class FlowDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/flow\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Flow\").setAll({\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tpaddingLeft: 10,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingTop: 10,\r\n\t\t\tpaddingBottom: 10,\r\n\t\t\thiddenSize: 0.05,\r\n\t\t\tminSize: 0,\r\n\t\t\tminHiddenValue: 0\r\n\t\t});\r\n\r\n\t\tr(\"FlowNodes\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tlegendLabelText: \"{name}\",\r\n\t\t\tlegendValueText: \"{sumOutgoing.formatNumber('#.#')}\"\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").setAll({\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttoggleKey: \"disabled\"\r\n\t\t})\r\n\r\n\r\n\t\tr(\"FlowNode\").states.create(\"disabled\", {}); // do not remove\r\n\r\n\t\tr(\"FlowNode\", [\"unknown\"]).setAll({\r\n\t\t\tdraggable: false,\r\n\t\t\topacity: 0\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"flow\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"flow\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\").setAll({\r\n\t\t\tfillStyle: \"gradient\",\r\n\t\t\tstrokeStyle: \"gradient\"\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"source\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"target\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerover\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet rectangle = (<any>dataItem).get(\"slice\") || (<any>dataItem).get(\"rectangle\");\r\n\t\t\tif (rectangle && rectangle.get(\"tooltipText\")) {\r\n\t\t\t\trectangle.showTooltip();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerout\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Sankey\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sankey\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodeAlign: \"justify\",\r\n\t\t\tlinkTension: 0.5,\r\n\t\t\tnodePadding: 10,\r\n\t\t\tnodeWidth: 10\r\n\t\t});\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"sankey\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"SankeyLink\").setAll({\r\n\t\t\tcontrolPointDistance: 0.2\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"sankey\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"sankey\", \"link\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true,\r\n\t\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"sankey\", \"link\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"horizontal\"]).setAll({\r\n\t\t\ty: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingLeft: 15\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"vertical\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\tcenterX: p50,\r\n\t\t\tpaddingTop: 15\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Chord\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Chord\").setAll({\r\n\t\t\tradius: percent(90),\r\n\t\t\tnodeWidth: 10,\r\n\t\t\tpadAngle: 1,\r\n\t\t\tstartAngle: 0,\r\n\t\t\tsort:\"none\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordDirected\").setAll({\r\n\t\t\tlinkHeadRadius: 10\r\n\t\t});\r\n\r\n\t\tr(\"ChordNodes\").setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"chord\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"ChordLink\").setAll({\r\n\t\t\tsourceRadius: p100,\r\n\t\t\ttargetRadius: p100,\r\n\t\t\tfillStyle: \"solid\",\r\n\t\t\tstrokeStyle: \"solid\",\r\n\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t});\r\n\r\n\t\tr(\"Slice\", [\"chord\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadius: 0\r\n\t\t})\r\n\r\n\t\tr(\"Slice\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"chord\", \"node\"]).setAll({\r\n\t\t\tradius: 5,\r\n\t\t\ttextType: \"circular\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordLinkDirected\").setAll({\r\n\t\t\theadRadius: 10\r\n\t\t});\r\n\r\n\t\t// Class: Graphics\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"chord\", \"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"ChordNonRibbon\").setAll({\r\n\t\t\tlinkType: \"curve\" // \"line\" | \"curve\"\r\n\t\t})\r\n\r\n\t\tr(\"ChordLink\", [\"basic\"]).setAll({\r\n\t\t\tfillStyle: \"none\",\r\n\t\t\tstrokeStyle: \"source\"\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.4\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).states.create(\"hover\", { strokeWidth: 2, strokeOpacity: 1 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: ArcDiagram\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ArcDiagram\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodePadding: 5,\r\n\t\t\tminRadius: 5,\r\n\t\t\tradiusKey: \"sum\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"horizontal\"]).setAll({\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"vertical\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).setAll({\r\n\t\t\ttooltipText: \"{name}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"ArcDiagramLink\", [\"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tstrokeStyle: \"solid\",\r\n\t\t\t\tfillStyle: \"none\",\r\n\t\t\t\tisMeasured: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"ArcDiagramLink\", [\"link\", \"shape\"]).states.create(\"hover\", {\r\n\t\t\tstrokeOpacity: 1\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"horizontal\"]).setAll({\r\n\t\t\ty: 0,\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\trotation: -90\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"vertical\"]).setAll({\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\tpaddingRight: 15\r\n\t\t});\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { FlowLink } from \"./FlowLink\";\nimport type { FlowNodes, IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { ListTemplate } from \"../../core/util/List\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IFlowDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Link value.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Associated link element.\n\t */\n\tlink: FlowLink;\n\n\t/**\n\t * Link's color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyLink: d3sankey.SankeyLink<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * An ID of the target node.\n\t */\n\ttargetId: string;\n\n\t/**\n\t * An ID of the source node.\n\t */\n\tsourceId: string;\n\n\t/**\n\t * A data item of the source node.\n\t */\n\tsource: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * A data item of the target node.\n\t */\n\ttarget: DataItem<IFlowNodesDataItem>;\n\n}\n\nexport interface IFlowSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data which holds source node ID.\n\t */\n\tsourceIdField?: string;\n\n\t/**\n\t * A field in data which holds target node ID.\n\t */\n\ttargetIdField?: string;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Minimum gap between adjacent nodes.\n\t *\n\t * @default 10\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Minimum size of the link.\n\t * \n\t * It's a relative value to the sum of all values in the series. If set,\n\t * this relative value will be used for small value nodes when calculating\n\t * their size. For example, if it's set to `0.01`, small nodes will be\n\t * sized like their value is 1% of the total sum of all values in series.\n\t * \n\t * @default 0\n\t * @since 5.1.5\n\t */\n\tminSize?: number;\n\n\t/**\n\t * Relative size of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * This allows hidden node to remain visible so that user could click on it\n\t * again to show it and its links.\n\t * \n\t * @default 0.05\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\thiddenSize?: number;\n\n\t/**\n\t * Minimum value of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\tminHiddenValue?: number;\n}\n\nexport interface IFlowPrivate extends ISeriesPrivate {\n\tvalueSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n}\n\nexport interface IFlowEvents extends ISeriesEvents {\n}\n\n/**\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\n */\nexport abstract class Flow extends Series {\n\tpublic static className: string = \"Flow\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Flow.className]);\n\n\tdeclare public _settings: IFlowSettings;\n\tdeclare public _privateSettings: IFlowPrivate;\n\tdeclare public _dataItemSettings: IFlowDataItem;\n\tdeclare public _events: IFlowEvents;\n\n\t/**\n\t * @ignore\n\t */\n\tdeclare public readonly nodes: FlowNodes;\n\n\t/**\n\t * Container series will place their links in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract readonly links: ListTemplate<FlowLink>;\n\n\tprotected _nodesData: d3sankey.SankeyNodeMinimal<{}, {}>[] = [];\n\tprotected _linksData: { source: d3sankey.SankeyNodeMinimal<{}, {}>, target: d3sankey.SankeyNodeMinimal<{}, {}>, value: number }[] = [];\n\tprotected _index = 0;\n\tprotected _nodesDataSet: boolean = false;\n\n\tprotected _linksByIndex: { [index: string]: any } = {};\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n\t\tif (this.nodes) {\n\t\t\tthis.nodes.flow = this;\n\t\t}\n\n\t\tsuper._afterNew();\n\n\t\tthis.children.push(this.bulletsContainer);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowLink;\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst nodes = this.nodes;\n\t\tif (nodes) {\n\t\t\tlet unknown = false;\n\t\t\tlet sourceId = dataItem.get(\"sourceId\");\n\t\t\tlet sourceDataItem = nodes.getDataItemById(sourceId);\n\n\t\t\tif (!sourceDataItem) {\n\t\t\t\tif (sourceId == null) {\n\t\t\t\t\tsourceId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\t\t\t\tnodes.data.push({ id: sourceId, unknown: unknown });\n\t\t\t\tsourceDataItem = nodes.getDataItemById(sourceId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\tsourceDataItem.set(\"name\", sourceId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunknown = false;\n\t\t\tlet targetId = dataItem.get(\"targetId\");\n\n\t\t\tlet targetDataItem = nodes.getDataItemById(targetId);\n\t\t\tif (!targetDataItem) {\n\t\t\t\tif (targetId == null) {\n\t\t\t\t\ttargetId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\n\t\t\t\tnodes.data.push({ id: targetId, unknown: unknown });\n\t\t\t\ttargetDataItem = nodes.getDataItemById(targetId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\ttargetDataItem.set(\"name\", targetId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sourceDataItem) {\n\t\t\t\tdataItem.set(\"source\", sourceDataItem);\n\t\t\t\tnodes.addOutgoingLink(sourceDataItem, dataItem);\n\t\t\t}\n\n\t\t\tif (targetDataItem) {\n\t\t\t\tdataItem.set(\"target\", targetDataItem);\n\t\t\t\tnodes.addincomingLink(targetDataItem, dataItem);\n\t\t\t}\n\n\t\t\tdataItem.set(\"link\", this.makeLink(dataItem));\n\n\t\t\tconst sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n\t\t\tconst targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n\n\t\t\tthis._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n\t\t\tif (sourceDataItem.get(\"unknown\")) {\n\t\t\t\tif (targetDataItem) {\n\t\t\t\t\tsourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\n\t\t\tif (targetDataItem.get(\"unknown\")) {\n\t\t\t\tif (sourceDataItem) {\n\t\t\t\t\ttargetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\t\t\tthis._updateLinkColor(dataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tif (!this.nodes._userDataSet) {\n\t\t\tthis.nodes.data.setAll([]);\n\t\t\tthis.nodes._userDataSet = false;\n\t\t}\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tlet valueLow = Infinity;\n\t\tlet valueHigh = -Infinity;\n\t\tlet valueSum = 0;\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._nodesData = [];\n\t\t\tconst nodes = this.nodes;\n\t\t\tif (nodes) {\n\t\t\t\t$array.each(nodes.dataItems, (dataItem) => {\n\t\t\t\t\tconst d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\t\t\t\t\tthis._nodesData.push(d3SankeyNode);\n\n\t\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\n\n\t\t\t\t\tlet sumIncoming = 0;\n\t\t\t\t\tlet sumIncomingWorking = 0;\n\t\t\t\t\tif (incoming) {\n\t\t\t\t\t\t$array.each(incoming, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumIncoming += value;\n\t\t\t\t\t\t\tsumIncomingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumIncoming\", sumIncoming);\n\t\t\t\t\tdataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n\n\t\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\n\t\t\t\t\tlet sumOutgoing = 0;\n\t\t\t\t\tlet sumOutgoingWorking = 0;\n\t\t\t\t\tif (outgoing) {\n\t\t\t\t\t\t$array.each(outgoing, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumOutgoing += value;\n\t\t\t\t\t\t\tsumOutgoingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumOutgoing\", sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n\n\t\t\t\t\tdataItem.set(\"sum\", sumIncoming + sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n\n\t\t\t\t\tnodes.updateLegendValue(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._linksData = [];\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tif (value < valueLow) {\n\t\t\t\t\t\tvalueLow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\t\tvalueHigh = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalueSum += value;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tlet valueWorking = dataItem.get(\"valueWorking\");\n\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\tif (minSize > 0) {\n\t\t\t\t\t\tif (valueWorking < minSize * valueSum) {\n\t\t\t\t\t\t\tvalueWorking = minSize * valueSum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\n\t\t\t\t\tdataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\t\t\t\t\tthis._linksData.push(d3SankeyLink);\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueSum\", valueSum);\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst link = dataItem.get(\"link\");\n\n\t\tconst fillStyle = link.get(\"fillStyle\");\n\t\tconst strokeStyle = link.get(\"strokeStyle\");\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\t\tconst sourceFill = source.get(\"fill\");\n\t\tconst targetFill = target.get(\"fill\");\n\t\tlink.remove(\"fillGradient\");\n\t\tlink.remove(\"strokeGradient\");\n\n\t\tswitch (fillStyle) {\n\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"fill\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"fill\", targetFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._fillGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t}\n\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t}\n\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t}\n\n\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\tlink._fillGradient = gradient;\n\n\t\t\t\tlink.set(\"fillGradient\", gradient);\n\t\t\t\tbreak;\n\t\t\tcase \"none\":\n\t\t\t\tlink.set(\"fill\", undefined); // do not use remove!\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (strokeStyle) {\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"stroke\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"stroke\", targetFill);\n\t\t\t\tbreak;\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._strokeGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._strokeGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"strokeGradient\", gradient);\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tlink.remove(\"stroke\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet link = dataItem.get(\"link\");\n\t\tif (link) {\n\t\t\tthis.links.removeValue(link);\n\t\t\tlink.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tconst stateAnimationDuration = \"stateAnimationDuration\";\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tpromises.push(dataItem.animate({\n\t\t\tkey: \"valueWorking\" as any,\n\t\t\tto: Math.max(this.get(\"minHiddenValue\", 0), this.get(\"hiddenSize\", 0) * dataItem.get(\"value\")),\n\t\t\tduration: duration,\n\t\t\teasing: easing\n\t\t}).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.hide();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.show();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst point = link.getPoint(this._getBulletLocation(bullet));\n\t\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\t\tif (bullet.get(\"autoRotate\")) {\n\t\t\t\t\t\tsprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\treturn bullet.get(\"locationY\", 0);\n\t}\n}\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IFlowNodesDataItem, FlowNodes } from \"./FlowNodes\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IFlowNodeSettings extends IContainerSettings {\n}\n\nexport interface IFlowNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for flow chart nodes.\n */\nexport class FlowNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: FlowNodes | undefined;\n\n\tdeclare public _settings: IFlowNodeSettings;\n\tdeclare public _privateSettings: IFlowNodePrivate;\n\n\tpublic static className: string = \"FlowNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([FlowNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowNodesDataItem> | undefined;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { Flow, IFlowDataItem } from \"./Flow\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { Label } from \"../../core/render/Label\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface IFlowNodesDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Node name.\n\t */\n\tname: string;\n\n\t/**\n\t * An associated node instance.\n\t */\n\tnode: FlowNode;\n\n\t/**\n\t * Node label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates \"unknown\" node.\n\t */\n\tunknown: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyNode: d3sankey.SankeyNode<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * Sum of values of all incoming links.\n\t */\n\tsumIncoming: number;\n\n\t/**\n\t * Sum of values of all outgoing links.\n\t */\n\tsumOutgoing: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumIncomingWorking: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumOutgoingWorking: number;\n\n\t/**\n\t * Sum of values of all links: incoming and outgoing.\n\t */\n\tsum: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumWorking: number;\n\n\t/**\n\t * A list of incoming link data items.\n\t */\n\tincomingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * A list of outgoing link data items.\n\t */\n\toutgoingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * Depth of the node.\n\t */\n\tdepth: number;\n\n}\n\nexport interface IFlowNodesSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data boolean setting if the node is \"unknown\".\n\t *\n\t * @default \"unknown\"\n\t */\n\tunknownField?: string;\n\n\t/**\n\t * A field in data that holds name for the node.\n\t *\n\t * @default \"id\"\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t *\n\t * @since 5.4.2\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills nodes.\n\t *\n\t * @default \"fill\"\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] that series will use to apply to its nodes.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Animation duration in ms.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for node animations.\n\t */\n\tanimationEasing?: (t: Time) => Time;\n}\n\nexport interface IFlowNodesPrivate extends ISeriesPrivate {\n}\n\nexport interface IFlowNodesEvents extends ISeriesEvents {\n}\n\n\n/**\n * Holds instances of nodes for a [[Flow]] series.\n */\nexport abstract class FlowNodes extends Series {\n\tpublic static className: string = \"FlowNodes\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([FlowNodes.className]);\n\n\tdeclare public _settings: IFlowNodesSettings;\n\tdeclare public _privateSettings: IFlowNodesPrivate;\n\tdeclare public _dataItemSettings: IFlowNodesDataItem;\n\tdeclare public _events: IFlowNodesEvents;\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, { themeTags: [\"flow\"] }, [this.labels.template])\n\t);\n\n\t/**\n\t * List of node elements.\n\t *\n\t * @default new ListTemplate<FlowNode>\n\t */\n\tpublic readonly nodes: ListTemplate<FlowNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template])\n\t);\n\n\t/**\n\t * Related [[Flow]] series.\n\t */\n\tpublic abstract flow: Flow | undefined;\n\n\tpublic _userDataSet = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"unknown\", \"name\", \"fill\");\n\n\t\tthis.set(\"idField\", \"id\");\n\t\tthis.set(\"nameField\", \"id\");\n\t\tthis.set(\"fillField\", \"fill\");\n\t\tthis.set(\"unknownField\", \"unknown\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tthis._userDataSet = true;\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tdataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tconst node = this.makeNode(dataItem);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst disabledField = this.get(\"disabledField\");\n\n\t\tif (disabledField) {\n\t\t\tconst dataContext = dataItem.dataContext as any;\n\t\t\tif (dataContext) {\n\t\t\t\tif (dataContext[disabledField]) {\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTag?: string): FlowNode {\n\n\t\tconst node = this.nodes.make();\n\n\t\tthis.nodes.push(node);\n\n\t\tif (themeTag) {\n\t\t\tnode.addTag(themeTag);\n\t\t}\n\n\t\tif (dataItem.get(\"unknown\")) {\n\t\t\tnode.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.children.push(node);\n\t\tnode._setDataItem(dataItem);\n\t\tnode.series = this;\n\n\t\tnode.events.on(\"click\", (e) => {\n\t\t\tconst node = e.target;\n\t\t\tif (node.get(\"toggleKey\") == \"disabled\") {\n\t\t\t\tconst dataItem = node.dataItem as DataItem<IFlowNodesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\t\tthis.enableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tdataItem.on(\"fill\", () => {\n\t\t\tthis._updateNodeColor(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"node\", node);\n\t\treturn node;\n\t}\n\n\tpublic _updateNodeColor(_dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addincomingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet incoming = dataItem.get(\"incomingLinks\");\n\t\tif (!incoming) {\n\t\t\tincoming = [];\n\t\t\tdataItem.set(\"incomingLinks\", incoming)\n\t\t}\n\t\tincoming.push(link);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addOutgoingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet outgoing = dataItem.get(\"outgoingLinks\");\n\t\tif (!outgoing) {\n\t\t\toutgoing = [];\n\t\t\tdataItem.set(\"outgoingLinks\", outgoing)\n\t\t}\n\t\toutgoing.push(link);\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.show();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.show(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.hide();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.hide(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", false);\n\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", false);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", true);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", true);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Chord } from \"./Chord\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordNodesDataItem extends IFlowNodesDataItem {\n\n\t/**\n\t * Node [[Slice]] element.\n\t */\n\tslice: Slice;\n\n\t/**\n\t * Node label element.\n\t */\n\tlabel: RadialLabel;\n\n}\n\nexport interface IChordNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface IChordNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface IChordNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Chord]] series.\n */\nexport class ChordNodes extends FlowNodes {\n\tpublic static className: string = \"ChordNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ChordNodes.className]);\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {}, [this.labels.template])\n\t);\n\n\tdeclare public _settings: IChordNodesSettings;\n\tdeclare public _privateSettings: IChordNodesPrivate;\n\tdeclare public _dataItemSettings: IChordNodesDataItem;\n\tdeclare public _events: IChordNodesEvents;\n\n\t/**\n\t * Related [[Chord]] series.\n\t */\n\tpublic flow: Chord | undefined;\n\n\tprotected _dAngle: number = 0;\n\n\t/**\n\t * List of slice elements.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.slices.template])\n\t);\n\n\t/**\n\t * @ignore\n\t * added to solve old naming bug\n\t */\n\tpublic readonly rectangles = this.slices;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst node = super.makeNode(dataItem, \"chord\");\n\n\t\tconst slice = node.children.insertIndex(0, this.slices.make());\n\t\tdataItem.set(\"slice\", slice);\n\t\tslice._setSoft(\"fill\", dataItem.get(\"fill\"));\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\t\tlabel.addTag(\"flow\");\n\t\tlabel.addTag(\"chord\");\n\t\tlabel.addTag(\"node\");\n\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tnode.events.on(\"dragstart\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\t\t\tif (this.flow) {\n\t\t\t\tthis._dAngle = this.flow.get(\"startAngle\", 0) - angle;\n\t\t\t}\n\t\t})\n\n\t\tnode.events.on(\"dragged\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\n\t\t\tnode.setAll({ x: 0, y: 0 });\n\t\t\tif (this.flow) {\n\t\t\t\tthis.flow.set(\"startAngle\", angle + this._dAngle);\n\t\t\t}\n\t\t})\n\n\t\tlabel._setDataItem(dataItem);\n\t\tslice._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\t\t\tconst bulletRadius = innerRadius + (radius - innerRadius) * locationY;\n\t\t\t\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\t\t\t\tsprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif(slice){\n\t\t\tslice.set(\"fill\", dataItem.get(\"fill\"));\n\t\t}\n\t}\t\t\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tthis.slices.removeValue(slice);\n\t\t\tslice.dispose();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { IFlowDataItem, Flow } from \"./Flow\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport type { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IFlowLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t */\n\tfillStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n\t/**\n\t * Type of outline to use for links.\n\t */\n\tstrokeStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n}\n\nexport interface IFlowLinkPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A base class for a flow link.\n */\nexport abstract class FlowLink extends Graphics {\n\n\tpublic series: Flow | undefined;\n\n\tdeclare public _settings: IFlowLinkSettings;\n\tdeclare public _privateSettings: IFlowLinkPrivate;\n\n\tpublic static className: string = \"FlowLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([FlowLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowDataItem> | undefined;\n\n\tpublic _fillGradient: LinearGradient | undefined;\n\tpublic _strokeGradient: LinearGradient | undefined;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"fillStyle\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<IFlowDataItem>;\n\t\t\tif (series && dataItem) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic abstract getPoint(location: number): IOrientationPoint;\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\t\tlet position = 0.5;\n\t\tif (tooltipY instanceof Percent) {\n\t\t\tposition = tooltipY.value;\n\t\t}\n\n\t\treturn this.getPoint(position);\n\t}\n}\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IChordNodesDataItem } from \"./ChordNodes\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { Chord, IChordDataItem } from \"./Chord\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source data item.\n\t */\n\tsource?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * target data item.\n\t */\n\ttarget?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Radius of the link at the source.\n\t */\n\tsourceRadius?: number | Percent;\n\n\t/**\n\t * Radius of the link at the end (target).\n\t */\n\ttargetRadius?: number | Percent;\n\n}\n\nexport interface IChordLinkPrivate extends IFlowLinkPrivate {\n}\n\n/**\n * A link element used in [[Chord]] chart.\n */\nexport class ChordLink extends FlowLink {\n\n\tpublic _p0: IPoint | undefined;\n\tpublic _p1: IPoint | undefined;\n\n\tpublic _type: \"line\" | \"curve\" | undefined;\n\n\tdeclare public _settings: IChordLinkSettings;\n\tdeclare public _privateSettings: IChordLinkPrivate;\n\n\tpublic static className: string = \"ChordLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ChordLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDataItem> | undefined;\n\n\tdeclare public series: Chord | undefined;\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._p0 && this._p1) {\n\t\t\tif (this._type === \"line\") {\n\t\t\t\tlet p = $math.getPointOnLine(this._p0, this._p1, location);\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\n\t\t\t\tlet p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\n\t\t\t\tlet p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\n\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { chord, ribbon, RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\nimport { ascending, descending } from \"d3\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { ChordNodes, IChordNodesDataItem } from \"./ChordNodes\";\nimport { ChordLink } from \"./ChordLink\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IChordDataItem extends IFlowDataItem {\n\n\t/**\n\t * A link element.\n\t */\n\tlink: ChordLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<IChordNodesDataItem>;\n\n}\n\nexport interface IChordSettings extends IFlowSettings {\n\n\t/**\n\t * Angle of a gap between each node, in degrees.\n\t *\n\t * @default 1\n\t */\n\tpadAngle?: number;\n\n\t/**\n\t * Radius of the diagram in percent or pixels.\n\t *\n\t * If set in percent, it will be relative to the whole area available for\n\t * the series.\n\t *\n\t * @default 90%\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Starting angle in degrees.\n\t *\n\t * @default 0\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"descending\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n}\n\nexport interface IChordPrivate extends IFlowPrivate {\n}\n\nexport interface IChordEvents extends IFlowEvents {\n}\n\n/**\n * Regular chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Chord extends Flow {\n\n\tpublic static className: string = \"Chord\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Chord.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLink>\n\t */\n\tpublic readonly links: ListTemplate<ChordLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\t/**\n\t * A series for all chord nodes.\n\t *\n\t * @default ChordNodes.new()\n\t */\n\tpublic readonly nodes: ChordNodes = this.children.push(ChordNodes.new(this._root, {}));\n\n\tdeclare public _settings: IChordSettings;\n\tdeclare public _privateSettings: IChordPrivate;\n\tdeclare public _dataItemSettings: IChordDataItem;\n\tdeclare public _events: IChordEvents;\n\n\tpublic _d3chord = chord();\n\tpublic _chordLayout: { source: { index: number, startAngle: number, endAngle: number, value: number }, target: { index: number, startAngle: number, endAngle: number, value: number } }[] = [];\n\tpublic _ribbon = ribbon();\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\n\t\tthis.linksContainer.setAll({ x: p50, y: p50 })\n\t\tthis.bulletsContainer.setAll({ x: p50, y: p50 });\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _fixRibbon(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>) {\n\t\tribbon.startAngle((d) => {\n\t\t\treturn d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\n\t\tribbon.endAngle((d) => {\n\t\t\treturn d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLink {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tthis.links.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\t\tlink.series = this;\n\t\treturn link;\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\t\t\tlet outgoing = sourceDataItem.get(\"outgoingLinks\");\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 0;\n\t\t\t\tif (outgoing) {\n\t\t\t\t\t$array.each(outgoing, (outgoingLink) => {\n\t\t\t\t\t\tif (outgoingLink.get(\"target\") === targetDataItem) {\n\t\t\t\t\t\t\tvalue = outgoingLink.get(\"valueWorking\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet valueSum = this.getPrivate(\"valueSum\", 0);\n\t\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\t\tif(value > 0 && minSize > 0){\n\t\t\t\t\t\t\tif(value < valueSum * minSize){\n\t\t\t\t\t\t\t\tvalue = valueSum * minSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._fixRibbon(this._ribbon);\n\n\t\tlet chordChanged = false;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\n\n\t\t\tconst matrix = this._makeMatrix();\n\n\t\t\tthis._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\n\t\t\tconst sort = this.get(\"sort\");\n\n\t\t\tif (sort === \"ascending\") {\n\t\t\t\tthis._d3chord.sortGroups(ascending);\n\t\t\t}\n\t\t\telse if (sort === \"descending\") {\n\t\t\t\tthis._d3chord.sortGroups(descending);\n\t\t\t}\n/*\n\t\t\tthis._d3chord.sortSubgroups((a, b)=>{\n\t\t\t\tif (a != Math.round(a)) return false\n\t\t\t\tif (b != Math.round(b)) return true\n\t\t\t\treturn b < a ? -1 : b > a ? 1 : 0;\n\t\t\t})\n*/\n\t\t\tthis._chordLayout = this._d3chord(matrix);\n\n\t\t\tchordChanged = true;\n\t\t}\n\n\t\tif (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\n\t\t\tlet radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\n\n\t\t\tlet i = 0;\n\n\t\t\tconst chordStartAngle = this.get(\"startAngle\", 0);\n\t\t\tconst nodeWidth = this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\n\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\tconst chordGroup = (this._chordLayout as any).groups[i];\n\t\t\t\tconst startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tconst endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tslice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle as number, arc: endAngle - startAngle })\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tlabel.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\n\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\tlabel.setPrivate(\"innerRadius\", 0.1);\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tconst linkRadius = radius - this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this._chordLayout, (chord) => {\n\n\t\t\t\tlet dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\n\n\t\t\t\tif (!dataItem) {\n\t\t\t\t\tdataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\n\t\t\t\t}\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tthis._getLinkPoints(link, linkRadius, chord);\n\t\t\t\t\tthis._updateLink(this._ribbon, link, linkRadius, chord);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tconst source = chordLayoutItem.source;\n\t\tconst target = chordLayoutItem.target;\n\n\t\tconst chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\n\n\t\tif (source && target) {\n\t\t\tconst startAngle0 = source.startAngle;\n\t\t\tconst endAngle0 = source.endAngle\n\t\t\tconst angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\n\n\t\t\tconst startAngle1 = target.startAngle;\n\t\t\tconst endAngle1 = target.endAngle\n\t\t\tconst angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\n\n\t\t\tlink._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\n\t\t}\n\t}\n\n\tprotected _updateLink(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tif (chordLayoutItem) {\n\t\t\tribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\n\t\t\tribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tribbon.context(display as any);\n\t\t\t\tribbon(chordLayoutItem);\n\t\t\t})\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { ChordDirected, IChordDirectedDataItem } from \"./ChordDirected\";\n\nimport { ChordLink, IChordLinkPrivate, IChordLinkSettings } from \"./ChordLink\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IChordLinkDirectedSettings extends IChordLinkSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * @default 10\n\t */\n\theadRadius?: number;\n\n}\n\nexport interface IChordLinkDirectedPrivate extends IChordLinkPrivate {\n}\n\n/**\n * A link element used in [[ChordDirected]] chart.\n */\nexport class ChordLinkDirected extends ChordLink {\n\tdeclare public _settings: IChordLinkDirectedSettings;\n\tdeclare public _privateSettings: IChordLinkDirectedPrivate;\n\n\tpublic static className: string = \"ChordLinkDirected\";\n\tpublic static classNames: Array<string> = ChordLink.classNames.concat([ChordLinkDirected.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDirectedDataItem> | undefined;\n\n\tdeclare public series: ChordDirected | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\n\n\t\tsuper._afterNew();\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n","import type { ChordLink } from \"./ChordLink\";\nimport type { RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordNonRibbonDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordNonRibbonSettings extends IChordSettings {\n\n\t/**\n\t * Type of the link:\n\t *\n\t * `\"curve\"` (default) will display link as a curved line.\n\t * `\"line\"` will display link as a straight line.\n\t *\n\t * @default \"curve\"\n\t */\n\tlinkType?: \"curve\" | \"line\"\n\n}\n\nexport interface IChordNonRibbonPrivate extends IChordPrivate {\n}\n\nexport interface IChordNonRibbonEvents extends IChordEvents {\n}\n\n/**\n * Chord series with think line links.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordNonRibbon extends Chord {\n\n\tpublic static className: string = \"ChordNonRibbon\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordNonRibbon.className]);\n\n\tdeclare public _settings: IChordNonRibbonSettings;\n\tdeclare public _privateSettings: IChordNonRibbonPrivate;\n\tdeclare public _dataItemSettings: IChordNonRibbonDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"basic\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 1;\n\n\t\t\t\tif (sourceDataItem === targetDataItem) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tprotected _updateLink(_ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, _linkRadius: number, chordLayoutItem: any) {\n\t\tlink._type = this.get(\"linkType\");\n\t\tif (chordLayoutItem) {\n\t\t\tconst linkType = this.get(\"linkType\");\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tlet p0 = link._p0;\n\t\t\t\tlet p1 = link._p1;\n\t\t\t\tif (p0 && p1) {\n\t\t\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\t\t\tif (linkType == \"line\") {\n\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdisplay.quadraticCurveTo(0, 0, p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, _chordLayoutItem: any) {\n\t\tconst source = link.get(\"source\");\n\t\tconst target = link.get(\"target\");\n\n\t\tif (source && target) {\n\n\t\t\tconst sourceSlice = source.get(\"slice\");\n\t\t\tconst targetSlice = target.get(\"slice\");\n\n\t\t\tconst startAngle0 = sourceSlice.get(\"startAngle\", 0);\n\t\t\tconst arc0 = sourceSlice.get(\"arc\", 0)\n\t\t\tconst angle0 = startAngle0 + arc0 / 2;\n\n\t\t\tconst startAngle1 = targetSlice.get(\"startAngle\", 0);\n\t\t\tconst arc1 = targetSlice.get(\"arc\", 0)\n\t\t\tconst angle1 = startAngle1 + arc1 / 2;\n\n\t\t\tlink._p0 = { x: linkRadius * $math.cos(angle0), y: linkRadius * $math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * $math.cos(angle1), y: linkRadius * $math.sin(angle1) };\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey } from \"./Sankey\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nexport interface ISankeyNodesDataItem extends IFlowNodesDataItem {\n\trectangle: RoundedRectangle;\n}\n\nexport interface ISankeyNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface ISankeyNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface ISankeyNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Sankey]] series.\n */\nexport class SankeyNodes extends FlowNodes {\n\tpublic static className: string = \"SankeyNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([SankeyNodes.className]);\n\n\tdeclare public _settings: ISankeyNodesSettings;\n\tdeclare public _privateSettings: ISankeyNodesPrivate;\n\tdeclare public _dataItemSettings: ISankeyNodesDataItem;\n\tdeclare public _events: ISankeyNodesEvents;\n\n\t/**\n\t * List of rectangle elements.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t);\n\n\t/**\n\t * Related [[Sankey]] series.\n\t */\n\tpublic flow: Sankey | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst flow = this.flow;\n\n\t\tconst node = super.makeNode(dataItem, \"sankey\");\n\n\t\tconst rectangle = node.children.insertIndex(0, this.rectangles.make());\n\t\tthis.rectangles.push(rectangle);\n\t\trectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\tdataItem.set(\"rectangle\", rectangle);\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\tconst d3SankeyNode = (node.dataItem as DataItem<ISankeyNodesDataItem>).get(\"d3SankeyNode\");\n\t\t\tif (d3SankeyNode) {\n\t\t\t\tif (flow) {\n\t\t\t\t\tif (flow.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t\t\td3SankeyNode.x0 = node.x();\n\t\t\t\t\t\td3SankeyNode.y0 = node.y();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td3SankeyNode.x0 = node.y();\n\t\t\t\t\t\td3SankeyNode.y0 = node.x();\n\t\t\t\t\t}\n\n\t\t\t\t\tflow.updateSankey();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\n\t\tif (flow) {\n\t\t\tlabel.addTag(flow.get(\"orientation\", \"\"));\n\t\t}\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tlabel._setDataItem(dataItem);\n\t\trectangle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\tconst node = dataItem.get(\"node\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (rectangle) {\n\t\t\t\t\t\tsprite.setAll({ x: node.x() + rectangle.width() * locationX, y: node.y() + rectangle.height() * locationY });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet rectangle = dataItem.get(\"rectangle\");\n\t\tif (rectangle) {\n\t\t\tthis.rectangles.removeValue(rectangle);\n\t\t\trectangle.dispose();\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tif(rectangle){\n\t\t\trectangle.set(\"fill\", dataItem.get(\"fill\"));\n\t\t}\n\t}\t\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey, ISankeyDataItem } from \"./Sankey\";\nimport type { ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport type { IOrientationPoint } from \"../../core/util/IPoint\";\n\nimport { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface ISankeyLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Color_mode} for more info\n\t * @default \"gradient\"\n\t */\n\tfillStyle?: \"solid\" | \"gradient\" | \"source\" | \"target\";\n\n\t/**\n\t * A relative distance from node for link \"elbow\" (bend point).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Bend_point} for more info\n\t * @default 0.2\n\t */\n\tcontrolPointDistance?: number;\n\n}\n\nexport interface ISankeyLinkPrivate extends IFlowLinkPrivate {\n\n\t/**\n\t * Link orientation.\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport class SankeyLink extends FlowLink {\n\tdeclare public _settings: ISankeyLinkSettings;\n\tdeclare public _privateSettings: ISankeyLinkPrivate;\n\n\tpublic static className: string = \"SankeyLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([SankeyLink.className]);\n\n\tdeclare protected _dataItem: DataItem<ISankeyDataItem> | undefined;\n\n\tdeclare public series: Sankey | undefined;\n\n\tprotected _svgPath: SVGPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\tprotected _totalLength: number = 0;\n\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"orientation\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem && series) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\n\t\tconst target = this.get(\"target\");\n\t\tconst source = this.get(\"source\");\n\n\t\tlet sourceNode: FlowNode | undefined;\n\t\tlet targetNode: FlowNode | undefined;\n\n\t\tif (source && target) {\n\t\t\tthis._clear = true;\n\t\t\tsourceNode = source.get(\"node\");\n\t\t\ttargetNode = target.get(\"node\");\n\n\t\t\tlet x0 = 0;\n\t\t\tlet x1 = 0;\n\t\t\tlet y0 = 0;\n\t\t\tlet y1 = 0;\n\n\t\t\tlet xt0 = 0;\n\t\t\tlet yt0 = 0;\n\n\t\t\tlet xt1 = 0;\n\t\t\tlet yt1 = 0;\n\n\t\t\tlet xb0 = 0;\n\t\t\tlet xb1 = 0;\n\n\t\t\tlet yb0 = 0;\n\t\t\tlet yb1 = 0;\n\n\t\t\tlet xm0 = 0;\n\t\t\tlet xm1 = 0;\n\n\t\t\tlet ym0 = 0;\n\t\t\tlet ym1 = 0;\n\n\t\t\tlet angle0 = 0;\n\t\t\tlet angle1 = 0;\n\n\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst d3SankeyLink = dataItem.get(\"d3SankeyLink\");\n\t\t\t\tif (d3SankeyLink) {\n\n\t\t\t\t\tlet w = d3SankeyLink.width || 0;\n\n\t\t\t\t\tlet orientation = this.getPrivate(\"orientation\");\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\ty0 = sourceNode.y();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\ty1 = targetNode.y();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tangle0 = 90;\n\t\t\t\t\t\tangle1 = 90;\n\n\t\t\t\t\t\tx0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\tx1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (y1 < y0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\tx0 = x1;\n\t\t\t\t\t\t\ty0 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\tx1 = x0;\n\t\t\t\t\t\t\ty1 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\txt0 = x0 - w / 2;\n\t\t\t\t\t\tyt0 = y0;\n\n\t\t\t\t\t\txt1 = x1 - w / 2;\n\t\t\t\t\t\tyt1 = y1;\n\n\t\t\t\t\t\txb0 = x0 + w / 2;\n\t\t\t\t\t\txb1 = x1 + w / 2;\n\n\t\t\t\t\t\tyb0 = y0;\n\t\t\t\t\t\tyb1 = y1;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\tx0 = sourceNode.x();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\tx1 = targetNode.x();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\ty1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tif (x1 < x0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\ty0 = y1;\n\t\t\t\t\t\t\tx0 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\ty1 = y0;\n\t\t\t\t\t\t\tx1 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\txt0 = x0;\n\t\t\t\t\t\tyt0 = y0 - w / 2;\n\n\t\t\t\t\t\txt1 = x1;\n\t\t\t\t\t\tyt1 = y1 - w / 2;\n\n\t\t\t\t\t\txb0 = x0;\n\t\t\t\t\t\txb1 = x1;\n\n\t\t\t\t\t\tyb0 = y0 + w / 2;\n\t\t\t\t\t\tyb1 = y1 + w / 2;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\n\t\t\t\t\t\txt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\n\t\t\t\t\t\tyt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\n\t\t\t\t\t\txb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\n\t\t\t\t\t\tyb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cpd = this.get(\"controlPointDistance\", 0.2);\n\t\t\t\t\tcpd = Math.min(0.4999, cpd);\n\n\t\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\n\n\t\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(angle0);\n\t\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tkxt0 += dx / 2;\n\t\t\t\t\tkyt0 += dy / 2;\n\n\t\t\t\t\tkxt1 += dx / 2;\n\t\t\t\t\tkyt1 += dy / 2;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tkyt0 = Math.min(yt1, Math.max(yt0 + 1, kyt0));\n\t\t\t\t\t\tkyb0 = Math.min(yb1, Math.max(yb0 + 1, kyb0));\n\n\t\t\t\t\t\tkyt1 = Math.max(yt0, Math.min(yt1 - 1, kyt1));\n\t\t\t\t\t\tkyb1 = Math.max(yb0, Math.min(yb1 - 1, kyb1));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tkxt0 = Math.min(xt1, Math.max(xt0 + 1, kxt0));\n\t\t\t\t\t\tkxb0 = Math.min(xb1, Math.max(xb0 + 1, kxb0));\n\n\t\t\t\t\t\tkxt1 = Math.max(xt0, Math.min(xt1 - 1, kxt1));\n\t\t\t\t\t\tkxb1 = Math.max(xb0, Math.min(xb1 - 1, kxb1));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet segment = [[xt0, yt0, xb0, yb0], [kxt0, kyt0, kxb0, kyb0], [kxt1, kyt1, kxb1, kyb1], [xt1, yt1, xb1, yb1]];\n\n\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\tconst series = this.series!;\n\t\t\t\t\t\tseries._fillGenerator.context(display as any);\n\t\t\t\t\t\tseries._fillGenerator(segment as [number, number][]);\n\t\t\t\t\t})\n\n\t\t\t\t\tlet middleSegment = [[xm0, ym0], [kxm0, kym0], [kxm1, kym1], [xm1, ym1]];\n\n\t\t\t\t\tconst path = this.series!._strokeGenerator(middleSegment as [number, number][]);\n\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tthis._svgPath.setAttribute(\"d\", path);\n\t\t\t\t\t\tthis._totalLength = this._svgPath.getTotalLength();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.series && this.dataItem) {\n\t\t\tthis.series._positionBullets(this.dataItem as any);\n\t\t}\n\t}\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._svgPath) {\n\t\t\tif (this._svgPath.getAttribute(\"d\")) {\n\t\t\t\tlet p0 = this._svgPath.getPointAtLength(location * this._totalLength - 0.1);\n\t\t\t\tlet p1 = this._svgPath.getPointAtLength(location * this._totalLength + 0.1);\n\t\t\t\tlet p = this.toGlobal(this._svgPath.getPointAtLength(location * this._totalLength));\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 }\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\treturn this.toLocal(super._getTooltipPoint());\n\t}\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { SankeyNodes, ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nexport interface ISankeyDataItem extends IFlowDataItem {\n\n\t/**\n\t * Link element.\n\t */\n\tlink: SankeyLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<ISankeyNodesDataItem>;\n\n}\n\nexport interface ISankeySettings extends IFlowSettings {\n\n\t/**\n\t * Orientation of the series.\n\t *\n\t * @default \"horizontal\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Alignment of nodes.\n\t *\n\t * @default \"left\"\n\t */\n\tnodeAlign?: \"left\" | \"right\" | \"justify\" | \"center\"\n\n\t/**\n\t * Tension setting of the link curve.\n\t *\n\t * Accepts values from `0` to `1`.\n\t *\n\t * `1` will result in perfectly straight lines.\n\t *\n\t * @default 0.5\n\t */\n\tlinkTension?: number;\n\n\t/**\n\t * A custom function to use when sorting nodes.\n\t *\n\t * @todo test\n\t * @ignore\n\t */\n\tnodeSort?: (a: d3sankey.SankeyNodeMinimal<{}, {}>, b: d3sankey.SankeyNodeMinimal<{}, {}>) => number | null;\n\n\t/**\n\t * A custom function to use when sorting links.\n\t * \n\t * Use `null` to sort links exactly the way they are presented in data.\n\t * \n\t * @since 5.4.4\n\t */\n\tlinkSort?: null | ((a: d3sankey.SankeyLinkMinimal<{}, {}>, b: d3sankey.SankeyLinkMinimal<{}, {}>) => number | null);\n\n}\n\nexport interface ISankeyPrivate extends IFlowPrivate {\n}\n\nexport interface ISankeyEvents extends IFlowEvents {\n}\n\n/**\n * Sankey series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Sankey extends Flow {\n\n\tpublic static className: string = \"Sankey\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Sankey.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<SankeyLink>\n\t */\n\tpublic readonly links: ListTemplate<SankeyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => SankeyLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A series representing sankey nodes.\n\t *\n\t * @default SankeyNodes.new()\n\t */\n\tpublic readonly nodes: SankeyNodes = this.children.push(SankeyNodes.new(this._root, {}));\n\n\tdeclare public _settings: ISankeySettings;\n\tdeclare public _privateSettings: ISankeyPrivate;\n\tdeclare public _dataItemSettings: ISankeyDataItem;\n\tdeclare public _events: ISankeyEvents;\n\n\tpublic _d3Sankey = d3sankey.sankey();\n\tpublic _d3Graph: d3sankey.SankeyGraph<{}, {}> | undefined;\n\n\tpublic _fillGenerator = area();\n\tpublic _strokeGenerator = line();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): SankeyLink {\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\n\t\tconst link = this.links.make();\n\n\t\tif (source.get(\"unknown\")) {\n\t\t\tlink.addTag(\"source\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tif (target.get(\"unknown\")) {\n\t\t\tlink.addTag(\"target\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.linksContainer.children.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", source);\n\t\tlink.set(\"target\", target);\n\t\tlink.series = this;\n\n\t\tthis.links.push(link);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateSankey() {\n\t\tconst d3Graph = this._d3Graph;\n\t\tif (d3Graph) {\n\t\t\tthis._d3Sankey.update(d3Graph);\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\tlink.markDirty();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateLinkColor(dataItem);\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn bullet.get(\"locationY\", 0);\n\t\t}\n\t\telse {\n\t\t\treturn bullet.get(\"locationX\", 0);\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tlet vertical = false;\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tconst linkTension = this.get(\"linkTension\", 0.5);\n\t\t\tif (vertical) {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\") || this.isDirty(\"linkSort\")) {\n\t\t\tif (this._nodesData.length > 0) {\n\t\t\t\tconst d3Sankey = this._d3Sankey;\n\t\t\t\tlet w = this.innerWidth();\n\t\t\t\tlet h = this.innerHeight();\n\n\t\t\t\tif (vertical) {\n\t\t\t\t\t[w, h] = [h, w];\n\t\t\t\t}\n\n\t\t\t\td3Sankey.size([w, h]);\n\t\t\t\td3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n\t\t\t\td3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n\t\t\t\td3Sankey.nodeSort(this.get(\"nodeSort\", null) as any);\n\t\t\t\t(d3Sankey as any).linkSort(this.get(\"linkSort\") as any);\n\n\t\t\t\tswitch (this.get(\"nodeAlign\")) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyRight);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"justify\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyJustify);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyCenter);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyLeft);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._d3Graph = d3Sankey({ nodes: this._nodesData, links: this._linksData });\n\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\t\tlink.markDirty();\n\t\t\t\t})\n\n\t\t\t\tconst d3Graph = this._d3Graph;\n\n\t\t\t\tif (d3Graph) {\n\t\t\t\t\tconst nodes = d3Graph.nodes;\n\n\t\t\t\t\t$array.each(nodes, (d3SankeyNode) => {\n\t\t\t\t\t\tconst dataItem = (d3SankeyNode as any).dataItem as DataItem<ISankeyNodesDataItem>;\n\t\t\t\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\t\t\t\tlet x0: number | undefined;\n\t\t\t\t\t\tlet x1: number | undefined;\n\t\t\t\t\t\tlet y0: number | undefined;\n\t\t\t\t\t\tlet y1: number | undefined;\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.y1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.x1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.x1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.y1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\t\t\t\tnode.setAll({ x: x0, y: y0, width: x1 - x0, height: y1 - y0 });\n\n\t\t\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\t\t\trectangle.setAll({ width: x1 - x0, height: y1 - y0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["MonotoneXTension","context","tension","_classCallCheck","Object","defineProperty","this","_context","_tension","_createClass","key","value","_line","NaN","_x0","_x1","_y0","_y1","_t0","_point","lineTo","point","slope2","closePath","x","y","t1","moveTo","slope3","curveMonotoneXTension","sign","that","x2","y2","h0","h1","s0","s1","p","Math","min","abs","t","h","t0","x0","y0","x1","y1","dx","bezierCurveTo","MonotoneYTension","_ref","curveMonotoneYTension","monotoneYTension","Gradient","_Entity","_inherits","_super","_createSuper","apply","arguments","_get","_getPrototypeOf","prototype","call","_target","addColorStop","_offset","_color","target","gradientTarget","get","bounds","globalBounds","p0","toLocal","left","top","p1","right","p2","bottom","p3","max","_display","getLocalBounds","Entity","classNames","concat","className","LinearGradient","_Gradient","rotation","getBounds","l","r","b","cos","$math","sin","w","longer","gradient","_root","_renderer","createLinearGradient","stops","i","$array","stop","offset","$type","length","opacity","color","lighten","Color","brighten","g","FlowDefaultTheme","_Theme","ic","interfaceColors","rule","bind","setAll","width","p100","height","paddingLeft","paddingRight","paddingTop","paddingBottom","hiddenSize","minSize","minHiddenValue","colors","ColorSet","new","legendLabelText","legendValueText","setStateOnChildren","cursorOverStyle","toggleKey","states","create","draggable","fill","text","populateText","fillStyle","strokeStyle","events","on","e","dataItem","outgoing","linkDataItem","link","hover","hideTooltip","incoming","rectangle","showTooltip","unhover","orientation","nodeAlign","linkTension","nodePadding","nodeWidth","cornerRadiusTL","cornerRadiusBL","cornerRadiusTR","cornerRadiusBR","controlPointDistance","fillOpacity","strokeOpacity","interactive","tooltipText","setColor","p50","centerY","centerX","radius","percent","padAngle","startAngle","sort","linkHeadRadius","sourceRadius","targetRadius","cornerRadius","textType","headRadius","linkType","strokeWidth","minRadius","radiusKey","animationEasing","$ease","isMeasured","Theme","Flow","_Series","_super2","_this","_assertThisInitialized","children","push","Container","_defaultThemes","fields","nodes","flow","bulletsContainer","unknown","sourceId","sourceDataItem","getDataItemById","_index","data","id","set","targetId","targetDataItem","addOutgoingLink","addincomingLink","makeLink","sourceIndex","dataItems","indexOf","targetIndex","_linksByIndex","_updateLinkColor","_userDataSet","_this2","valueLow","Infinity","valueHigh","valueSum","_valuesDirty","_nodesData","d3SankeyNode","sumIncoming","sumIncomingWorking","workingValue","sumOutgoing","sumOutgoingWorking","updateLegendValue","_linksData","valueWorking","d3SankeyLink","source","setRaw","setPrivateRaw","sourceFill","targetFill","remove","_applyTemplates","_fillGradient","sourceStop","targetStop","undefined","_strokeGradient","links","removeValue","dispose","duration","_this3","promises","hideDataItem","hiddenState","stateAnimationDuration","stateAnimationEasing","easing","animate","to","waitForStop","hide","next","Promise","all","_callee","_this4","showDataItem","show","_context2","_callee2","bullet","sprite","getPoint","_getBulletLocation","angle","Series","pi","PI","halfPi","tau","epsilon","range","j","Array","from","_","k","chord","directed","transpose","sortGroups","sortSubgroups","sortChords","matrix","n","groupSums","groupIndex","chords","groups","Float64Array","a","_step","_iterator","_createForOfIteratorHelper","_loop","subgroupIndex","filter","_step2","_iterator2","s","done","index","endAngle","err","f","_step3","_iterator3","values","compare","slice","defaultSource","d","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","buffer","ap","argv","sr","sa0","sa1","tr","ta0","ta1","path","arc","tr2","ta2","quadraticCurveTo","constant","ribbonArrow","number1","number2","map","type","Transform","constructor","scale","translate","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY","toString","FlowNode","_Container","FlowNodes","ListTemplate","Template","Label","_new","themeTags","labels","template","reset","name","node","makeNode","disabledField","dataContext","root","once","disableDataItem","themeTag","make","addTag","_setDataItem","series","isHidden","enableDataItem","_updateNodeColor","_dataItem","label","_this5","_this6","_context3","_callee3","_this7","_context4","_callee4","ChordNodes","_FlowNodes","RadialLabel","Slice","slices","insertIndex","_setSoft","_dAngle","locationX","locationY","innerRadius","bulletRadius","FlowLink","_Graphics","isDirty","tooltipY","position","Percent","Graphics","ChordLink","_FlowLink","_p0","_p1","_type","Chord","_Flow","_settings","$utils","linksContainer","group","outgoingLink","getPrivate","_fixRibbon","_ribbon","chordChanged","_sizeDirty","_makeMatrix","_d3chord","ascending","descending","_chordLayout","innerWidth","innerHeight","chordStartAngle","chordGroup","labelAngle","setPrivate","linkRadius","_getLinkPoints","_updateLink","chordLayoutItem","startAngle0","angle0","startAngle1","angle1","display","ChordLinkDirected","_ChordLink","ChordDirected","_Chord","_markDirtyKey","ChordNonRibbon","_linkRadius","_chordLayoutItem","sourceSlice","targetSlice","SankeyNodes","RoundedRectangle","rectangles","updateSankey","SankeyLink","document","createElementNS","sourceNode","_disposers","markDirty","targetNode","isPrivateDirty","_clear","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","_ref2","_ref3","_ref4","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","dy","kxb0","kyb0","kxb1","kyb1","segment","_fillGenerator","middleSegment","_strokeGenerator","_svgPath","setAttribute","_totalLength","getTotalLength","_positionBullets","getAttribute","getPointAtLength","toGlobal","sum","valueof","targetDepth","depth","justify","sourceLinks","center","targetLinks","ascendingSourceBreadth","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","defaultLinks","find","nodeById","Error","computeLinkBreadths","Sankey","py","linkSort","align","iterations","sankey","_step4","_iterator4","entries","_step4$value","_slicedToArray","_step5","Map","_iterator5","_step5$value","_step6","_iterator6","_step6$value","computeNodeLinks","_step7","_iterator7","fixedValue","computeNodeValues","current","Set","size","_step8","_iterator8","_step9","_iterator9","add","computeNodeDepths","_ref5","_step10","_iterator10","_step11","_iterator11","computeNodeHeights","columns","_ref6","_step12","kx","_iterator12","floor","layer","_step13","_iterator13","computeNodeLayers","c","_step14","ky","_iterator14","_step15","_iterator15","_step16","_iterator16","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","_step17","column","_iterator17","_step18","_iterator18","_step18$value","v","targetTop","reorderNodeLinks","resolveCollisions","_step19","_iterator19","_step20","_iterator20","_step20$value","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_ref7","_step21","_iterator21","_step22","_iterator22","_step23","_iterator23","_step23$value","_step24","_iterator24","_step24$value","_step25","_iterator25","_step25$value","_step26","_iterator26","_step26$value","_step27","_iterator27","_step27$value","update","nodeId","nodeSort","extent","d3sankey","area","line","d3Graph","_d3Graph","_d3Sankey","fillGradient","strokeGradient","vertical","curve","d3Sankey"],"sourceRoot":""}